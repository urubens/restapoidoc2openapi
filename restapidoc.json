{
   "basePath": "http://demo.cytomine.coop",
   "apis": [
      {
         "jsondocId": "06efe057-e6bf-4fa5-82bb-666ea18a7861",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "79625351-5791-43f5-9a88-33002b3f64b6",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an image",
               "methodName": "show",
               "jsondocId": "a639775d-8b20-4b5d-8e82-d2946c3a3662",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "cc31c9cf-1f08-4713-be6d-3c4d65225524",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "99eae3e3-c4c4-4194-9deb-d5977f73b102",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "aaae323b-10f2-497b-8e31-6e874b60dc42",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "08b0133f-1ae5-44c0-bd24-697fdfd3530e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/abstractimage/{id}.json",
               "response": {
                  "jsondocId": "df5f0ae6-8d00-47bd-9bce-abb8d75782f5",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract image"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "847f9244-fd37-4e29-bafd-eee4603229b1",
                  "name": "id",
                  "format": "",
                  "description": "The uploaded file id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an abstract image from its uploaded file",
               "methodName": "getByUploadedFile",
               "jsondocId": "87518694-083a-4c98-be1b-3a5768eea8d6",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "bd155241-ace1-4894-9f2c-d7a55aa287d3",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ae8e42bc-f3ca-4b69-87d6-1b5382fd0e7d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "9d3a07ea-1a5d-488a-aa34-4f207761aa29",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "0a0b4f93-3d8a-4a6e-924a-bba00cf95bfd",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/uploadedfile/{id}/abstractimage.json",
               "response": {
                  "jsondocId": "c598e0c0-7256-49c4-807b-c864597c864b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract image"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "ddf28ad8-bf81-4284-a5dd-f54469e1ce3e",
                     "name": "id",
                     "format": "",
                     "description": "The image id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "be23e0d9-7f42-4e40-9c5b-5ae9c2eb9086",
                     "name": "label",
                     "format": "",
                     "description": "The associated image label",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [{
                  "jsondocId": "acde19b8-1456-4ac2-be27-145d7cc878c3",
                  "name": "maxSize",
                  "format": "",
                  "description": "The thumb max size",
                  "type": "int",
                  "required": "false",
                  "allowedvalues": []
               }],
               "verb": "POST",
               "description": "Get an associated image of a abstract image (e.g. label, macro, thumbnail)",
               "methodName": "label",
               "jsondocId": "96d891b0-ecd7-42e2-a537-b473e6876c9b",
               "bodyobject": {
                  "jsondocId": "7b7c5a52-3a21-4c25-b0a3-8c0abd9884e1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract image"
               },
               "apierrors": [
                  {
                     "jsondocId": "18f6a287-f0fe-4364-977c-99b322095da4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ec155596-bb9b-448d-8ef2-21745cd10143",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0c8345dc-4fa7-4608-a387-591e48c4f79b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "141f3246-6d51-4b75-b2bc-a6af6f50d2c2",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "8f8780d7-cf3c-4768-8628-561a7587193d",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractimage/{id}/associated/{label}.png",
               "response": {
                  "jsondocId": "52497290-6878-4fd1-a5ae-30359a461301",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "9d53c214-2a45-4f11-8503-33f245588523",
                     "name": "id",
                     "format": "",
                     "description": "The image id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7e57962a-315a-459d-aad4-9690f0186e24",
                     "name": "label",
                     "format": "",
                     "description": "The associated image label",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [{
                  "jsondocId": "f2580aa3-7c57-443b-b9bd-fc26288f2f30",
                  "name": "maxSize",
                  "format": "",
                  "description": "The thumb max size",
                  "type": "int",
                  "required": "false",
                  "allowedvalues": []
               }],
               "verb": "POST",
               "description": "Get an associated image of a abstract image (e.g. label, macro, thumbnail)",
               "methodName": "label",
               "jsondocId": "139ce07b-5492-4c92-90d8-7f8503ad9089",
               "bodyobject": {
                  "jsondocId": "b8d41228-a62f-4010-a8de-62f73fdde76a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract image"
               },
               "apierrors": [
                  {
                     "jsondocId": "416a667f-2d4c-4472-83fe-3c28e9c2d8c8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "50c591eb-c123-4e79-925e-febf78ad4e6f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d58d5f2a-95a1-421d-867e-87cff486daa7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "0692608c-31cf-4c13-928e-a48880461437",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "8248db20-e4eb-4abf-b8f6-dfbcbedf6d0b",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractimage/{id}/associated/{label}.jpg",
               "response": {
                  "jsondocId": "cc62509f-714e-408a-8853-ba55a051830b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "8bd8d744-0d05-4802-994a-c9f44dd5b828",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "6c25c504-f6ce-4153-b3d4-789650fb3926",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9b369980-3bcd-4dbb-9db1-ae68ec42828d",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get available associated images",
               "methodName": "associated",
               "jsondocId": "4d78dd55-8c03-44a4-99b7-373e14afaf14",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "306b7e09-10b8-4a89-a302-07f66af00b75",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "170e2141-d0e3-4eb7-bc52-298bb07a6bed",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "bb5cd811-5ba8-4a18-8d5a-8e66e87b1c03",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "4baec8ca-9e11-4bc9-8073-82e5b49d9a0c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/abstractimage/{id}/associated.json",
               "response": {
                  "jsondocId": "771edaf9-b662-4453-b603-3b4bfa0849ad",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "associated image labels"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "db662be4-4ea2-474d-bd4d-cb7454f30027",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Get all image properties (metadata) from underlying file",
               "methodName": "populateProperties",
               "jsondocId": "c4747c61-a0af-4a9a-a692-2c23e7069504",
               "bodyobject": {
                  "jsondocId": "b732aaf6-6612-4737-8a95-d7445d81bf07",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract image"
               },
               "apierrors": [
                  {
                     "jsondocId": "8d371ae8-864a-4403-8a45-b093e3498008",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b09a6775-adeb-43af-bbdd-d422748bd7c3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "fb01ed27-0105-4266-ab71-3d2671625a6d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "0310a647-b491-4b72-b6d2-95f831892dbb",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "e374d740-421f-49c9-90df-133e849a58df",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractimage/{id}/properties/populate.json",
               "response": {
                  "jsondocId": "d2f18213-485c-4a8e-b88d-b8ed8daace76",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "49cd9a07-fab1-4471-9e59-c570c5d33b16",
                     "name": "id",
                     "format": "",
                     "description": "The id of abstract image",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "705f616d-3094-4069-a87e-329b328f1e1f",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ab3a1b31-ac95-41bc-85df-39b0d60817a9",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all unused images available for the current user",
               "methodName": "listUnused",
               "jsondocId": "fff8a6b9-54ab-4762-9b16-6f9682aade12",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "6d27bc87-c7cd-40c7-add1-d744dfa1ede8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f723fe25-0009-4e14-aa4d-0604d27e84d4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0ea66611-83eb-4625-8c01-666cec32ea3d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "dbc75ce4-7a12-44f9-81a0-289615224591",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/abstractimage/unused.json",
               "response": {
                  "jsondocId": "cfd7362d-2258-4e4f-a7e5-0ba793366deb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract image"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "ca3e2fea-a484-4b1c-bc1f-9e8b9e48deb2",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get histogram statistics for the whole image",
               "methodName": "showHistogramStats",
               "jsondocId": "4ba1d791-69bb-4a7e-8e98-074dbbde1f61",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "484ffbea-3e15-441e-b4b3-4725ad53b35b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "967a9029-a89d-471b-a956-95cb5b70c2c0",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ce9e5217-78db-43e9-ae5a-b87e2d6512b6",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "5c806f50-6e25-4535-a41a-e7e45ea9315a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/abstractimage/{id}/histogram/stats.json",
               "response": {
                  "jsondocId": "8ab5d20f-5ce1-4e96-ba93-c82d1bbb8d82",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "3b959387-3a42-4cdc-97f1-794eb6c5db71",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Delete all previously saved image properties",
               "methodName": "clearProperties",
               "jsondocId": "150a9687-6983-4f5b-8651-6beab487c9e1",
               "bodyobject": {
                  "jsondocId": "485910f5-69c0-49e0-a73a-de2e4df57453",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract image"
               },
               "apierrors": [
                  {
                     "jsondocId": "42815a9d-12cf-4197-b52d-9cee366a642d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a0700b1b-7d3d-4a56-8d8a-40b289ad77dd",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d7b7f0e5-a3e1-4d48-a0f5-2ecb99eeafec",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "23604f70-4930-4acb-9460-2b3a0d2ac9bc",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "9d2d1224-40cf-4529-8fbf-266402909f95",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractimage/{id}/properties/clear.json",
               "response": {
                  "jsondocId": "ef545cc8-1ac8-46d9-9a5f-e46088fb1974",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "edff69fe-7fe8-48f5-bb95-3d134e7ffd1e",
                  "name": "id",
                  "format": "",
                  "description": "The abstract image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Show user who uploaded an image",
               "methodName": "showUploaderOfImage",
               "jsondocId": "eb04ade9-1509-4eec-b209-671fd45fdddd",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "6eba4234-c3ad-4415-8409-934d8839728e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7c3dc1c3-377e-49a6-a24f-21a83f2a5e2a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "04548861-263e-4eff-a3e7-8ce39f5d1965",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "5f41cefc-a453-4916-aff4-1409e8a98047",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/abstractimage/{id}/user.json",
               "response": {
                  "jsondocId": "f95255b9-7676-4ecb-b8e2-ab31b4b2a6cb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract image"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "c0fdebe4-f5b1-44ad-a52d-c59c641a89a3",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Compute histogram for the whole image",
               "methodName": "extractHistogram",
               "jsondocId": "2161e8e1-b80d-475b-8426-204890f9d831",
               "bodyobject": {
                  "jsondocId": "68991bcc-a245-416d-a656-e4fe4bdb11c3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract image"
               },
               "apierrors": [
                  {
                     "jsondocId": "3db8e5de-0cab-4044-a75f-41b14cf20253",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "de679c29-726d-4131-b520-bc750ba53831",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8c6929a6-dc61-4903-82d2-61b41746016b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c385fe4c-f714-49ae-a770-35aa7dad75a3",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "7a5a431f-e91a-4e1e-81a9-223e2f5a7dc8",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractimage/{id}/histogram/extract.json",
               "response": {
                  "jsondocId": "d92d1f3a-4148-4102-ba79-2c8140128be1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "6370ec92-1e43-43dd-867d-17a8d0635e05",
                     "name": "id",
                     "format": "",
                     "description": "The image id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6bf2af55-c97e-4eb8-bc95-5bce85e50fe4",
                     "name": "deep",
                     "format": "",
                     "description": "True to fill property slice fields",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "POST",
               "description": "Fill main image field from image properties",
               "methodName": "extractProperties",
               "jsondocId": "2ed5be52-b143-4dee-9007-c0efbd9e8ae4",
               "bodyobject": {
                  "jsondocId": "0a873e39-3a3a-4d72-9d21-e5094e3855a6",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract image"
               },
               "apierrors": [
                  {
                     "jsondocId": "74ba3949-6117-4de9-94bd-046b0084fe1b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a09f71a5-8e12-4df6-87e9-33d4f2bb1985",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "324f35f7-2e65-44f0-9e1c-fca2fed6cbe5",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "9239eb84-6298-4121-bf94-653194d560f2",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "4837a58f-877c-45cd-b986-14aee8b56cba",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractimage/{id}/properties/extract.json",
               "response": {
                  "jsondocId": "b6221683-b76b-44ef-83ee-0578281c3c1b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "0da097a6-4407-47b5-b7ce-e1132926b11d",
                     "name": "id",
                     "format": "",
                     "description": "The image id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a0784ac2-28ed-41aa-9eb8-28f1455d4c9f",
                     "name": "deep",
                     "format": "",
                     "description": "True to fill property slice fields",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "POST",
               "description": "Regenerate main image field from image properties",
               "methodName": "regenerateProperties",
               "jsondocId": "9ba3e909-d855-4894-aa90-d320413eafe2",
               "bodyobject": {
                  "jsondocId": "9c504e40-461c-4962-b1bf-e5296c859c0d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract image"
               },
               "apierrors": [
                  {
                     "jsondocId": "977e9f86-e3b5-4e21-a845-70595ddda4a2",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f4820599-d182-44aa-b720-b9a730f383ca",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e14d1a45-3d1c-434d-b7c1-f4fdaeb94c9b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "8d76db3a-67db-4670-af8c-e44a7a7eae62",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "b8683f87-12c8-46b6-9633-e648b1aa8cf4",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractimage/{id}/properties/regenerate.json",
               "response": {
                  "jsondocId": "6cf22c66-05d8-4774-99fe-6b976907683c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "07debf4b-0ce3-423b-bf45-ea978813a800",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "84ab7718-8bda-4d35-a9cf-f4dc0c74b35a",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "dd958c66-cc71-4aae-a25c-50b03c4daa92",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all image having an instance in a project",
               "methodName": "listByProject",
               "jsondocId": "e7e6782e-bba2-4ef7-8a83-ea66d049446b",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "cb6e539a-ae62-4495-9406-2bd15d2363d3",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "19bcee97-40d7-4796-8bba-b21e0f1884ba",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8a84dbe7-e7e3-4162-aaad-12801f527aed",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "da2cd8e3-45aa-438c-a5c0-2dc45c98931c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/image.json",
               "response": {
                  "jsondocId": "94736ba0-074f-4eca-bdf2-1f89dc4f1b08",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract image"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "6003d2a6-a584-41c3-8c8b-3138526505ce",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "cef50d5a-670a-42ca-8128-1f7fcf265901",
                     "name": "refresh",
                     "format": "",
                     "description": "If true, don't take it from cache and regenerate it",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "87ee0071-11cb-4925-824d-9f01e1dd934e",
                     "name": "maxSize",
                     "format": "",
                     "description": "The thumb max size",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ef3f2a9a-17c5-4a7e-a6ac-32183202c228",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "676f5da5-0fcc-4b83-8d69-e58e0dd5b1a4",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c4ca20fe-8891-4374-b668-3a3dd4631bd3",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "49e0da21-d2b2-4c72-a063-9ed23232687a",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6dacdbac-75bd-40d2-b7da-85c336e152ae",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Get a small image (thumb) for a specific image",
               "methodName": "thumb",
               "jsondocId": "5f45d589-98a0-4215-9bff-a7fb938e42b3",
               "bodyobject": {
                  "jsondocId": "4d6c1eaa-a0eb-4a98-b8d4-80e38f9eb385",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract image"
               },
               "apierrors": [
                  {
                     "jsondocId": "002cd10f-f1dc-4bae-b71e-e7648131649a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "165c0572-d700-4214-bafa-9f5fdf249901",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e4299bf0-cece-46e2-9269-57d28067cc29",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "953b40b9-0e5d-4319-9e27-4bfa03bd35d3",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "0e1c9abe-c5ef-4269-bff6-45fa14c67cc1",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractimage/{id}/thumb.png",
               "response": {
                  "jsondocId": "3b421179-be12-4983-9b77-d7aa12768ec3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "799ee342-8d55-4f9c-99be-17a51481ddc8",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "db3673f1-0ed2-4297-9efa-5502901a7192",
                     "name": "refresh",
                     "format": "",
                     "description": "If true, don't take it from cache and regenerate it",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1b62d010-6bf9-4be1-9c83-44319e36cfc7",
                     "name": "maxSize",
                     "format": "",
                     "description": "The thumb max size",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7e7a4bd2-d735-4260-b94b-70b65aa755a4",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "07ede057-85ba-4d7a-a2e3-ab761c11cf46",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ccb60a73-8139-46d0-a93b-8ddbaf28c301",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b9d36098-e2bf-4fd9-ae92-7936fb95a57f",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "44282536-2368-4f7b-bc36-0747a6995d3a",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Get a small image (thumb) for a specific image",
               "methodName": "thumb",
               "jsondocId": "ba4ebc74-146c-4659-a438-14affee8c4e6",
               "bodyobject": {
                  "jsondocId": "5e5915b0-50c2-43e8-9cf9-178fc225a796",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract image"
               },
               "apierrors": [
                  {
                     "jsondocId": "e9b1aec2-6114-44a1-b7f9-13bb5fd25f3c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "00ad5bb6-d46f-4ea7-9c46-e40f27a4963d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8521e225-8c91-437d-afea-9d57d3b1251c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ea8a5e2b-6e76-42df-be60-8022be456ded",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "58172065-00be-423c-9e03-c20f2345e124",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractimage/{id}/thumb.jpg",
               "response": {
                  "jsondocId": "91cceb10-c447-42c9-8ef3-c80bcd02e273",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "e379ea06-7c52-4894-93f7-fb23447b7f32",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "b95ff619-550f-4e7e-a703-e46ad0ea0fbb",
                     "name": "maxSize",
                     "format": "",
                     "description": "The thumb max size",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b5f0bc4a-02d6-4613-9639-132be12904bf",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6ba7cbd2-6642-439d-8eac-5ea28e83ae80",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "91593521-1111-4684-b3bf-e83e629b8cd2",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "27c5edb0-867d-4325-ac0b-78bb9f09bd09",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "caddaca8-0a4b-4965-9a01-74949851853b",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Get an image (preview) for a specific image",
               "methodName": "preview",
               "jsondocId": "46f0d873-d46e-4436-8035-23283740d082",
               "bodyobject": {
                  "jsondocId": "dfd64d15-43be-4e50-92f1-04ac371b0886",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract image"
               },
               "apierrors": [
                  {
                     "jsondocId": "ac45b7ea-896d-47d8-945e-756559dc44d7",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "17ddb70c-5b3a-4bbe-b2b3-563a00139979",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "099d83b9-5689-48bf-8457-115ca1dba5c2",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f95c2998-ce75-4bd2-86cd-651d98fde3d4",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "71aab41e-ca0e-458a-a0b2-7ed2d7fee04b",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractimage/{id}/preview.png",
               "response": {
                  "jsondocId": "79b782f4-28c8-4efb-b6b8-428474e33bec",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "75deba7a-3959-49c2-ac91-b309a16ac69d",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "800f9743-de26-4d9e-8428-2cd936583161",
                     "name": "maxSize",
                     "format": "",
                     "description": "The thumb max size",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "496c40fb-a04e-48d8-8e45-1df76a2b3813",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "dfed9736-87eb-416f-9354-9903b9390f22",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d0cc1dad-0b2a-4912-a819-2f66731ab839",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "88a05deb-a2a6-4af4-8b47-063467b14506",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8bdf4b45-43ca-4e0d-963e-fb6ccb6ab065",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Get an image (preview) for a specific image",
               "methodName": "preview",
               "jsondocId": "ea322407-6b6f-4c49-9763-bd220cdafc5a",
               "bodyobject": {
                  "jsondocId": "3c3c0435-6a2f-47e6-a7a4-07632dab523b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract image"
               },
               "apierrors": [
                  {
                     "jsondocId": "3c6e0af0-e802-4368-a3ee-a5062871fdf2",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e47d7a60-903f-41cb-9696-77007fce71d5",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4b13f02c-5a6a-44a6-9f8d-aee073c9c08c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "89c61c61-5968-4a75-be01-c97fdd66d477",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "de2afd71-a522-45da-bd2d-8a6847c1589c",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractimage/{id}/preview.jpg",
               "response": {
                  "jsondocId": "d8123232-64d3-433f-bc10-4a4c2d8e582d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "9112b38d-d01e-4db3-bc89-d538932ae7e6",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get all image servers URL for an image",
               "methodName": "imageServers",
               "jsondocId": "e2f4d791-a202-4866-9834-d3979c98194e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "6ddf1984-c116-4d57-afea-ffa71cde31de",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "53e70a4e-5b77-4845-b900-c88e648e348f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "26b4f224-c45f-40e7-9a53-386089203d83",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6831afad-d21f-4292-849b-164c86f0076b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/abstractimage/{id}/imageservers.json",
               "response": {
                  "jsondocId": "413a6fb8-4b6c-40aa-8d31-f86b73e188bf",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "URL list"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new image in the software. See IMS to upload an image",
               "methodName": "add",
               "jsondocId": "dfa7f242-7fa2-454a-aea3-48d7c3033dd9",
               "bodyobject": {
                  "jsondocId": "0309b569-cf6f-499e-a794-16dcda2dab98",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract image"
               },
               "apierrors": [
                  {
                     "jsondocId": "76e7af68-c4e6-4008-a227-bd60f57fabb2",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6a3293a4-9f87-44d8-b030-7d0daa7a7221",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d2a52293-273d-4a01-80b2-229d49315ba0",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "462f693e-37e7-4008-9122-ec02683614f8",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "931cd063-a8a7-4a1d-ac50-eb16381d1292",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractimage.json",
               "response": {
                  "jsondocId": "57de8473-e49d-4f67-a99b-54c004270f34",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract image"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "6fb0409e-8f22-44ed-9fb9-a45db1c98c26",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update an image in the software",
               "methodName": "update",
               "jsondocId": "a1d137b5-141c-4b90-8fc8-a6662de14649",
               "bodyobject": {
                  "jsondocId": "5072ebcd-486f-4bcc-93ff-d7fb3b65b469",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract image"
               },
               "apierrors": [
                  {
                     "jsondocId": "f49469b6-1e3d-4232-a836-ba6c6f48f395",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "10d4b40c-8859-4327-8c56-29ea401ffb7d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d29e872e-1130-4f5e-881b-f69c58d8d8b9",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "4c36c8ae-da93-4688-882b-bf6c2797b432",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "72d09e72-44e1-4440-baae-8137e92ee93b",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractimage/{id}.json",
               "response": {
                  "jsondocId": "7e3990ef-a0cb-4b76-a8b2-4fa80f9a665c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract image"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "5477c9cd-f41b-4f66-bf6b-0e22befcc706",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an abstract image)",
               "methodName": "delete",
               "jsondocId": "15e9c030-eb47-484d-a966-0eea97a8afcb",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "665fd7d1-899b-4da9-b35d-d3060decfee5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c211157c-d1fa-49bd-bbce-1913850c5edf",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "019e36f6-95d1-4b41-b246-81113cf1b97b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "43d4d141-072e-4bbc-919f-6955f801b884",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/abstractimage/{id}.json",
               "response": {
                  "jsondocId": "bb17872a-4be3-4615-81fd-2a897307e628",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract image"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "31382b60-c669-4bc7-b706-c84106983218",
                     "name": "project",
                     "format": "",
                     "description": "If set, check if image is in project or not",
                     "type": "long",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b3d1914e-e172-4ab9-881e-39b2a75defff",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8d0232fc-7545-4f5a-8aad-f2297c398d2b",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all image available for the current user",
               "methodName": "list",
               "jsondocId": "52bfb156-1bc4-407b-9704-03a837781ff7",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1759b20a-e152-4ecc-819e-404e6cefe97c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ce27e544-743a-4371-aebd-746c8b8be9c9",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "207feae8-80ca-4920-b2ac-4520a3d70099",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ec158419-4317-432f-84bd-00accbf6be14",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/abstractimage.json",
               "response": {
                  "jsondocId": "0aa04e69-3617-41cf-bd7e-75f2af5eda87",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract image"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Image | abstract image services",
         "description": "Methods for managing an image. See image instance service to manage an instance of image in a project."
      },
      {
         "jsondocId": "0e1fa0e9-a025-4824-b4fc-bf61d81fec8f",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "2450ef72-e355-4661-bc16-01a9f9254db9",
                  "name": "id",
                  "format": "",
                  "description": "The abstract slice id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an abstract slice",
               "methodName": "show",
               "jsondocId": "3493c39c-d272-452d-89fe-bcc64a401fe1",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "f5eafa94-6162-43c6-b127-8c71bc7a4ce8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "05186c25-2d44-40e6-951c-f81382d06e0a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "fce47086-4b29-41ed-a4ed-f92180eddeda",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "85ef0462-ca87-4e83-98a2-c2190bbfd1f6",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/abstractslice/{id}.json",
               "response": {
                  "jsondocId": "fb0c314d-4b2e-439c-b6d2-99bbc1626b8a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract slice"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "aad1bd32-0614-4444-a9cf-9f7804b767c0",
                  "name": "id",
                  "format": "",
                  "description": "The abstract image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "731a7465-2dd6-49c3-bcdd-b3bdb8b47280",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ed6d3b1a-370e-4e84-a6d8-dbd326071fd1",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all abstract slices for the given abstract image",
               "methodName": "listByAbstractImage",
               "jsondocId": "9f21cc36-9027-4cfa-9da6-57e6f5b0425a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "bab2db61-f8a5-41d7-92de-6b883edb2a7e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "74071ee4-317e-41f2-9ea6-1040aa33f856",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "30e496e1-6dc0-443a-ac54-17789f5a5f42",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "2f38a1e1-1b35-4f26-9771-7f5556b620e9",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/abstractimage/{id}/abstractslice.json",
               "response": {
                  "jsondocId": "9b6e8477-57d8-4a0c-bd8d-1458a6def18d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract slice"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "21c5f8a0-3e59-4321-8cae-a141fdc0231a",
                  "name": "id",
                  "format": "",
                  "description": "The uploaded file id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "e316d16a-4939-499d-b9ca-7e8b508d9b66",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "619db5ec-c53f-4dc6-873f-667ce5f84775",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all abstract slices for the given uploaded file",
               "methodName": "listByUploadedFile",
               "jsondocId": "c364670a-4b66-4992-b8f8-b07db75d8190",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d653c4e8-4177-4643-813f-c95ca7c2d149",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ab164c13-b0bd-41ca-a2c2-e0b996eb5343",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "31e1816d-41cb-40c8-ac8f-3b8919e31434",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "dd9b7be0-4d1c-4b63-a4c7-e3ffcb00c138",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/uploadedfile/{id}/abstractslice.json",
               "response": {
                  "jsondocId": "b31b47dd-c1cf-43a5-b621-8769491bea9d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract slice"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "0ca98446-38d3-4c23-b159-800ccfb98ece",
                  "name": "id",
                  "format": "",
                  "description": "The abstract slice id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Show user who uploaded the slice",
               "methodName": "showUploaderOfImage",
               "jsondocId": "c5c01a39-97f1-402a-8638-cad5985fc2c3",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d9a001f5-5e2e-4f62-9813-74f8ecf74d18",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "80591246-d434-4719-b996-e189a33ae49c",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "9c994828-0489-4335-b409-f1f029efb9c4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a17e0a00-72b5-418a-b7e5-871d379839bb",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/abstractslice/{id}/user.json",
               "response": {
                  "jsondocId": "eb95a210-2e62-45b2-9535-c95adbf395d3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract slice"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "2b1c172a-3189-447e-bb8f-5f3ce591f675",
                     "name": "id",
                     "format": "",
                     "description": "The abstract image id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ab57c96a-2c94-4b8d-87fb-63ef52474440",
                     "name": "zStack",
                     "format": "",
                     "description": "The zStack coordinate",
                     "type": "double",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4309badf-0a17-42d3-9c89-adca86e8beb0",
                     "name": "time",
                     "format": "",
                     "description": "The time coordinate",
                     "type": "double",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1e086504-e6e1-4b77-928d-fa293f2e8b05",
                     "name": "channel",
                     "format": "",
                     "description": "The channel coordinate",
                     "type": "double",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get the abstract slice for the given coordinates and abstract image",
               "methodName": "getByAbstractImageAndCoordinates",
               "jsondocId": "020f00cc-087c-4a23-a5e0-46555560c93f",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "cfbc05ae-8786-4423-b150-dd0220e700e1",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "223fee31-ccd7-4b45-a1e6-2fac2d03335a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "195ce205-6b05-4e2d-a9c8-0fdf3e2173ca",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a2b459b8-5619-49f0-accd-954ce688277c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/abstractimage/{id}/{channel}/{zStack}/{time}/abstractslice.json",
               "response": {
                  "jsondocId": "491f57b0-832d-4704-ae3e-dc7a5c6c40fb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract slice"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "66aa7afe-29e6-4cdc-b595-7acd1d292397",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "d45c2d19-4086-453d-bcde-ca967170de8f",
                     "name": "refresh",
                     "format": "",
                     "description": "If true, don't take it from cache and regenerate it",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d34833d5-a19d-40d2-8f9a-755cf9726f5f",
                     "name": "maxSize",
                     "format": "",
                     "description": "The thumb max size",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6fe8a997-8d2d-42f9-a97d-6e06fee058da",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9de6577f-2c6d-497d-bf41-15fa1c857e5a",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d8c8b4bd-9345-4dd6-99aa-6560769786e8",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "bd87a5fc-0456-4cc2-9a0a-8be4d94f5be8",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7efbfdfb-1632-4478-bc3b-68816ec60607",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Get a small image (thumb) for a specific slice",
               "methodName": "thumb",
               "jsondocId": "5b321c65-25ad-4422-9408-413db8f3ab98",
               "bodyobject": {
                  "jsondocId": "ee751837-0be0-4cd0-91e1-a05c10fe4979",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract slice"
               },
               "apierrors": [
                  {
                     "jsondocId": "ea35b98f-efbd-4115-970e-14161f45813c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b98ca5fb-91d9-42fa-9554-49757e7b0c24",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d58b221b-2e9b-4f20-b2f0-83338a7b235a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "4f5f2b66-06d1-4fa4-8863-e163194012f3",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "c89c8f44-9efb-4277-9f5d-b21bb98fad0d",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractslice/{id}/thumb.png",
               "response": {
                  "jsondocId": "69e562b6-7758-41b6-9ce9-f3cbcb3cce76",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "0db910a6-462c-4e44-9c3a-a465035676df",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "4172c5f4-1261-4d30-bbf7-5fbd273704dc",
                     "name": "refresh",
                     "format": "",
                     "description": "If true, don't take it from cache and regenerate it",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "67f70dbc-c383-4e1c-8649-5fb9b5ec068c",
                     "name": "maxSize",
                     "format": "",
                     "description": "The thumb max size",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "20c461db-a11f-4f4f-8909-a6b682e56836",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ebe4d697-3c19-49c0-9a0e-deafcb73ddaf",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "244658ce-89fc-40db-a2ba-f38b3caaa615",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ce402793-4490-4414-9e79-35b182c73c7e",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "83f42e46-2673-4740-ac36-1d20987c2c05",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Get a small image (thumb) for a specific slice",
               "methodName": "thumb",
               "jsondocId": "ba653d01-f56d-4143-89ee-2cc4471250d1",
               "bodyobject": {
                  "jsondocId": "f78cd0a5-3cb9-4ff2-adc9-7daa059fec3a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract slice"
               },
               "apierrors": [
                  {
                     "jsondocId": "9d82564f-7a8e-499f-82f1-e9adb242e9e5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "3627af1c-1904-456d-8a16-dcfe5e254076",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c61fd7e3-38e4-4743-9b6f-488e4cf4e485",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6323d8f1-6c65-4fbc-988a-76303b6807a4",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "7aa5274a-fb0f-4b12-96a7-508d4fc6c0e9",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractslice/{id}/thumb.jpg",
               "response": {
                  "jsondocId": "70b9d5ad-ed33-4920-9564-b8bd595cc160",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new abstract slice. See 'upload file service' to upload a slice.",
               "methodName": "add",
               "jsondocId": "e5c398bf-5149-497b-9d9c-5f8981a99598",
               "bodyobject": {
                  "jsondocId": "4568572f-a388-4b0d-a2b8-b7b62e6f7ae8",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract slice"
               },
               "apierrors": [
                  {
                     "jsondocId": "6233cd3d-cbf9-46fd-be5a-2777668242a6",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b4249565-aaf0-4dba-8dad-5da55eec5ade",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "02eb4c1c-efce-4a5c-9c14-7036623c8878",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "55b317f2-d31f-466c-b004-d3a50d1d0338",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "1a67c0b4-a6cd-40fa-9c56-b1bd33c67ec6",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractslice.json",
               "response": {
                  "jsondocId": "a369dcb3-132b-4e26-81b8-9614fc7550dc",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract slice"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "a620d8bd-fe30-460f-8bab-a4ec01e0f935",
                  "name": "id",
                  "format": "",
                  "description": "The abstract slice id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update an abstract slice",
               "methodName": "update",
               "jsondocId": "3624dc92-54b6-41e5-a9c6-8f3beb2dbb09",
               "bodyobject": {
                  "jsondocId": "653ed751-5b7f-4631-bec3-ba66e47b8d12",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Abstract slice"
               },
               "apierrors": [
                  {
                     "jsondocId": "9edd322d-b277-4017-8cc0-1027f88446d6",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "fbf544d1-9654-4be1-ae09-eb9e5adeb127",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "59ac256b-f3f0-41ef-9361-9193b6e47077",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "4e507199-5d89-4678-8c7d-fb8b86cc716d",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "5fa7e245-0524-4872-8047-087297959135",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/abstractslice/{id}.json",
               "response": {
                  "jsondocId": "1ce7b6ca-6155-4f84-a429-3e0847ff898b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract slice"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "f7879932-70e0-4b1b-ac3b-e0133e6ebb07",
                  "name": "id",
                  "format": "",
                  "description": "The abstract slice id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an abstract slice)",
               "methodName": "delete",
               "jsondocId": "22d6c076-00c4-4a0c-8cf8-dd91172e7029",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "05d0ec10-c6dd-4b03-9e88-ebbd79a3de01",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "49ee49ec-b241-4400-836b-435ca4c72c9a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d8fed808-dbb7-46d2-a853-04bbdee41d1d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "4354c859-c848-4f2b-a1f4-4b98a0433e68",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/abstractslice/{id}.json",
               "response": {
                  "jsondocId": "bc12ca58-4f77-4e4e-a1bd-2cbb87a44860",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Abstract slice"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Image | abstract slice services",
         "description": "Methods to manage an abstract slice. See slice instance service to manage an instance of a slice in a project."
      },
      {
         "jsondocId": "ffb99f5d-90e3-4eda-98ea-c243571a37a2",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "5ab84aee-1f94-4533-ab16-8bf8570c61ad",
                  "name": "id",
                  "format": "",
                  "description": "The companion file id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a companion file",
               "methodName": "show",
               "jsondocId": "1e8578a4-f9aa-42f0-a29d-2806992fd2f4",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "712be3e2-171c-4f3c-b87d-5d440a654d8f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f69f3097-8539-4c48-8c68-eec7933b2a2b",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7594830f-cbc2-4a22-8824-9884619ec262",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f235ce6a-3bae-4588-9fcb-d2851104842c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/companionfile/{id}.json",
               "response": {
                  "jsondocId": "961c16e0-68f0-4381-a509-24e3402eb577",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Companion file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "6a4735ab-8899-4256-a771-9855e7a37102",
                  "name": "id",
                  "format": "",
                  "description": "The abstract image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "24bb5dd3-efa1-48ce-b79b-a56fa9615aa6",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "abfc73bd-0b21-4a6f-8d47-d5ae80351a83",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all companion files for the given abstract image",
               "methodName": "listByAbstractImage",
               "jsondocId": "c601e9a4-c3ce-4e9e-9f68-7d1799cdedce",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "9fadb44c-eceb-4ca1-b02a-afe920e0d4a5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "88973d1c-9418-4543-b8a2-fed9fb8f4f31",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7c76273a-0489-4f6d-aceb-eb56cbe9d3fb",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "4c8384f3-c318-49ce-8f7d-b36b1098b95e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/abstractimage/{id}/companionfile.json",
               "response": {
                  "jsondocId": "25872bab-6861-4335-b01a-e9c4b95e8740",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Companion file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "426ebe97-a18c-4286-93a4-dd78c94f59c1",
                  "name": "id",
                  "format": "",
                  "description": "The uploaded file id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "74a2e6fd-c793-435b-9769-9f18a1ebe83d",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4f721e80-cb56-4304-a6cf-d7ba28f95182",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all companion files for the given uploaded file",
               "methodName": "listByUploadedFile",
               "jsondocId": "6e66be8d-394c-45f0-bf21-4c01c7c696c7",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "e482febd-1728-4b71-a8c4-7c12ba788376",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "413a2142-1673-44c8-aaa2-b4ab5efffaf7",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ab9d4820-e09d-42c0-bdb5-4873fac1dde8",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "64b9fabe-0d1a-469e-8cd4-d85aea7681d8",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/uploadedfile/{id}/companionfile.json",
               "response": {
                  "jsondocId": "98595ba8-0800-4b9f-acf5-9afff8feafde",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Companion file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "97b4b39f-9e8a-4f9a-8269-bfc8a1d2c76e",
                  "name": "id",
                  "format": "",
                  "description": "The companion file id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Show user who uploaded the companion file",
               "methodName": "showUploader",
               "jsondocId": "6a76a32c-36a0-4edb-8b24-68c3018d9ef9",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c383e608-a006-4385-8a5d-f53916203c7f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "3f25ec3e-31a8-47e8-8f4b-bbee6c24b603",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "3521df34-c0a2-41ba-9e0d-0a02fd657750",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "9ecbc17e-1340-41fb-9ba6-8ab0e560854f",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/companionfile/{id}/user.json",
               "response": {
                  "jsondocId": "775d4b0e-8053-4618-a60b-24d6c7779208",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Companion file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "f8de695b-4aea-4c7e-b37e-a895f8d64932",
                  "name": "image",
                  "format": "",
                  "description": "The abstract image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Ask to compute HDF5 profile for the given image",
               "methodName": "computeProfile",
               "jsondocId": "331f11a7-061c-4685-854d-ce8561fe6bd8",
               "bodyobject": {
                  "jsondocId": "a680c894-7dcf-4c2a-abe3-bf9881b88f24",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Companion file"
               },
               "apierrors": [
                  {
                     "jsondocId": "8b1782d9-416c-49c9-b505-de8a85bb505f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d5119efb-2a4c-4fd4-a52f-b34ccc163501",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d4bf5d56-b561-41f7-8732-67778e64338f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a55f6f4c-4e2a-4d0c-acf7-373697e1c705",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "eb9b50c9-95bc-4ca7-a4f4-8ba29423dd0f",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/profile.json",
               "response": {
                  "jsondocId": "63f9c336-c96a-4f3b-8a28-ae0a03a40704",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Companion file"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new companion file. See 'upload file service' to upload a slice.",
               "methodName": "add",
               "jsondocId": "d9eb3e48-550b-4572-a18b-a530e59756d9",
               "bodyobject": {
                  "jsondocId": "0fa3cd52-9149-4286-af6a-31fdfc06f485",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Companion file"
               },
               "apierrors": [
                  {
                     "jsondocId": "55d364bd-3881-402d-a08b-62c9b62e7204",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "63db2c50-59ae-49ee-8fee-c6cac7545696",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e4baef6f-59d3-4395-a691-ac32a78a4566",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6e63c732-66d6-4c17-93d6-091398737248",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "a0f02cc9-c7f1-422f-8497-842466b699dc",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/companionfile.json",
               "response": {
                  "jsondocId": "704c712e-2e63-4c35-b031-80894816a904",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Companion file"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "6c887b59-d8ef-4ec4-99e5-732a6fabca99",
                  "name": "id",
                  "format": "",
                  "description": "The companion file id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a companion file",
               "methodName": "update",
               "jsondocId": "569f8e4a-e7c4-4e55-aed8-df61e7ca3a73",
               "bodyobject": {
                  "jsondocId": "c2e4acd4-6184-4a95-a5f2-f7250aad9dd1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Companion file"
               },
               "apierrors": [
                  {
                     "jsondocId": "0d8d1e71-85a0-4bca-b69b-d960eeb7b525",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f6d1ad87-9b0c-4fc8-95ec-4bd05b6101eb",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "dad6f299-6314-4383-9fe3-9a85dcc0da8a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "bcfa7993-ec7b-4104-8c5b-73a6684006b0",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "d343c32f-b57d-40f0-a442-1357c198bee6",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/companionfile/{id}.json",
               "response": {
                  "jsondocId": "506cf9f9-3b5a-4871-81b4-1b4173202fc2",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Companion file"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "045f499b-a572-4f14-9269-7b1adbfb7941",
                  "name": "id",
                  "format": "",
                  "description": "The companion file id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a companion file)",
               "methodName": "delete",
               "jsondocId": "16e237f5-60dd-47b0-b7dc-a4806f1a6704",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "b824765c-62ce-4b87-a0c7-9ea1ea4465ff",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "09da528f-09ea-4c9a-9f43-5ee63a4395c0",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e8a2353a-af78-4954-ba02-a7f3007dbb01",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "1d32531b-8371-461f-a17d-ad073e8eeb05",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/companionfile/{id}.json",
               "response": {
                  "jsondocId": "87dd3760-be48-4dc3-8ec5-3e5d3835520e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Companion file"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Image | companion file services",
         "description": "Methods to manage a companion file."
      },
      {
         "jsondocId": "b388aa0d-c719-434f-be63-5d06fd35c4ee",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "23474175-5288-4ba9-88e6-6af2b0d973d7",
                  "name": "id",
                  "format": "",
                  "description": "The image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an image instance",
               "methodName": "show",
               "jsondocId": "6e11b500-453f-482c-adf4-f0b87fa2c9b6",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "430d7850-1d55-40b3-af88-e033b750c713",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "91f3827a-6f3a-4b6a-8fbf-27bc507d962d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "846953fb-f36c-48ed-bf35-33388ca44be8",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "208631f9-05ab-4d13-85ab-03e81f491492",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{id}.json",
               "response": {
                  "jsondocId": "5fbbd2ef-cb9b-4aa1-b932-8669c31cf91d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image instance"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "d6f9b6d1-2037-4e8e-b362-672d5bfc63f2",
                     "name": "id",
                     "format": "",
                     "description": "The image id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ea1065a4-d387-4ccb-959f-3c9d8afbbcdc",
                     "name": "label",
                     "format": "",
                     "description": "The associated image label",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [{
                  "jsondocId": "6d7a4466-99b5-4748-8c02-9542b69d6ff7",
                  "name": "maxSize",
                  "format": "",
                  "description": "The thumb max size",
                  "type": "int",
                  "required": "false",
                  "allowedvalues": []
               }],
               "verb": "POST",
               "description": "Get an associated image of a abstract image (e.g. label, macro, thumbnail)",
               "methodName": "label",
               "jsondocId": "0b684c3f-ba6a-4566-b901-e30de1c4a200",
               "bodyobject": {
                  "jsondocId": "0b975897-0c5d-4ae1-b762-9f00da1c7443",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "ecd3221d-e3bf-4fc7-929b-4473f473220a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "3287681b-fdfa-41d1-a6f2-3479719da96e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "21741a97-c023-4489-bc67-b79256bc9fbd",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "bea92e39-4714-4eae-99b9-3a0df36f111f",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "7335e6b4-f8f6-4e3f-a784-d65c5423da90",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imageinstance/{id}/associated/{label}.png",
               "response": {
                  "jsondocId": "b8255500-f6dd-497c-bfd3-a59c909d1feb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "94129f62-2e98-400b-adf8-29d35616b482",
                     "name": "id",
                     "format": "",
                     "description": "The image id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e3a218b8-3919-4763-b30e-3ded830460cc",
                     "name": "label",
                     "format": "",
                     "description": "The associated image label",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [{
                  "jsondocId": "7bcc23d7-72e8-42cd-b0b2-3941e9d88801",
                  "name": "maxSize",
                  "format": "",
                  "description": "The thumb max size",
                  "type": "int",
                  "required": "false",
                  "allowedvalues": []
               }],
               "verb": "POST",
               "description": "Get an associated image of a abstract image (e.g. label, macro, thumbnail)",
               "methodName": "label",
               "jsondocId": "5da15e42-f067-4fa1-9dcc-f5c5c9075c93",
               "bodyobject": {
                  "jsondocId": "e909dff6-c782-4e7f-9c12-06ed51ef88d0",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "9840aa33-d1dc-4492-843d-e780ff3df186",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7e17cf29-5d51-452e-a321-410a57e3b4bc",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "75f88a3b-7c10-4629-b9d0-dbec0c721ca0",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ef844cde-7c2a-4c28-afbb-3ad08297485d",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "6d76bbd8-b1dd-4525-af34-1b7688c157fe",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imageinstance/{id}/associated/{label}.jpg",
               "response": {
                  "jsondocId": "ab5270a9-677d-4881-a51e-069644405efa",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "90ae182d-37d5-45bc-8e9e-142916ad4858",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "cbbf9855-00e5-4b56-89e6-55b20c561cf6",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "870638e3-764b-4e6c-99c5-e5c1ab2032aa",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get available associated images",
               "methodName": "associated",
               "jsondocId": "af938749-11a5-4a43-b11a-9f39d2b72566",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ffddccb2-c873-4a3e-a3a2-d80205af984e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "5de171c2-f29c-4334-a9d1-bb4a28b8c2dd",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8032ac7c-cfd3-4948-924f-4c757a16ab04",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "455f17b6-e091-44d6-9991-6deede96d302",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{id}/associated.json",
               "response": {
                  "jsondocId": "a9a2b538-a985-411a-97bf-93ecc7a767c7",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "associated image labels"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "27d325cc-8178-4b13-bded-cc5937dd4b3d",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get histogram statistics for the whole image",
               "methodName": "showHistogramStats",
               "jsondocId": "3a67bdf0-2e2e-416a-993a-79552fede634",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "8a90cc4a-d5f4-42ab-a675-707afdc64517",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d6bdc6dd-1040-4834-8abd-8fff84f17d1b",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "2a5eab6a-f91a-4bc0-acdb-37b03b96a260",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "aeb906fd-ae1e-4203-9f84-7db88b605b54",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{id}/histogram/stats.json",
               "response": {
                  "jsondocId": "0d27d18c-5f59-4f41-ab47-93ef0c4c1bba",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "2e8adbde-02f5-41e0-a53b-c621692f5395",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Compute histogram for the whole image",
               "methodName": "extractHistogram",
               "jsondocId": "5aa2e0c1-eeb4-4842-a9e9-3ce70d525c1f",
               "bodyobject": {
                  "jsondocId": "3b4d291e-5697-4701-be4e-4452444c0d87",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "9501f977-8807-4516-9d86-3a096e04da6a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c1f7be88-ff99-48b0-801a-c9898374b58e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "afc091b1-7f4b-411b-9318-d0de497462b5",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6fcff03b-906c-463b-a806-99d2308ddfb7",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "0594847b-bee3-4ca5-99d7-0d933d02f956",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imageinstance/{id}/histogram/extract.json",
               "response": {
                  "jsondocId": "768d0b27-edc9-4300-8865-9a7541759179",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "6995c6af-2104-4696-a17b-ff3c89208572",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2d46dd9a-806c-427f-bf9e-f1ed7890c35b",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get the last opened image for the current user",
               "methodName": "listLastOpenImage",
               "jsondocId": "819cdefd-3185-4259-9105-a9922a7b5147",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "8d982983-a27b-4135-aad6-c40fe9c741d2",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "cd162d4d-5897-4a21-a507-9beb58ff4031",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "59de1116-b523-4102-9672-00a9e69cbc9f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "99c96a62-41f5-4b87-a3d4-b5839d31d7b1",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/method/lastopened.json",
               "response": {
                  "jsondocId": "627dea31-e99a-4f25-b4a1-e983f0fa5a4f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image instance"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "b6e01a9c-e962-4f07-a962-d1fd66229bdf",
                  "name": "user",
                  "format": "",
                  "description": "The user id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "dc5c6f09-9b84-4b6e-a1e9-c5855d8cd418",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c0362d4a-874d-4124-ae23-c2f9fbcbb08e",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a lighted list of all image instance available for the current user",
               "methodName": "listLightByUser",
               "jsondocId": "f600e1c1-de37-4b4b-93a8-e2fa8bd2955c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "8d510bb0-5517-4cd4-8dc6-968769c4515d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b2203444-2ed6-4f5a-9b87-31cc50955860",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "f2f87447-26db-40a2-8caa-d599d15fbb0f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d7146488-851a-44ce-b996-289fb9fd91a3",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{user}/imageinstance/light.json",
               "response": {
                  "jsondocId": "cbec450a-744b-49fd-858b-11def5ffa2b9",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image instance"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "8b7e04de-9b51-4ea6-8072-f259f144d238",
                  "name": "user",
                  "format": "",
                  "description": "The user id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "ce4e6389-eb0c-4909-b80e-b2ab6a678d9e",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2946fe7f-38f2-42a9-8c7a-a18febddc98e",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all image instance available for the current user",
               "methodName": "listByUser",
               "jsondocId": "1e844747-3658-4cef-93c6-7e9573d06bb3",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1505e43a-77bf-4475-980c-92fd772e9ae4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "feb9dd22-a1e9-4602-a887-118b316d94cb",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4848c75d-9e2c-4618-8307-8b7f884475a7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "74258d31-9469-40d3-9de8-62868a786b2e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{user}/imageinstance.json",
               "response": {
                  "jsondocId": "4b4c429d-75ed-4ae6-b726-94fa831adcab",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image instance"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "aee6279a-a24b-44e3-b353-172149540f77",
                  "name": "project",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "0ac35784-1301-4140-876b-d5b43e493f32",
                     "name": "tree",
                     "format": "",
                     "description": "(optional) Get a tree (with parent image as node)",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4f016fb0-5d31-457d-b9de-b8df01cc4394",
                     "name": "sortColumn",
                     "format": "",
                     "description": "(optional) Column sort (created by default)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "376ed55c-f142-419b-95e3-034ea16a84cc",
                     "name": "sortDirection",
                     "format": "",
                     "description": "(optional) Sort direction (desc by default)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7763365d-3cbe-4d85-8ea0-02a8464262e2",
                     "name": "search",
                     "format": "",
                     "description": "(optional) Original filename search filter (all by default)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "25706462-f7b2-4db5-9598-115f59c47468",
                     "name": "withLastActivity",
                     "format": "",
                     "description": "(optional) Return the last consultation of current user in each image. Not compatible with tree, excludeimagegroup and datatables parameters ",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9dce6b8b-a3da-4304-9492-2c1ca9d7bdd9",
                     "name": "light",
                     "format": "",
                     "description": "(optional, default false) If true, the returned list will only contain id, instanceFilename and blindedName properties. Not compatible with tree, excludeimagegroup, datatables and withLastActivity parameters",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "76e2e897-5825-4814-9d93-761be03c5ae0",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f33206ab-e1b7-40a8-88ab-700024257683",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all image instance for a specific project",
               "methodName": "listByProject",
               "jsondocId": "821bec0f-07ef-43ec-937b-3bb8e1a641f8",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "68ee0480-f3be-455b-a69b-eb7fc63d6eaf",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "5ba1a4f5-f61f-4350-a271-3eba3fcfba2e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c0787be7-c865-4dea-8b34-93fdc7dd4d36",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "bd19db15-4fc2-4128-ba27-a6969afcc81c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/imageinstance.json",
               "response": {
                  "jsondocId": "bfaf80d4-ca16-4784-b4d2-5be62c844000",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image instance"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "03f08d35-6ae3-45e1-861f-8e675eb94cd2",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "9259844a-8c91-437e-869e-1c877111c78f",
                     "name": "refresh",
                     "format": "",
                     "description": "If true, don't take it from cache and regenerate it",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0598293a-d5d8-472b-b967-bb84acb9d154",
                     "name": "maxSize",
                     "format": "",
                     "description": "The thumb max size",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4446e67a-44ef-4c7a-88db-42202dbb5f6d",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f24ed540-33ed-4b9b-a10d-6e739a844bf0",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5ff965b4-8b36-477b-b587-b6b36b289e12",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8f6bab2a-be45-434f-9070-1e0809b4783c",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "daa486ed-3991-4b09-b407-a65f52c5c5c0",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Get a small image (thumb) for a specific image",
               "methodName": "thumb",
               "jsondocId": "52a1286f-c3c9-46ee-83fa-505d00a00f08",
               "bodyobject": {
                  "jsondocId": "77cbeb9c-a4f1-480f-8c5f-3ce65424db56",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "99b09da9-447f-4a31-9ed0-c236a34c8527",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "fa64d897-3f3d-4be5-b0ff-bc7f60d2b753",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d5426e65-df77-4f96-b8d7-91f681c3c0e0",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "314af74b-5f5b-4768-8126-c57198d859e4",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "77fe439a-1b72-460d-b931-9e601a704fc3",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imageinstance/{id}/thumb.png",
               "response": {
                  "jsondocId": "8964063c-289f-443b-8ab4-7dbcfc5569eb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "96065a42-f3f0-43a1-b14f-b86ed6f41a15",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "37662528-aefc-4c46-991b-68f3636447bb",
                     "name": "refresh",
                     "format": "",
                     "description": "If true, don't take it from cache and regenerate it",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "50e872a7-0034-4e87-a395-bf835dc82ac6",
                     "name": "maxSize",
                     "format": "",
                     "description": "The thumb max size",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "30f018ee-a7ac-4439-a7c7-d13148e0b986",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1cc4e80b-94d5-46ba-aca9-c7624ba7a5a4",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c94114d2-9234-4a7b-b73a-9f3a46ce30c3",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8392c1c6-3fd2-4702-bf8a-e54f30a5573a",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "57621ec2-042c-4ec7-ae1c-dece79f71426",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Get a small image (thumb) for a specific image",
               "methodName": "thumb",
               "jsondocId": "86b1db0d-d18f-4519-9758-6c8b58efa4b5",
               "bodyobject": {
                  "jsondocId": "2fc56b96-4401-4e85-bd40-c06444fd42b4",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "c64b5cf0-614d-4cae-b595-8a9ff3faf2bf",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7108a7f8-e5a7-4bdc-a0dd-5f5be5c7ceb7",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "75e8e342-f2ed-4103-9542-bb0c84aeaa10",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d955aeee-d36e-4f79-8daf-068a59fb0362",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "7949ec29-59f0-4292-bfea-3f6b0ad1874c",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imageinstance/{id}/thumb.jpg",
               "response": {
                  "jsondocId": "dab35ecc-5c21-44de-9eae-bc943bcd5343",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "6fb3a358-61b3-43f3-acf1-99d433141663",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "c1d02cd6-3fef-4bab-9b26-d253775da648",
                     "name": "maxSize",
                     "format": "",
                     "description": "The thumb max size",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "693af2ab-ba2a-4679-9398-cbcb3c253a70",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2da9ccb9-f15d-45d6-a2c3-a60fc9212ee3",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "97daf99d-96ce-483f-ab93-3d236126b449",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1f06ee46-1591-4a9e-ad1c-eb9be1cafc7c",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "eb428197-0d9a-43cd-bf31-4649a0c0f132",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Get an image (preview) for a specific image",
               "methodName": "preview",
               "jsondocId": "43fe2757-85ed-4b67-9ca9-e52fdd57a47f",
               "bodyobject": {
                  "jsondocId": "12c132eb-5629-4f4e-9110-c6bff274327d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "e197f0d7-67b1-4032-be84-916b4137b2f8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "1b6ae811-e1ce-4c6e-9d31-adce998b6ef6",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "81d0d74a-9556-4214-8fa8-1df70bc6b7a1",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "22b1245e-f59e-4ec5-8fd3-f1117ffe20ac",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "12c23980-ee27-4b42-93b1-b5dcc269634d",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imageinstance/{id}/preview.png",
               "response": {
                  "jsondocId": "4aebabc0-32f2-44b9-a0dd-f2645608d23b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "56b83634-88f3-4893-8a63-ab8b44ef9a87",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "a86e3c5f-2939-44cc-a573-c248769dcc9b",
                     "name": "maxSize",
                     "format": "",
                     "description": "The thumb max size",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c316e6fc-572b-4ce8-adff-abb1fbc58c6d",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b58bf2c0-2dd6-4529-9f1b-d6b77da228ef",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a2916f62-b9a7-48eb-b426-2e605e15b2c1",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0fb85f52-8ca6-4618-b331-7e26eaba9191",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "bfcb187b-7dfb-4def-a0fb-5ee94d5a13c6",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Get an image (preview) for a specific image",
               "methodName": "preview",
               "jsondocId": "95ee64c8-c43d-482a-afe9-4df707052f90",
               "bodyobject": {
                  "jsondocId": "fcb0db58-b963-44b7-81d7-e15184f8a1bd",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "f0e5db07-d9ec-4ee8-b642-64b11309f873",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8de707c2-18bf-4735-844c-77d6ae554163",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "47fff7e0-1746-4ac6-8dcf-4a1d15dd7ff7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6538abd5-669a-46a5-ac6b-bf94ccd210e2",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "93d4cd7d-9171-43e8-8cad-0fa9d9871b65",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imageinstance/{id}/preview.jpg",
               "response": {
                  "jsondocId": "35c17bd5-1cd5-45bb-92bc-7377100724c6",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new image instance in a project. If we add an image previously deleted, all previous information will be restored.",
               "methodName": "add",
               "jsondocId": "5919b3e0-40fc-4a3d-9f9b-8902f2b82b50",
               "bodyobject": {
                  "jsondocId": "356dd160-2728-4271-bbdd-57e799e82e39",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "47a715e9-d8fc-41f0-a7b4-09e6c764279e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "125df5a5-35de-49e0-906e-162e42156fec",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "b0a9ac8a-207a-4d08-a557-bf9732b2890f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ddd20bd1-6938-44df-bd47-6bd8f1693b87",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "ed3ab5f9-d730-4c55-9e30-399d9fa32d79",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imageinstance.json",
               "response": {
                  "jsondocId": "3c162a7e-136e-4a24-a2ac-efbbe0e2bac4",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image instance"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "eded3364-9ace-4901-b1e2-ca15184ff908",
                  "name": "id",
                  "format": "",
                  "description": "The image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update an image instance",
               "methodName": "update",
               "jsondocId": "06d8af1c-4c8e-40b6-a580-07afc40a9219",
               "bodyobject": {
                  "jsondocId": "a6a48229-0933-44b0-bfce-3122249d9a10",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "759af5c3-bca6-4aaa-b36d-09ee1d0bb0da",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6e0c78ed-648a-4436-9443-f1d382d2f5be",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5dd6aa3e-13ba-4b13-846f-79da881c263b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ab29e107-157d-4721-a42c-fa6bd687f6d9",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "34c9b627-acf6-4994-995e-9043b4ac3e3b",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imageinstance/{id}.json",
               "response": {
                  "jsondocId": "06b57985-6d1f-4b90-ae80-f6677439d97c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image instance"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "9e45274a-e367-4484-98bb-62dec8d7eb3e",
                  "name": "id",
                  "format": "",
                  "description": "The current image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get the next project image (first image created before)",
               "methodName": "next",
               "jsondocId": "d8f5bdce-b089-4ab7-8893-aebb365320a4",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "04c49ea3-0555-4017-993c-e6e146d3b737",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7aa44475-1309-4237-90f8-7e01496e386d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5b7c6841-6283-4833-9c40-15ef7dd7e3eb",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "5caf65f9-e85d-4381-9d01-9f45ea2f235b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{id}/next.json",
               "response": {
                  "jsondocId": "8ee87f6b-1295-4a40-9c89-beb4df98f0ce",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image instance"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "534046cf-26db-4219-a114-183d65829f4c",
                  "name": "id",
                  "format": "",
                  "description": "The image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an image from a project)",
               "methodName": "delete",
               "jsondocId": "9b9bfae5-b72b-4cb2-9b84-930759b841b5",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "7079b23a-0851-4520-bd09-bf9296b9bd20",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9f30ff05-6d1a-43b1-a5aa-ffe52c388201",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "f36a8bb7-da57-4459-9159-f733429aa07c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a3950094-aafa-4862-b3a0-b7e26e50d291",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{id}.json",
               "response": {
                  "jsondocId": "ada636f4-95dc-4801-ac2a-2133b0739c59",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image instance"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "388ba7f1-fa27-46f5-b14f-4fb64300611e",
                  "name": "id",
                  "format": "",
                  "description": "The current image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get the previous project image (first image created after)",
               "methodName": "previous",
               "jsondocId": "7a341a33-7a50-4b8e-a0b6-e86aaf4316ec",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "626989c5-7c66-45ce-90de-e2571821ab39",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "5d12b917-9178-4303-84f7-6c820bee95d8",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "75e2d9bc-c9ec-4c1a-b0f8-6594be18c4c5",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "cd28bb4e-30ed-42bc-a40b-7f1cfa9b8ddb",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{id}/previous.json",
               "response": {
                  "jsondocId": "12703ce5-e133-4c39-a191-e86f4edeb9e3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image instance"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Image | image instance services",
         "description": "Methods for managing an image instance : abstract image linked to a project"
      },
      {
         "jsondocId": "2033e57b-d0dc-4488-b202-2a9e49080757",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "6480f35a-e177-4ad2-a570-fe13af2601b5",
                  "name": "id",
                  "format": "",
                  "description": "The HDF5 image group id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a HDF5 image group",
               "methodName": "show",
               "jsondocId": "73faf50a-d8b2-454c-ba41-c2aed9f6a0d2",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d7ef368c-51c7-40f1-ad07-f94b98462c94",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "55339303-dd4c-4871-82cc-de71d20a4242",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "88407b7d-fe75-4df1-8ddc-2d307717efb3",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "5504b69f-f430-416a-a0f3-6cda4bf8daf9",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagegroupHDF5/{id}.json",
               "response": {
                  "jsondocId": "1c75fa8d-9947-498a-a483-787837472c77",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image Group HDF5"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "4a5d2271-294f-4df3-b236-f19f268105a7",
                     "name": "id",
                     "format": "",
                     "description": "The HDF5 image group ID",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a5e600b5-ec1c-4516-9fe9-5587e33d2fe5",
                     "name": "x",
                     "format": "",
                     "description": "The x coordinate (0 is left)",
                     "type": "int",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a8141f04-dfdd-4c8b-89ea-59097d89efa4",
                     "name": "y",
                     "format": "",
                     "description": "The y coordinate (0 is top)",
                     "type": "int",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "a4d9c7df-70ba-45a3-b42f-b56aa63d924a",
                     "name": "minChannel",
                     "format": "",
                     "description": "The minimum channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "aad61cf5-dda0-4e73-a2dc-fad0976785af",
                     "name": "maxChannel",
                     "format": "",
                     "description": "The maximum channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get the spectrum of a pixel using a HDF5 image group",
               "methodName": "pixelHDF5",
               "jsondocId": "2f5b83ca-54fb-4a85-876c-b5b329ebf17e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ee17764c-0ae7-48d1-9adc-e03e536c871d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "be450623-0689-478c-b41d-852d3327d3c3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "6579035d-1fe8-4a81-afcc-08f243210921",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "9eaf5e1b-2c1d-47cf-8e7d-b59a030f47b6",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagegroupHDF5/{id}/{x}/{y}/pixel.json",
               "response": {
                  "jsondocId": "c2bddb9e-e047-448a-84a0-b953fed77e17",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image Group HDF5"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "311be4cb-725f-4c67-9de2-75a327123675",
                  "name": "group",
                  "format": "",
                  "description": "The image group ID that is linked to the HDF5 image group",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a HDF5 image group for a specified image group",
               "methodName": "showFromImageGroup",
               "jsondocId": "13fdc2bd-30f8-4f0d-95af-b479adb5cead",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "bb219ce4-2b54-4e69-8dd8-ee3722ddf1e5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "5fef7120-51ab-42f7-b456-de862d864832",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "89970438-6251-45d9-94b2-95afa50b48b3",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ed06632f-3eb3-4d2f-b8a3-455d6790b6d4",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagegroup/{group}/imagegroupHDF5.json",
               "response": {
                  "jsondocId": "2502794d-4c66-42ca-8a1a-67649b0e4a2d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image Group HDF5"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "509c9a3d-da3c-441f-aa87-406eb9363a1e",
                  "name": "group",
                  "format": "",
                  "description": "The image group ID that is linked to the HDF5 image group",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a HDF5 image group for a specified image group",
               "methodName": "deleteFromImageGroup",
               "jsondocId": "6c5f972b-165f-4f40-9717-db5e4740b464",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "10e80427-7e47-401f-a20f-c3d6088ed021",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "685998f7-a02e-49a3-ab99-c588f04cd503",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "30b6bebd-0c13-435c-a807-851b939d6eb4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "3e320ef0-eb91-4c7c-a4de-8abd16b3c00c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagegroup/{group}/imagegroupHDF5.json",
               "response": {
                  "jsondocId": "cfdf1f56-34b3-4e27-a48b-12ba49a59e71",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image Group HDF5"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "7cfb0f07-c8ed-4de6-bd92-9403a56005f8",
                     "name": "id",
                     "format": "",
                     "description": "The HDF5 image group ID",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "bb9e3795-a2c3-4f75-a2a4-e07b92cc9e50",
                     "name": "x",
                     "format": "",
                     "description": "The x coordinate (0 is left)",
                     "type": "int",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "49228c20-aaff-48a5-be2e-3380864b97f5",
                     "name": "y",
                     "format": "",
                     "description": "The y coordinate (0 is top)",
                     "type": "int",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "92af232e-ad7e-4c83-b74e-ed741f3a4856",
                     "name": "w",
                     "format": "",
                     "description": "The width of the rectangle",
                     "type": "int",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "bf6483f7-4efd-4825-aa1c-6a217a967a5f",
                     "name": "h",
                     "format": "",
                     "description": "The height of the rectangle",
                     "type": "int",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "cdfa5047-a1df-429c-85de-498de546a411",
                     "name": "minChannel",
                     "format": "",
                     "description": "The minimum channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c4a3d070-61bc-42c8-ba9f-1e343d4d0274",
                     "name": "maxChannel",
                     "format": "",
                     "description": "The maximum channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get the spectrum of a rectangle using a HDF5 image group",
               "methodName": "rectangleHDF5",
               "jsondocId": "4799105d-db0b-422e-9e15-c4d0cf68e65e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "cf1bb180-2745-4f51-9501-0c8517d6ac58",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a6a3177d-7e5e-44b4-b04f-deec0de94771",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7fc8d183-dcda-43c4-ac46-461985f2a2f0",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ae43f8ef-637c-42f6-a85b-97dd15098984",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagegroupHDF5/{id}/{x}/{y}/{w}/{h}/rectangle.json",
               "response": {
                  "jsondocId": "3f320984-de40-4a6e-84bc-6c93adeaad73",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image Group HDF5"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new HDF5 image group. It extends an image group with HDF5 functionalities",
               "methodName": "add",
               "jsondocId": "827f3d60-a83b-4eef-a58f-abe7dbec7b42",
               "bodyobject": {
                  "jsondocId": "760919c3-aa48-4567-9dc6-636ac7b82bf3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image Group HDF5"
               },
               "apierrors": [
                  {
                     "jsondocId": "36361698-2805-4bf6-8ea0-d0e308274726",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "452bd2cf-c7ff-4908-9431-8746ea2e9f10",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "78693d0e-50de-484c-b54a-d21bfd24c262",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "1d9bfc3b-26bc-4ccb-894d-20a0b9a343f5",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "638499f0-b222-4c7a-8d5a-20053efdf8ae",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imagegroupHDF5.json",
               "response": {
                  "jsondocId": "e7e514b6-ad98-45dd-9b78-53b9d2ce91f2",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image Group HDF5"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "14f051d0-7065-4aa8-90d7-0fd04ee049d8",
                  "name": "id",
                  "format": "",
                  "description": "The HDF5 image group id",
                  "type": "int",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a HDF5 image group",
               "methodName": "update",
               "jsondocId": "d42d9189-3dc3-48f9-ba5c-e97714192492",
               "bodyobject": {
                  "jsondocId": "218d824a-f33f-4230-ad1c-595f855097e6",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image Group HDF5"
               },
               "apierrors": [
                  {
                     "jsondocId": "74fe0750-55a8-4a9d-b7ca-52744e9ee080",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9cdc6fe9-2f00-4fe6-a3a5-e0bc072c8343",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "20f87c41-620a-4c5b-8507-7eaadcd63866",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "599e7627-d779-43d6-9ff9-2af7340b1e84",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "9c1fc10a-1302-4a21-825f-7a14b9222f2e",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imagegroupHDF5/{id}.json",
               "response": {
                  "jsondocId": "c0c8315e-4818-4d75-aa79-4d201f3abef1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image Group HDF5"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "f429b405-36d0-48a7-bed4-d2034cb2c3b5",
                  "name": "id",
                  "format": "",
                  "description": "The HDF5 image group id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a HDF5 image group",
               "methodName": "delete",
               "jsondocId": "807c034a-31b4-4f11-8426-cb6f14d80324",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "61e23e88-ada8-4695-b634-5e30b996fab8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "fad862eb-77cf-4de6-9912-a2a6fbf9e707",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "9eb73414-7a4c-4d21-8621-da6b805e8328",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "5e7e7284-9072-4ad0-853c-b0273d1be6aa",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagegroupHDF5/{id}.json",
               "response": {
                  "jsondocId": "8da7116b-2e5a-4f50-9ad5-b96b242afb4e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image Group HDF5"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Image | multidim | HDF5 services",
         "description": "Methods for managing HDF5 image group"
      },
      {
         "jsondocId": "4aecb6b9-9cac-494c-8b3a-6fa9d5f1304a",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "db40a189-d6a7-4f42-855d-f7fc8821ff42",
                  "name": "id",
                  "format": "",
                  "description": "The image group id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an image group",
               "methodName": "show",
               "jsondocId": "040aa0fa-d131-417e-977d-c463a16bb575",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "0e887049-cc4d-48ac-97b3-8b21e49ea695",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c3efe549-9681-4e38-9f60-14bbef923260",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "60b684f0-ed6f-4ef1-897a-1f7b899a0768",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e6164cd0-e12e-419e-8e43-be68f6e957e1",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagegroup/{id}.json",
               "response": {
                  "jsondocId": "12dcb818-48c0-4684-b4c1-c4f5ddc59c11",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image group"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "5ffa71ff-7dfd-4356-a076-2dbc7a7c84b5",
                  "name": "id",
                  "format": "",
                  "description": "The image group",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get the different Characteristics for ImageGroup",
               "methodName": "characteristics",
               "jsondocId": "b3106acb-dcef-49d4-b3aa-917968078d22",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "3f0acc30-3abf-4dfa-b49e-45c2d512dc2e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e1d50504-7402-4648-bec4-31aaf98ddf04",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "6dd215cd-e3a2-477c-b665-7edc7de6c40b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7854616a-9790-4ee2-a298-44192ec9e52f",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagegroup/{id}/characteristics.json",
               "response": {
                  "jsondocId": "1aef6a57-32b0-4b15-b483-8363f0f12dd8",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image group"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "e13c3c3d-eb3c-4dfc-9573-41babc0fac2d",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "75225461-de4d-430f-8ff3-8c960c5cd25e",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "384c929e-5f79-48f5-af46-af374fcce271",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get image group listing by project",
               "methodName": "listByProject",
               "jsondocId": "75eca08a-0b71-4e16-93eb-d92265f22df1",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1dd4e78e-ee7f-4b32-9293-f267ebdc7b5f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "af9f632f-9d97-4c0a-ab9d-63edaddde755",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "754403d7-79f4-4604-b703-1e401b3f4d6a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "838f6fdd-519e-4a4f-96c3-ffc3b9d30607",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/imagegroup.json",
               "response": {
                  "jsondocId": "15c81a3a-6061-4a27-ad89-273cebf9d762",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image group"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "4ee43e87-957d-493c-b306-02e9fe57d702",
                  "name": "id",
                  "format": "",
                  "description": "The image group id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a small image (thumb) for a specific multidimensional image",
               "methodName": "thumb",
               "jsondocId": "6f0dbb4d-5270-487e-925f-2c28664cd75c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "4a6f0d4f-3b21-43e2-a70f-219b44f8c555",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "44930706-d0ab-4737-bf35-45bf35cc7476",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "165b8755-1e82-4afc-948b-91b8925f9c59",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "838e46f4-19b5-4eda-a28c-07beb734ceaa",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagegroup/{id}/thumb.json",
               "response": {
                  "jsondocId": "d79deb32-3585-4dfd-a85c-d321abb5301f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new image group",
               "methodName": "add",
               "jsondocId": "df578d82-9a34-4f7f-8949-e9e26e6cda57",
               "bodyobject": {
                  "jsondocId": "23dcd887-eec1-46c3-8855-538fb77e3fc9",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image group"
               },
               "apierrors": [
                  {
                     "jsondocId": "5a40592d-f266-4468-9113-40c426d49684",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "34be2ee4-bd0f-42cf-88dc-3e7913134c1f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "1f56cb67-cdb7-49c5-bd56-5a55ddf603be",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "941936e2-707e-4b11-abc0-b2e86c6367d1",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "96aedeaa-e3ad-4e92-b433-51973be7d378",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imagegroup.json",
               "response": {
                  "jsondocId": "45ce3847-5af9-4ea2-a1a3-c7bdde6793cd",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image group"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "65dd0f79-e7d8-4239-977b-445665ce7ee6",
                  "name": "id",
                  "format": "",
                  "description": "The image group id",
                  "type": "int",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update an image group",
               "methodName": "update",
               "jsondocId": "12833237-2b04-4e3c-9e51-87763426d826",
               "bodyobject": {
                  "jsondocId": "5bc59ed6-100f-49cc-803b-99b82e5e4243",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image group"
               },
               "apierrors": [
                  {
                     "jsondocId": "e72b940b-af5a-4b4a-a249-300ed1056074",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b2b5cdcd-0b35-486a-a241-c1ff0bdfa569",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7e9028e7-da1d-4214-a8b7-f2b13fc2a7ae",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "58926d9c-9e40-40db-ba3f-f4a7e443ee2a",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "95fe5678-8943-4189-aa10-01f1817fd7b0",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imagegroup/{id}.json",
               "response": {
                  "jsondocId": "345731ac-d8c2-40e5-bf1e-c93cc0fa9d1c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image group"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "7e693d9f-3a20-4e92-8538-28e6974c86f9",
                  "name": "id",
                  "format": "",
                  "description": "The image group",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an image group",
               "methodName": "delete",
               "jsondocId": "3dfd4cb4-1798-4faf-9fed-629547188355",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "52af1ff7-d16a-4972-86d5-1c0bdbced3f7",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "0b1a3278-f038-4077-82a4-e8f174cffa04",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "6786508e-118f-41b9-a57e-beaccf9bfc9d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "0420a764-f7a1-4dba-927b-28d14ad28992",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagegroup/{id}.json",
               "response": {
                  "jsondocId": "3b3ce836-fda0-41c9-9ca3-df379ee8b601",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image group"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Image | multidim | image group services",
         "description": "Methods for managing image group, a group of image from the same sample in different dimension (channel, zstack,...)"
      },
      {
         "jsondocId": "7bf83af1-26c6-40ea-90a1-561fd9445255",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "a98d3c56-84ca-4d94-9851-1a1d656d73e3",
                  "name": "id",
                  "format": "",
                  "description": "The image sequence id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an image sequence",
               "methodName": "show",
               "jsondocId": "2cdbfceb-5922-438c-b4a1-d76990940aa1",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c4c6f538-6a1b-4aff-ac04-4c0480412379",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6119fe1a-fa0f-424f-a568-c00ffe5506ef",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "bfb754b5-ba46-4f51-a689-6f99858840d6",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "8f07c728-4cc4-4102-9a78-9558e75b8489",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagesequence/{id}.json",
               "response": {
                  "jsondocId": "84c1b8a0-76f2-41c7-9746-70caec06e9f8",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image sequence"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "8cca6259-4ea9-4a55-bc6c-d14ae51a18d6",
                  "name": "id",
                  "format": "",
                  "description": "The image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "65507079-2f05-46ab-9e26-84c8e7686ab5",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b9d8a650-9213-4298-a5e2-fcc46046468c",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all image sequence from a specific image instance",
               "methodName": "getByImageInstance",
               "jsondocId": "b3dfd5a5-8c28-4a2d-b0f4-d83a8bcfa500",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "8c5ec32e-a42e-495d-9b16-9e48869ee86b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6c903317-19ed-44e7-80da-f9eb5f1f2b83",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5434cafe-eede-4463-89fc-c41d475880f6",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c2f48e10-f2b6-49b9-8a73-22137585c67d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{id}/imagesequence.json",
               "response": {
                  "jsondocId": "beb4314b-89e7-4117-a405-6c5e6c5b663c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image sequence"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "b83b1262-173f-43f2-984c-b06e909b483d",
                  "name": "id",
                  "format": "",
                  "description": "The group id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "08946403-cbfd-49fd-ab33-fdae2a7219a4",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a02080e2-9290-4a0a-b515-c463494dc87c",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all image sequence from an image group",
               "methodName": "listByImageGroup",
               "jsondocId": "c0e2cab4-4c87-472c-9a81-44a25d946b6c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "3b774dc2-3f30-469d-bbbf-41e2bccab98e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "06903fbc-b305-4fd1-9535-25ce7fb3fbfa",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "362e5fc7-e113-4adf-91d1-d9a6503ec3d4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a659297b-6d1e-44e3-9de6-00ef3b458a72",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagegroup/{id}/imagesequence.json",
               "response": {
                  "jsondocId": "1118c9a8-5488-4521-8dee-250d95108359",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image sequence"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "31485c5c-bc13-46bb-90f4-0ead2cdf14fd",
                     "name": "id",
                     "format": "",
                     "description": "The image group id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ce1b4aaa-d2a5-4ef2-9a56-ddacae4f24da",
                     "name": "zstack",
                     "format": "",
                     "description": "Zstack filter",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "373e02a6-4c9a-4c04-9f3d-087ee8b8bca5",
                     "name": "time",
                     "format": "",
                     "description": "Time filter",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5d7d9586-e7b4-4f80-b96f-1369c36694e8",
                     "name": "channel",
                     "format": "",
                     "description": "Channel filter",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9748f886-5132-45b7-bb0f-5eb645dc74ca",
                     "name": "slice",
                     "format": "",
                     "description": "Slice filter",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "0abf05d7-1193-4f86-a5c1-16781ef5ef27",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c5279151-1a66-475b-9f31-d5bbcd7f5bca",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get the image sequence in the given channel, zstack,... and image group",
               "methodName": "getByImageGroupAndIndexes",
               "jsondocId": "3ee5cbe2-aa97-4528-8a81-3461568fa384",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "089ca51c-acd8-46d5-b579-5240d9706397",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "0440189b-da36-422c-add4-22e307b8f66c",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "87ea260b-1117-46d2-89cd-f4d78d387996",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b01c9535-1151-44fe-a239-97faa0ea20ce",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagegroup/{id}/{channel}/{zstack}/{slice}/{time}/imagesequence.json",
               "response": {
                  "jsondocId": "65c91e4d-0e66-4665-96a0-1ff0ad0023bf",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image sequence"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "cb34bc89-9867-4a07-9e4a-b242a126a063",
                  "name": "id",
                  "format": "",
                  "description": "The image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get the image dimension index (e.g. c=0, z=1, t=3,...) and the possible range for each dimension (e.g. image x has channel [0-2], zstack only 0, time [0-1],... ",
               "methodName": "getSequenceInfo",
               "jsondocId": "c11d0d7d-e06b-4735-aa6c-c81942013dca",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "9f384dfb-6e87-48c2-ae03-4c787814c8ec",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9a1b5414-8352-4ac3-b38e-1a393168dab2",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "6b5ef94b-3bc2-471e-a5b5-ecb5dfc2d158",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "cce31745-73d7-4f12-89e7-f69b9acdc393",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{id}/imagesequence/possibilities.json",
               "response": {
                  "jsondocId": "43439cc9-10ee-4cf5-836f-333de4d447ab",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[sequence_possibilties]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new image sequence (index a new image instance at a given channel, zstack,... in an image group",
               "methodName": "add",
               "jsondocId": "4cae8939-ce62-4179-842d-68caafb6e61e",
               "bodyobject": {
                  "jsondocId": "64c1b9d9-bd13-4bc8-85b1-7f4401728d1c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image sequence"
               },
               "apierrors": [
                  {
                     "jsondocId": "ef8c9566-244a-4aef-80a0-1cd31da17de7",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "5c5c4f82-2569-40cd-8b90-4d1e99adb220",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "6b2c146f-04da-4fc9-8220-0cf695fc637a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "272f48d2-1c9c-4f76-8eb6-1fe5955cb812",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "87d7e991-43b9-4215-9735-804a935b7053",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imagesequence.json",
               "response": {
                  "jsondocId": "96f6696c-3a11-4926-9bbd-3a0f5c1d570c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image sequence"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "7901e79b-ecae-4e7c-b4ae-44776210a965",
                  "name": "id",
                  "format": "",
                  "description": "The image sequence id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update an image sequence (id must be defined in post data JSON)",
               "methodName": "update",
               "jsondocId": "65f4e2f0-a6c6-4f3f-bbe2-f592250531b4",
               "bodyobject": {
                  "jsondocId": "1f87838b-971e-4de4-a38a-16aa4cc9ed1e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image sequence"
               },
               "apierrors": [
                  {
                     "jsondocId": "719fe865-9fd9-40ea-8efa-68bf92c43ecd",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "cd4707ed-4f6e-4f99-a1f7-3f36ab8c80aa",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "14e9d0e0-228d-4548-ab5f-f377275c4e38",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7bc2480d-d818-42ce-b9d6-e457e9e9a0f2",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "6d83846a-5579-4c1a-b7ae-6f0a161d4d95",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imagesequence/{id}.json",
               "response": {
                  "jsondocId": "eee1e1c4-55ef-492f-ab95-b653d0403d76",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image sequence"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "5e68d96f-cf1a-4a08-ab94-8a6dc50a871b",
                  "name": "id",
                  "format": "",
                  "description": "The image sequence id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an image sequence)",
               "methodName": "delete",
               "jsondocId": "e510a7a1-0e32-4d6f-a05e-41e8b95c97f0",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ef76ffdb-1a45-4eca-8b80-57d86dd7f7eb",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c9a939b9-8279-4b38-95a6-4279a1426e55",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c2d42697-1724-4551-a09a-10d56b94408d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "cb97ef0b-ead2-4089-b61d-b49600c25486",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagesequence/{id}.json",
               "response": {
                  "jsondocId": "3b76c3ed-e1e1-4ac7-8b83-96619f70d31b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image sequence"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Image | multidim | image sequence services",
         "description": "Methods for managing image sequence that represent an image from a group in a given channel, zstack, slice, time..."
      },
      {
         "jsondocId": "138f6de3-1b8a-4d57-aa73-f670070f8772",
         "methods": [
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "03ba4c35-2dfc-43f5-8753-74ea57b811c0",
                     "name": "id",
                     "format": "",
                     "description": "The nested image id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a5196f91-da6d-4fe3-abca-e5722398816e",
                     "name": "idImage",
                     "format": "",
                     "description": "The image instance id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a nested image",
               "methodName": "show",
               "jsondocId": "f725e7c7-fbbd-454a-9a2e-4c6307e29afd",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "03c496e9-1ab0-4ee2-8084-e00e7c9c5641",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "750e60ba-34c0-42bb-b31f-60ef769498bd",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "dbd54675-b949-457f-8070-219612837124",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "1ee1176e-a662-4a3f-9735-dd81bdf81d59",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{idImage}/nested/{id}.json",
               "response": {
                  "jsondocId": "c59d53c4-4162-4c81-b5f3-459daedf9a58",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Nested image instance"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "78f5899b-f374-43f8-add3-eb381604f574",
                  "name": "idImage",
                  "format": "",
                  "description": "The image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "b3484cbd-b4bb-44c7-b24e-488051d42e7d",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c46da81c-1b91-4be2-bb8d-0d085050733e",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all nested image for an image instance",
               "methodName": "listByImageInstance",
               "jsondocId": "6fea3c40-dab7-4666-9dba-27e9955d47db",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "bf8d0dc3-29b8-466f-a957-36865b270096",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "31bb404d-d90f-420f-8d86-719d4efb1af2",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "2d6709e9-6863-4330-b4ba-4d69d3fb290a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "dc1607d7-a5a7-4f3a-b4bc-a66671233137",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{idImage}/nested.json",
               "response": {
                  "jsondocId": "4c93f0d8-a3b0-45dc-8511-b776e3ad9878",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Nested image instance"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "4fbea0b0-c578-49c2-8b8c-c59dd48d6e98",
                  "name": "idImage",
                  "format": "",
                  "description": "The image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new nested image (from an image instance)",
               "methodName": "add",
               "jsondocId": "5e727933-7f66-47a5-9ecf-0763aca74c73",
               "bodyobject": {
                  "jsondocId": "b3ae2b87-eb43-4bb9-98c4-d3ae8e1e9c68",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Nested image instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "f7300ce6-00aa-4460-8ff6-ba1b380cdaa4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "91ef1675-e714-45ac-95f5-56df40ca1339",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0fa99c9b-66e0-417d-9c15-9a07b4350442",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a1077bce-541a-4e39-88e3-e8fdf9d1fec0",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "37083bc3-1794-473c-8c74-29577380affc",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imageinstance/{idImage}/nested.json",
               "response": {
                  "jsondocId": "e7a26927-3b4a-4298-bc65-97126dd93166",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Nested image instance"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "0c5ed625-51bf-4c14-b470-23c93e5daac0",
                     "name": "id",
                     "format": "",
                     "description": "The nested image id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7ef3ffd4-cce2-48e2-a404-ee7fac501226",
                     "name": "idImage",
                     "format": "",
                     "description": "The image instance id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a nested image instance",
               "methodName": "update",
               "jsondocId": "5b8549e8-7d5b-4331-bb62-b899f2a02b8f",
               "bodyobject": {
                  "jsondocId": "48d3649e-434e-4db7-baed-f217486e6f3c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Nested image instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "3264179f-ab56-4b3a-89fc-4ef1611d4ea4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "041c0262-47ea-4871-8265-55fb7c392beb",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "cee812ab-25d3-4dc8-81df-38f9a90326e4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "03d1eef5-c6d4-4832-955c-562fee3c245a",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "1341a827-08c9-40c2-8427-6f270033f18b",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imageinstance/{idImage}/nested/{id}.json",
               "response": {
                  "jsondocId": "b55499f5-840e-4542-bed7-ad19c3169272",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Nested image instance"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "67f83d74-7906-4d1f-9c5b-ba2fcf9f7e1c",
                     "name": "id",
                     "format": "",
                     "description": "The nested image id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "48f5ab1f-7b3b-4058-ac4e-479893f303c0",
                     "name": "idImage",
                     "format": "",
                     "description": "The image instance id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a nested image instance)",
               "methodName": "delete",
               "jsondocId": "31309599-73f4-4eb1-9d59-984701f703ed",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "13772478-fdd0-44ad-ad41-c43467eaa0fc",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d958b8ec-b05a-4feb-8c33-51305d39ed8b",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "68162fe2-88bc-4b04-bed2-e395239263cd",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "cd4057fb-c2ba-4bb4-978b-0b1f822ea871",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{idImage}/nested/{id}.json",
               "response": {
                  "jsondocId": "af509325-f6dd-46f5-8037-afe156aaa538",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Nested image instance"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Image | nested image services",
         "description": "Methods for managing a nested image, a sub-image of an existing image instance"
      },
      {
         "jsondocId": "2ea75297-4e1c-4fee-8d5c-83894af2863c",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "bc174faf-67b4-46bd-b15b-5a51d34f67fa",
                  "name": "id",
                  "format": "",
                  "description": "The storage id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a storage",
               "methodName": "show",
               "jsondocId": "43a2069b-c380-4d99-a3be-cae71c6fbf5f",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c3ef675c-af14-49c7-a6d5-c8cc618e8211",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "82b2fdf6-e902-464a-b1f3-8b4330c2d4f4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "2e7c79d9-77be-4686-ae80-cd813b933d6d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "dc110cd1-be15-46dd-bc45-4004c48a7c62",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/storage/{id}.json",
               "response": {
                  "jsondocId": "5e4d008b-db44-41fc-ae56-717dd26186ba",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Storage"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new storage",
               "methodName": "add",
               "jsondocId": "e27266ff-6e65-4e80-8a1e-4dcaa3f6b354",
               "bodyobject": {
                  "jsondocId": "5105c92a-5dea-4221-9bf2-0b18aa2d4df2",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Storage"
               },
               "apierrors": [
                  {
                     "jsondocId": "40cb2bd3-6b33-4dcd-9b8a-49fdaaefacce",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7f493d22-0ac0-482e-9d24-4f8a46e39cf5",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "80b4e171-2ace-4c69-920f-13ec889492a6",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "19da1e65-7fc0-4661-9c63-ba58ac4ce437",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "e7327f63-db85-4b90-8f45-fa8d746c1c09",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/storage.json",
               "response": {
                  "jsondocId": "28f90782-dbf8-4c25-b95f-2057c6b11efc",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Storage"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "0ec4fe59-9bb3-4970-8c34-2384fbd70778",
                  "name": "id",
                  "format": "",
                  "description": "The storage id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a storage",
               "methodName": "update",
               "jsondocId": "9d511ad5-12cc-43f4-973f-47909c4e1fc3",
               "bodyobject": {
                  "jsondocId": "6d9bd1ad-ae75-4fd7-98f2-2003d40ee4f7",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Storage"
               },
               "apierrors": [
                  {
                     "jsondocId": "74ad2708-7def-438f-b856-babefedde499",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9edb55d8-8728-4647-8b01-d98fdeab9d76",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "2ea6aa7e-b8db-460f-af93-ea5c7be0e440",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "20aec706-7519-4123-a08f-903fda156e96",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "d7480b4d-9e3d-45f2-a039-e991a02089aa",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/storage/{id}.json",
               "response": {
                  "jsondocId": "7f55d273-1f03-4d1d-9f1d-d85d462ba159",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Storage"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "01048169-1f8e-4621-a0f3-75aa78bfdda0",
                  "name": "id",
                  "format": "",
                  "description": "The storage id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a storage",
               "methodName": "delete",
               "jsondocId": "83523a3e-e767-4771-af12-a1436a56d3be",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "4b8324a1-5e8c-4c23-919b-e498706f2bcd",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "23936547-5b6d-48fd-9046-27014980d8c6",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5f470991-c964-4649-99a5-35a221cdaf94",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "40de8ccd-1f4f-4153-a7e5-97f23717a387",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/storage/{id}.json",
               "response": {
                  "jsondocId": "8ba49e5b-d77f-4333-83f3-ae8a9393aabc",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Storage"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "a406ade3-465a-4b77-94a1-54f04c28bad1",
                     "name": "all",
                     "format": "",
                     "description": "True to list storages for all users the current user has access to",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "17de1274-8077-4d4b-919c-639f9be2dba2",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "451f8d2d-d2be-4598-8405-449b076def11",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all storages",
               "methodName": "list",
               "jsondocId": "c64708a1-1a07-4cbb-9b19-c6bc8fa154ca",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "bfc6a9c9-94f5-465b-acff-e67ccf038f2d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "de6d1ec8-54a7-403d-837e-ec147948795f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7be03be8-da63-4587-b69b-83db7bd802c9",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d2e889fe-a946-409c-aef7-db4d1b54f90b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/storage.json",
               "response": {
                  "jsondocId": "a81386db-b220-4e76-8f61-95186ca3335e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Storage"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Image | server | storage services",
         "description": "Methods to manage storages"
      },
      {
         "jsondocId": "a2ff80ca-50a2-44de-8312-cb55f416bb83",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "a8905499-c55a-4341-8d0d-be355e118a81",
                  "name": "id",
                  "format": "",
                  "description": "The slice instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an slice instance",
               "methodName": "show",
               "jsondocId": "604b9b25-2a2c-46b9-8338-b92ac0c10890",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "a5153ddc-2095-4b1f-97ff-ed2f321fd788",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a827fb3a-1ecc-49a1-800f-5efcd78ff49b",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a58c8e5d-437d-4c4e-b58c-0466d18ccfdd",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "8cfd6e8c-ba9e-49af-9837-3540fabd77bc",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/sliceinstance/{id}.json",
               "response": {
                  "jsondocId": "c160e388-3606-4ab1-8645-3fd1bec956c3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Slice Instance"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "991627ed-91e4-44c5-8197-73cb2744ffb1",
                     "name": "id",
                     "format": "",
                     "description": "The image instance id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "07d0610f-6409-4a3f-8307-d30d4088a9d3",
                     "name": "zStack",
                     "format": "",
                     "description": "The zStack coordinate",
                     "type": "double",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "eb47533b-fbae-4496-ba71-8e3c8c9d35cf",
                     "name": "time",
                     "format": "",
                     "description": "The time coordinate",
                     "type": "double",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0f999ec7-74fb-4a06-9982-78afca33bf8b",
                     "name": "channel",
                     "format": "",
                     "description": "The channel coordinate",
                     "type": "double",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get the slice instance for the given coordinates and image instance",
               "methodName": "getByImageInstanceAndCoordinates",
               "jsondocId": "501ba46a-c332-4b88-ba57-75be146605f3",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "56a27b82-c06e-496d-b1f9-401af2c1786d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "1f2e879f-6492-492b-af14-05d32895c1bf",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c80591de-ea37-40de-a021-e12d48ef7b5b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "2a31b6fe-8de7-47bb-9a82-f9113f37bd0d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{id}/{channel}/{zStack}/{time}/sliceinstance.json",
               "response": {
                  "jsondocId": "44e6e13c-6f22-4290-9932-f184bebd80c3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Slice Instance"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "5df8a20e-98b9-428e-9a76-58d2da785729",
                  "name": "id",
                  "format": "",
                  "description": "The image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "8b63cbcd-89ce-428d-944a-38da2a170b0a",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "96f6ae5b-d75b-4b52-9d06-982f9c9ce980",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all slice instances for the given image instance",
               "methodName": "listByImageInstance",
               "jsondocId": "1b5f3c72-395b-4881-9eed-eae13c7ef74c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "a2986f49-9c74-4650-9f74-700515eb1f76",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6ae0f25f-0c65-4925-b31f-9b260a6de1ff",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "10cbce00-683c-4daf-8d65-c7655b9d8c61",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "0776e96f-ab3d-4b1b-829e-8ec32996394d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{id}/sliceinstance.json",
               "response": {
                  "jsondocId": "7e1f44d5-53a4-4c8a-ac9f-7a60b0d8e739",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Slice Instance"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "4a60db24-d46d-40a7-832a-25a8e921af74",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "aa302962-a849-4d5d-9022-31f499ff90f7",
                     "name": "refresh",
                     "format": "",
                     "description": "If true, don't take it from cache and regenerate it",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6423bf8e-47dd-41e3-845d-17105a5948d4",
                     "name": "maxSize",
                     "format": "",
                     "description": "The thumb max size",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "dc9e104e-b3c3-47fe-ac20-0ef142dfb353",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3c9c3e3b-5af9-4454-9154-74d7a23b44e3",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e65af08c-06ef-4de5-9f9a-11fcaf3a2dbd",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9b0d7368-2967-402d-b843-50c6ef0ab07f",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e692441f-6fbb-4ab7-9d54-0fbd64c8bd8c",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Get a small image (thumb) for a specific slice",
               "methodName": "thumb",
               "jsondocId": "c5147cb3-be76-4aaf-b5d4-7bc6a4e6c8d6",
               "bodyobject": {
                  "jsondocId": "5fdb345b-742f-4821-b80c-b84b8fdfead2",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Slice Instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "9f8592af-e9bc-4c9b-a97b-84d61a62ea70",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "13e37f5c-0003-4268-a9c4-4748a707a951",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "838d9c30-1b88-49ef-8aac-efee9beee192",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c230f367-f650-4f91-b6ef-05b91a1bb692",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "d9065ca0-c064-4521-aa22-d7956ddca2b7",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/sliceinstance/{id}/thumb.png",
               "response": {
                  "jsondocId": "334c4dd7-64e6-47b0-82c4-671e38286003",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "788e6b3a-9388-42d8-9304-3c00456b2056",
                  "name": "id",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "52a199af-8933-446b-b97b-fd0f43487de0",
                     "name": "refresh",
                     "format": "",
                     "description": "If true, don't take it from cache and regenerate it",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5f78e443-936f-48f7-8a1f-aad146a78564",
                     "name": "maxSize",
                     "format": "",
                     "description": "The thumb max size",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5d66ec1d-10f2-4123-9486-9f985c43992d",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4aabd5f4-b6bc-4aaf-8b9b-0b45abcd8c58",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6fa39738-f5a4-472a-9312-fc361e5716c7",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0d4a224e-ca9f-493e-acd8-2495289bf389",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0b355e16-8e8b-495c-a582-d70676fa8206",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Get a small image (thumb) for a specific slice",
               "methodName": "thumb",
               "jsondocId": "d2128f8c-b06f-489b-b191-109160522aea",
               "bodyobject": {
                  "jsondocId": "36a40fd7-5f4f-4044-9cab-fafeab521d3e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Slice Instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "ffaab311-d932-49cc-90b2-379197bba7f1",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b7c1c9a5-1a1c-4c9f-9403-ad25aa812e43",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "9ccfd011-dfd8-4ab7-80b8-194f3f9a1fa1",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "80dd6755-dad8-47be-8b05-5544c20b0195",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "4f52dc83-acdd-421f-8508-af8d23084375",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/sliceinstance/{id}/thumb.jpg",
               "response": {
                  "jsondocId": "69380b25-42ee-4825-b43e-ff1ff44bf85f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new slice instance. See 'upload file service' to upload a slice.",
               "methodName": "add",
               "jsondocId": "b76d329c-e762-4e7c-89cd-fce34a5dfa83",
               "bodyobject": {
                  "jsondocId": "e0c2f78f-62dc-4d87-a0f2-6ba3f5df7956",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Slice Instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "17b43d53-feca-4f82-9b7b-84b42fc9e51c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "71f0434b-636a-4fea-98a7-e63300f267f3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8b1cc835-5114-402e-bbca-95f5418e7012",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "cdc124da-4ac0-4855-a40d-a158ee50c73e",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "fce29a66-6dac-4e91-a0b2-bf7de8a8dfd0",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/sliceinstance.json",
               "response": {
                  "jsondocId": "b05fbfee-7444-4a06-934e-aa0460a2a274",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Slice Instance"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "4abbdbf6-5b99-4a64-a7aa-bd355a8febc1",
                  "name": "id",
                  "format": "",
                  "description": "The slice instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update an slice instance",
               "methodName": "update",
               "jsondocId": "769aeae6-3668-4a39-8205-d3c765c302de",
               "bodyobject": {
                  "jsondocId": "5ba4b26e-d884-42ea-b1ef-d4dce5866841",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Slice Instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "7580baeb-69f6-42b2-abf4-105a93d96d03",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "0e467675-967b-4a52-97a6-e7f7059dd4c8",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5369e3a3-b8ab-4b14-88fc-86d42c6ed012",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "8b913c91-3feb-4ec5-be40-80c13cfe8ae8",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "5d0ff921-7358-46e3-8030-33ff242388a0",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/sliceinstance/{id}.json",
               "response": {
                  "jsondocId": "a2bc842e-f791-4b0d-af40-5944f8a3e45c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Slice Instance"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "df10713c-26ee-4c87-895a-b1d28d3d4711",
                  "name": "id",
                  "format": "",
                  "description": "The slice instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an slice instance)",
               "methodName": "delete",
               "jsondocId": "3d8d5796-9774-45fb-ad52-789f1d07fd9c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "03d1a899-2912-4f48-bcc4-3b3cc08257ad",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "2a4b6131-a713-4f97-9fd9-175a9dd198b0",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a090f4fe-a4c3-49ce-ae59-3504f76321ad",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "19c5436c-7f85-45f2-8683-7b6b4ffb91a4",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/sliceinstance/{id}.json",
               "response": {
                  "jsondocId": "a380a79f-52dd-41ed-9003-fe5d0ebdd5ba",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Slice Instance"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Image | slice instance services",
         "description": "Methods to manage a slice instance."
      },
      {
         "jsondocId": "2b4eee34-7d54-497a-a4ca-ac503c97f6a5",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "4169999a-536f-460e-b93b-3bf8ff8a22da",
                  "name": "id",
                  "format": "",
                  "description": "The uploaded file id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an uploaded file",
               "methodName": "show",
               "jsondocId": "ce10a5f8-af8c-4457-8c49-a23c69e29f16",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "8122ad25-749d-4a0d-83fa-d7ed94cfc869",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ee616526-cdf1-4c8e-bbcb-802bcf109a8b",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0283f8b2-784b-40e1-8c97-6e9089898633",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "142e3304-da9f-4aea-91cc-98a4769fe7d8",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/uploadedfile/{id}.json",
               "response": {
                  "jsondocId": "212b3ce4-38ff-499e-8658-6518c27f06f2",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Uploaded file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "f8eaecca-89a5-4c00-872b-6a49cc12f857",
                  "name": "id",
                  "format": "",
                  "description": "The uploaded file id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Download the uploaded file",
               "methodName": "download",
               "jsondocId": "06fdb461-8ab5-4b65-b866-c3b6d4fb3f98",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "032922a0-1a58-4b09-b0c2-85813e897f38",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "2785854b-11e9-4cfe-9491-c79585b33984",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "45a0df8b-d439-40e2-b952-59ecbda16c91",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "4c8cfd95-df97-49eb-bfad-725d3e0eedb7",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/uploadedfile/{id}/download",
               "response": {
                  "jsondocId": "2650249a-622e-4333-8d39-9318c462f0aa",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Uploaded file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new uploaded file. This DOES NOT upload the file, just create the domain.",
               "methodName": "add",
               "jsondocId": "a101ba00-99f1-404e-be90-9c45a207d73a",
               "bodyobject": {
                  "jsondocId": "23d46974-35e9-4b9c-a6f1-849ca9dde55f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Uploaded file"
               },
               "apierrors": [
                  {
                     "jsondocId": "76b04f13-3c40-484e-9546-8a3973a36620",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "457b2f46-5e29-4e96-9a03-6ff59e62bd32",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4ef581bf-2301-4762-a05f-5a0d41948e26",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7afcab7a-a0a1-4aec-acb2-668fb85f0b20",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "322379c5-0729-4074-81aa-70f990996a76",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/uploadedfile.json",
               "response": {
                  "jsondocId": "c42f6ee0-9cce-4979-aba5-875cd460a7b2",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Uploaded file"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "f80c4b54-9554-414a-a6d7-7b2c6646e2e8",
                  "name": "id",
                  "format": "",
                  "description": "The uploaded file id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Edit an uploaded file domain (mainly to edit status during upload)",
               "methodName": "update",
               "jsondocId": "f7a4f227-a1f6-4d14-b0dc-5af4fdb922c6",
               "bodyobject": {
                  "jsondocId": "2c3318d1-b885-487e-b4b9-3f07f994bbb8",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Uploaded file"
               },
               "apierrors": [
                  {
                     "jsondocId": "836cdabb-f7a2-4dd6-85d4-02d7d86f20c1",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "176b3d9d-0e56-4201-a3d8-f906114ca132",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4c249363-22e2-424c-83d9-6202062f76cb",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ebab6121-5331-48c2-ae58-ff3e0de12c34",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "a32c567f-863f-487b-a02f-14f43e55c596",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/uploadedfile/{id}.json",
               "response": {
                  "jsondocId": "21729a66-e198-4ddf-aaae-3a8bf8b31ebb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Uploaded file"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "7a52d0cf-b7fd-4582-899e-4b2ba16a15ac",
                  "name": "id",
                  "format": "",
                  "description": "The uploaded file id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an uploaded file domain. This do not delete the file on disk.",
               "methodName": "delete",
               "jsondocId": "349a8e63-39c4-4812-aa13-b44da4b04550",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "01c4ba82-640a-468e-b9ea-a2a5979b2020",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "bf1f0aab-585b-4cba-ae6b-4b22e2f90b45",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "84403c1c-753a-4af7-b203-6d9723f2d82f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "8d96dfb0-808d-47fe-a09b-9cc664a53f1b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/uploadedfile/{id}.json",
               "response": {
                  "jsondocId": "3ab95a26-3be1-4303-b663-fd7dba07e238",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Uploaded file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "5b97785f-057c-4415-ba6b-bcece2d5f2f7",
                     "name": "onlyRootsWithDetails",
                     "format": "",
                     "description": "If set, only return uploaded files which are roots (no parent) with supplementary details such global size.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8ff510e8-af1c-4e64-8658-83b63bdc46c0",
                     "name": "onlyRoots",
                     "format": "",
                     "description": "If set, only return uploaded files which are roots (no parent).",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "611a47af-a6d2-4707-a5f9-9b8086e142ee",
                     "name": "parent",
                     "format": "",
                     "description": "If set, only return uploaded files having the given parent.",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3f0751fa-1bc7-496f-bea2-be517a033ac6",
                     "name": "root",
                     "format": "",
                     "description": "If set, only return uploaded files which are children of the given root. Returned attributes are a subset of uploaded files attributes.",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d43c397b-dc49-42d4-ab34-ab86a0464093",
                     "name": "all",
                     "format": "",
                     "description": "True to list uploaded files for all users the current user has access to",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all uploaded files made by the current user",
               "methodName": "list",
               "jsondocId": "3063cdb0-b68f-4ce9-a462-5b8b10743496",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c76f6c04-ec23-42cb-a02d-b18dd48f50dd",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d6daaff4-d2ec-4435-88f9-33dd85437965",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "249a5886-b36e-4f13-854a-b154a9b663c4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c938a48d-e324-4eac-a10b-cf61820aa274",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/uploadedfile.json",
               "response": {
                  "jsondocId": "a0c0bfb9-cced-4b93-8ba4-f7df0d2a450e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Uploaded file"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Image | uploaded file services",
         "description": "Methods for managing an uploaded image file."
      },
      {
         "jsondocId": "de5b39c8-972c-4192-9ebd-eb5e183fd717",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "7d64e307-7117-4e3c-82da-1cbdd887fa3e",
                  "name": "id",
                  "format": "",
                  "description": "The imaging server id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an imaging server",
               "methodName": "show",
               "jsondocId": "3ee939bc-241b-4f35-87e9-f1aab63fee9d",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "71473265-e313-46bd-93c9-01415ded6609",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "91221ddb-feff-4144-a793-90bb7fcf2fc1",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "44d7f48e-ab2e-4e73-94cf-abf8d0604008",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ecc063dc-a50d-4d7c-b85b-14291d351b00",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imaging_server/{id}.json",
               "response": {
                  "jsondocId": "c2c89fe6-87f6-44f1-ba49-76b55ec52cca",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "imaging server"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new imaging server to cytomine.",
               "methodName": "add",
               "jsondocId": "366ace13-7900-46b9-8094-fdfbd21eb78e",
               "bodyobject": {
                  "jsondocId": "dd3d45f9-8a0f-4f55-8642-5fcaa5b4c4b5",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "imaging server"
               },
               "apierrors": [
                  {
                     "jsondocId": "99656e42-3e32-4a28-b19c-86bf75750b6b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "cf866ba8-b100-4599-9b3c-98de57109d4f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "14e18816-9996-4a34-90cd-a29523b1f5a7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "63bebb1c-3f14-4084-9a0a-2e10d7a6d528",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "109f3a02-f099-4eb8-a876-19b917e51ea0",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imaging_server.json",
               "response": {
                  "jsondocId": "ef1e116c-5807-4c76-b3cf-c5f804f64734",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "imaging server"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "0fa8d875-aa57-4a36-8c54-3736fa99d1bb",
                  "name": "id",
                  "format": "",
                  "description": "The imaging server id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "bea1a121-6820-42bd-940c-2c038273e361",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c3535ac6-d073-4d37-b41a-3f94d8741231",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "DELETE",
               "description": "Delete an imaging server.",
               "methodName": "delete",
               "jsondocId": "ced4a981-0416-4991-ae0a-1021728e7cef",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "5344b05d-1094-4d56-ba90-0f2cc82635cc",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f528c3f0-f513-4fc4-8059-885a070a77f7",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "3e71d6bc-d0d2-4146-82de-ffac90fa6909",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "936ce2db-a5f2-4798-aa57-ad25b992bd58",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imaging_server/{id}.json",
               "response": {
                  "jsondocId": "2b1ec75a-78f3-4162-a438-d4519db99912",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "imaging server"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "5845d749-c375-44e5-9d8b-fe45bb0e3a81",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "748a8f1b-a1f1-4ff9-8ed4-f942fdf238b0",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List the imaging servers",
               "methodName": "list",
               "jsondocId": "75abcceb-45d8-4b47-a610-6c0968bd3840",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "21ef834b-396c-40ac-a295-f158367a94b2",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8b09f3f1-62a7-4bea-9998-88abd21078c4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "243345b0-cda2-4d84-b6dd-baadc6f81348",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "12c8c928-60d5-40f0-b292-abe174c5122b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imaging_server.json",
               "response": {
                  "jsondocId": "42cd0e48-7ef2-49ed-a1d6-0e604694b84f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "imaging server"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Imaging | imaging server",
         "description": "Methods to manage imaging servers"
      },
      {
         "jsondocId": "3a2d1109-3434-46ff-8ac7-646758657b0b",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "dc38960a-6db7-46c3-8ce6-a87c4a5e0476",
                  "name": "id",
                  "format": "",
                  "description": "The sample id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a sample",
               "methodName": "show",
               "jsondocId": "beecd249-1043-478e-9e8e-b718a9a8b311",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "b9e196ce-6351-42de-8441-eeac35fef036",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "83a46c39-8994-4764-a6aa-74a8e05d3d79",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "83a644b1-e55c-46a0-9ed9-b275c36aa427",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7dd9567e-e106-48fa-a2ba-b93d2568c1f8",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/sample/{id}.json",
               "response": {
                  "jsondocId": "363c43c5-4bd4-4a9b-bf86-bc0ea0d78250",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Sample"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new sample",
               "methodName": "add",
               "jsondocId": "2aed0cd8-c3fb-446c-9afd-f81bb4ffebbf",
               "bodyobject": {
                  "jsondocId": "3bf762c6-b727-4cb1-b8ad-f7ff882b71cf",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Sample"
               },
               "apierrors": [
                  {
                     "jsondocId": "c5a8fa91-bcc5-4a89-97bb-3879fe718f2c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6b2e7182-299b-43da-832a-0a340415874d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "623f5fed-6c80-40e9-a263-a1313a7c21ae",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f6685413-c5e9-4a3a-b606-03d283d6e7d8",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "367a82ef-6dfc-4451-908c-b4f9274cf55a",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/sample.json",
               "response": {
                  "jsondocId": "b485fb45-4b0a-4319-852b-c129185a7e69",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Sample"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "09bdfe71-6397-4f79-a231-d70f6b4942a0",
                  "name": "id",
                  "format": "",
                  "description": "The sample id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a sample",
               "methodName": "update",
               "jsondocId": "cf52e5b2-869a-4be8-979f-a2f5c296fbc3",
               "bodyobject": {
                  "jsondocId": "712c7e83-6f7c-46af-bd88-77eae5497344",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Sample"
               },
               "apierrors": [
                  {
                     "jsondocId": "9c6ac159-c052-418f-bf76-cf22eede9ad9",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8da244de-adae-42eb-9fde-619cfc5cc37d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "680549db-6aef-4469-82db-81e922e82a25",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "5dfafbf9-2055-4999-8578-56703898de19",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "65784489-ab8f-4839-a0fd-c10af8c58319",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/sample/{id}.json",
               "response": {
                  "jsondocId": "3fdf27fd-6e85-4d4b-b1bf-38c6e53918fb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Sample"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "208fad59-5ac1-4a1c-b719-fbd0c89eaa28",
                  "name": "id",
                  "format": "",
                  "description": "The sample id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a sample",
               "methodName": "delete",
               "jsondocId": "8146f71e-5268-43a0-9a72-06409af84dc6",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "05fed8c1-82e4-44e6-84d3-defc7fe30564",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "803a7e62-df5f-4af9-8eed-f7decd638100",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "29936443-1776-4024-af36-fcd1d7f354de",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "bb4c1d4f-391e-419c-ade5-d9778de3a258",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/sample/{id}.json",
               "response": {
                  "jsondocId": "1339fe45-89cf-433a-a8ab-c80e69f27dee",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Sample"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "63bc2a58-c540-4087-a593-937fb1bd1a45",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6f39fa5f-c8f4-4ed6-9bd0-03b56fb5d9ca",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all sample available for the current user",
               "methodName": "list",
               "jsondocId": "81d9c321-7a65-43c9-97ae-2a1eaad3a8bd",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "8cca4a0e-102c-4c6e-add9-25acea57bc5d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d3c4f359-e068-44de-a21d-85da918348df",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "dedbe94d-b7fc-4a36-905f-2d4ab81ff606",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "529e138f-805e-4704-9834-277f3c706fe8",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/sample.json",
               "response": {
                  "jsondocId": "6b1b104e-70be-4ca4-a006-1c8a3acb7a07",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Sample"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Laboratory | sample services",
         "description": "Methods for managing a sample, part of 'source' that has been scan to image"
      },
      {
         "jsondocId": "07feab7b-1994-4b42-aafd-17c0b69247cf",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "0477e703-80e6-4a81-8edd-c9de3433844f",
                  "name": "id",
                  "format": "",
                  "description": "The instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get the value for a parameter for a specific queue based on an id",
               "methodName": "show",
               "jsondocId": "eb52536d-df33-489f-a782-68efd90a8ec8",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ee51d6cd-a117-48bc-b7da-21d29f57c9b1",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e88120ba-8ce5-4ee9-9f7e-1a8b33f8c840",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4c1da04b-7345-4bba-8098-23f0a4cc6e1f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "83542d36-a14e-4183-9ab6-9345e5c5384a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/amqp_queue_config_instance/{id}.json",
               "response": {
                  "jsondocId": "a74fce3d-cc8f-4fa8-a678-d0f2800652d1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue Config Instance"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "4d131649-da31-4431-9616-c14a9f83a201",
                  "name": "id",
                  "format": "",
                  "description": "The queue id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "8c1e7aa6-4ec2-4726-b85f-ded208ae8e54",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9013508f-e483-44bf-959f-ae318e7c733c",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all parameters/configurations by queue",
               "methodName": "listByQueue",
               "jsondocId": "b4ec3115-f736-4fd4-894b-4ef697521884",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1ee3a44f-2a78-46c2-af81-d5cdf73c2026",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9901de2f-fec9-47d8-97d0-d7f980358785",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7fab344a-e0d1-47ba-9813-d8af1466d88a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "dcce67d2-7330-4a5f-b30f-1f321de3446c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/amqp_queue/{id}/amqp_queue_config_instance.json",
               "response": {
                  "jsondocId": "c782039c-fada-460a-8a72-2cbe5b0e0e3b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue Config Instance"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new value for a configuration and a specific queue",
               "methodName": "add",
               "jsondocId": "85e2ab2d-9070-4410-b145-80afb531b8cf",
               "bodyobject": {
                  "jsondocId": "2c9bc562-4385-49a6-823a-a637f89e59ff",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "AMQP Queue Config Instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "1293bec8-bdd1-4f66-8fe2-945541feaf94",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6a19d40d-d1b9-4abb-8008-ef24d9fc53fa",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0009c844-6285-40f4-9f94-88b87a85f7d9",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "0536d65b-5ccc-4842-9d5c-2cf315e8ac73",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "30b79f33-443a-46e1-95e2-801586612b9d",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/amqp_queue_config_instance.json",
               "response": {
                  "jsondocId": "43d715b4-34e2-4942-a609-4f038a5c6225",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue Config Instance"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "4034c2ff-d2c9-481a-8b11-684f795e3446",
                  "name": "id",
                  "format": "",
                  "description": "The instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update an already existing configuration for a specific queue based on an id",
               "methodName": "update",
               "jsondocId": "730ec7ef-79d5-48a5-9316-ddf49fb6cb41",
               "bodyobject": {
                  "jsondocId": "6f34713b-b429-4e6c-9cc3-e8ce5325cc1c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "AMQP Queue Config Instance"
               },
               "apierrors": [
                  {
                     "jsondocId": "f91d44c5-133a-455c-97af-d9db268b1103",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f7bd9ab1-8b58-4a1a-a3fa-d7ef097ae28a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "cb41fcba-fbb6-4978-8e25-dc6f3e83277d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c00bdffd-b3c9-4917-b241-eee380cb1b9b",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "f82cf195-ebb7-48b3-87aa-1fc65f6a14a4",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/amqp_queue_config_instance/{id}.json",
               "response": {
                  "jsondocId": "caa50883-6f81-463d-8e27-6df71f903973",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue Config Instance"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "4760a7c9-5199-4fc1-86d7-4563be48e414",
                  "name": "id",
                  "format": "",
                  "description": "The instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a configuration for a specific queue based on an id",
               "methodName": "delete",
               "jsondocId": "1c372413-fc42-4af7-ba0b-ff61d517cb96",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1d852df5-c87f-4c0e-a771-ae31a4dae74e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c4da146b-62e6-4ba3-bd6a-9586e4844a4a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5a642b24-90d3-4d39-bedf-52c573ab564d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d83e23e5-ea91-411e-b232-f9f322346c55",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/amqp_queue_config_instance/{id}.json",
               "response": {
                  "jsondocId": "5793772e-e29f-44f6-94f9-ad04416523a8",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue Config Instance"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "f6b94502-5d99-4adc-a667-4f82efc466c5",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7f8e2cfd-5893-46bc-ab01-998550271a09",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all the parameters for the queues in the system",
               "methodName": "list",
               "jsondocId": "213a7d7d-503e-4b8c-86e1-a3ad84941e66",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "14ee4035-7fc7-4da2-b8af-7ef9aacc582a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "302d46c1-94a1-4ce9-be82-a616695160f5",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d58cd8ea-2284-49b5-a6b7-2467320e2559",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "38dc77c1-3581-4fff-9321-aa1c1bc8880a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/amqp_queue_config_instance.json",
               "response": {
                  "jsondocId": "655169bd-3d91-43af-a1a5-0ab86053647e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue Config Instance"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Middleware | AMPQ Queue Configuration instance services",
         "description": "Method to manage an instance of AMPQ configuration"
      },
      {
         "jsondocId": "b7a83ee4-293c-49cb-974a-86b738616abd",
         "methods": [
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "82f4880e-3cd5-4805-bb99-0963fa7d60a2",
                     "name": "id",
                     "format": "",
                     "description": "The parameter id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "88d637c8-0744-4104-94f2-e06ebd37a271",
                     "name": "name",
                     "format": "",
                     "description": "The parameter name",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a queue based on an id",
               "methodName": "show",
               "jsondocId": "ef0dad84-1008-4f21-9e9f-779147f40491",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "f1c9dacc-c489-4026-ba75-904ef34bf5e8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "46c89f03-fa07-4204-b81e-020f902f9f56",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c7a53b3e-ff58-4fa2-99a8-693012b8632c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "130a6a82-4fad-4802-8fb2-2a2de2fd3165",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/amqp_queue_config/name/{name}.json",
               "response": {
                  "jsondocId": "c5110aff-b771-4b3a-83e1-010b5147e3a0",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue Config"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a configuration for a queue",
               "methodName": "add",
               "jsondocId": "865461f6-459f-4f3d-a058-f940d0ec1f56",
               "bodyobject": {
                  "jsondocId": "1d277e57-fbf0-41e2-a719-63ebe64a74c5",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "AMQP Queue Config"
               },
               "apierrors": [
                  {
                     "jsondocId": "96f0a189-5f8f-4c43-b64b-97b6184ff63b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "59c33ed9-9948-4147-81b5-e7c0621aa1e0",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "eb4c3a83-47c5-47e1-9de3-9163a025f4ba",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "3e1b5f86-ab91-4cf4-98a4-096e5b681677",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "46dda126-8160-4c56-b7d6-8bab0725f97c",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/amqp_queue_config.json",
               "response": {
                  "jsondocId": "0f7eb743-8b8b-4218-accc-1c0a010d98df",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue Config"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "2994a5eb-1344-4dd2-a0db-87ab7d7ae7fa",
                  "name": "id",
                  "format": "",
                  "description": "The configuration id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a configuration based on an id",
               "methodName": "update",
               "jsondocId": "4639e1f9-8f94-481e-acee-79ef2cbe2a15",
               "bodyobject": {
                  "jsondocId": "f311e752-cdc1-4f81-9dcf-426c79687213",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "AMQP Queue Config"
               },
               "apierrors": [
                  {
                     "jsondocId": "d881b3bb-6a63-4a2c-b546-d5d31f8d0319",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9795efcc-4ae8-41b3-ae9e-8fceccda51b0",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "fc3bb75b-7a36-4455-900b-d267abc686bd",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "626fde1a-746e-4037-a8b6-445f7c86a557",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "761ed004-7946-4aeb-b943-a19f152bda1d",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/amqp_queue_config/{id}.json",
               "response": {
                  "jsondocId": "f8f3f861-a3c7-46e7-8bc2-6b185e96d1e5",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue Config"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "571cdb1e-2271-44f6-be07-0b9161ff079f",
                  "name": "id",
                  "format": "",
                  "description": "The configuration id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a configuration based on an id",
               "methodName": "delete",
               "jsondocId": "2dc5fdf6-9875-4991-856c-509c4170d1b4",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "82f44173-0356-4a46-bada-790ca205e181",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9826fa8c-63ea-4ef3-b7ae-4d1ff0881400",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "6340ab1c-46ba-4250-8a48-8d87b6892e2d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "be5dc51e-2492-48f6-94cf-430eab561b8d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/amqp_queue_config/{id}.json",
               "response": {
                  "jsondocId": "3c138e0a-8db5-412e-bafd-b9f07206ba2f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue Config"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "4f15222f-3a6d-4307-ab0e-b844cb19a4db",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0a347e7c-02af-4ce5-bf39-9c73f583f393",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all possible parameters for an AMQP queue",
               "methodName": "list",
               "jsondocId": "7c332865-b73d-4dfb-9cc9-4c06b99580e4",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1f432a2b-fee9-4556-b874-63e2096fefc1",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "2314c220-c2f6-4e3a-9768-1f97611fa501",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8ffe256b-fb49-4799-9e05-e4c1fdd9d70e",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "331841a5-01fb-4599-8e10-592a7a009a52",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/amqp_queue_config.json",
               "response": {
                  "jsondocId": "3212ee63-b6ba-47ff-89ac-2a9f9668c46b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue Config"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Middleware | AMQP Queue Configuration services",
         "description": "Methods useful for managing AMQP configurations"
      },
      {
         "jsondocId": "d2962c74-e84e-45ae-b5ac-a0b22024c68c",
         "methods": [
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "41337d16-7d67-45bd-86c7-862357f2ca47",
                     "name": "id",
                     "format": "",
                     "description": "The queue id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "497b491e-622b-4cb6-831a-9c5e4386bf0c",
                     "name": "name",
                     "format": "",
                     "description": "The queue name",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a queue based on an id",
               "methodName": "show",
               "jsondocId": "09f6eb09-8edb-4292-8381-75b4fa85ce52",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1713dc6a-a275-4299-b7f6-5edd669d0cb4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "1daee6b5-6a14-45ef-ab8b-f6c0e53ebdf6",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "fe3299c0-32a8-4d07-ace4-31fac57d727c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a9fe6c9e-b985-41c6-a5e4-73d5a0a1a104",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/amqp_queue/name/{name}.json",
               "response": {
                  "jsondocId": "fccc72b7-eda0-4858-97a4-c11c5f328314",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a queue",
               "methodName": "add",
               "jsondocId": "4b15b46d-13bd-4f3e-b7cd-2e1e0d4c668b",
               "bodyobject": {
                  "jsondocId": "41a3b2e5-807b-4cda-a69d-a4cff55bdc5f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "AMQP Queue"
               },
               "apierrors": [
                  {
                     "jsondocId": "8c9fb51d-7b9c-4ebb-bec8-e298e5b3fcbd",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "fd4011f1-ec81-4da3-b322-efe420f1e537",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5eba4eeb-b644-4d55-885d-e065c0352961",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ea8adb42-5c33-427d-89d8-67b1ef8f5d7b",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "34ab469b-9e2f-4cfc-a995-22589af4b3a3",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/amqp_queue.json",
               "response": {
                  "jsondocId": "f31cd9f6-f01a-42ea-957c-1bf8fa03d4ab",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "e0ac1361-8c73-423c-993c-484b98a66c87",
                  "name": "id",
                  "format": "",
                  "description": "The queue id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a queue based on an id",
               "methodName": "update",
               "jsondocId": "90888bb3-2721-4083-b8a6-2e56a3c66c4a",
               "bodyobject": {
                  "jsondocId": "7c521864-f81d-4a95-94c1-4e597e0f92f1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "AMQP Queue"
               },
               "apierrors": [
                  {
                     "jsondocId": "aa354e10-3c2c-4496-8f88-3dae5edbd568",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a997e781-495f-4dd1-8d29-c54ebfc9d3af",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ac51e83b-45c1-4b83-9ef7-64e0b2bb82af",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "9fc34103-f8cd-4e6b-9f75-5891b2a89a2d",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "d5421381-cce7-4c8a-abea-5825810db2a3",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/amqp_queue/{id}.json",
               "response": {
                  "jsondocId": "2de930e5-562d-418c-a203-c96488aae840",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "7266d461-80b5-4e66-a88d-5e2238789e58",
                  "name": "id",
                  "format": "",
                  "description": "The queue id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a queue based on an id",
               "methodName": "delete",
               "jsondocId": "a47cb582-c571-465b-8b59-f6a13d3f0c56",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "6037b3e9-6d94-4a75-8c04-ede43b57b395",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7b2267b8-75a6-43fb-81bd-c6b30c4fc430",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "2d6007b1-887b-4e64-b2ce-2129654ba8d9",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "074afd2f-0a62-4195-966f-1130496bbc6c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/amqp_queue/{id}.json",
               "response": {
                  "jsondocId": "3d162a9e-6bfc-4ea1-8477-60ccad957b66",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "2225be4a-e091-45c9-b00d-0ba96c1ed36d",
                  "name": "name",
                  "format": "",
                  "description": "The name (or a part) of the queue",
                  "type": "string",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "ea94bab5-70e9-4613-84ad-c20d269fc99b",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c2704b16-88bc-4d5e-97f4-b47e8263c58c",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get active queues (either all of them or based on their name)",
               "methodName": "list",
               "jsondocId": "c6cc90a8-535f-47b5-ab1d-4b0635b215c1",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "e6ea31e4-4798-4c76-a5e7-38df6af65b7b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e9d4db81-9004-4fa2-8c19-6cca6312d4f6",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "1f9e77e3-90fa-4d2b-990b-1546025ec460",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ee6113ca-f56e-4c63-b120-51b3a55fa80c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/amqp_queue.json",
               "response": {
                  "jsondocId": "030e8b03-59ae-43fd-8636-4c9cef020506",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AMQP Queue"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Middleware | AMQP Queue services",
         "description": "Methods useful for managing AMQP queues"
      },
      {
         "jsondocId": "2247a42b-cabd-4af5-9ee5-5604bf26d95d",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "f32aa29a-7982-44bc-8961-0410ca1ed04b",
                  "name": "id",
                  "format": "",
                  "description": "The image server id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an image server",
               "methodName": "show",
               "jsondocId": "3ff8c20a-c78b-4f72-9d3f-b796643e1aa9",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "4ccbe9b6-381a-4978-89be-1bf21611b745",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8090c020-594b-4c7e-9dc9-6393ecad76af",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "83246f2e-f598-43df-8663-314c94a7b6e7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "dfd693e6-ca10-44ad-82ec-2742a917f631",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageserver/{id}.json",
               "response": {
                  "jsondocId": "33758b7e-c7d3-4acc-8b98-45daf6ae9b96",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image server"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "9dcec488-2a41-4e32-8a0f-2a75ea8d6831",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5a7c1b6b-4dfb-4120-8424-83ee1db9a952",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List image servers",
               "methodName": "list",
               "jsondocId": "9aadbdb5-575c-4574-a5b8-999934f983a5",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "04b9a72f-f855-4291-b37e-75a52b3525f1",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f98962c3-6689-4cf5-8ca5-372679fb415c",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4e02caf0-f4b8-4e5b-b1f4-98dff8fa72fe",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f6bb135f-5b21-4440-a349-8bbc13c52abc",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageserver.json",
               "response": {
                  "jsondocId": "65fb9217-768b-4924-afaa-69547bd1055d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image server"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Middleware | image server",
         "description": "Methods to manage image servers (IMS)"
      },
      {
         "jsondocId": "df63d678-65c9-48a0-ba2c-7266a67688a9",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "68c1dee3-b5eb-4589-983b-2d26fc23752e",
                  "name": "id",
                  "format": "",
                  "description": "The message broker server id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a message broker server based on an id",
               "methodName": "show",
               "jsondocId": "bd6c38f8-32da-4ee7-a96a-dabff216a5ec",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "85fd608f-e5fe-444f-b0f3-8fccaf4ccee7",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "0ae8d75e-5e49-495a-9e76-786c0254566d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "22e22f07-ecaf-47ee-a3ea-3db05996ed1f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d6e0c89a-ae21-4122-b708-5fd67c84e317",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/message_broker_server/{id}.json",
               "response": {
                  "jsondocId": "8ab88f17-796e-4147-be42-4e8c7710953f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Message broker server"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a message broker server",
               "methodName": "add",
               "jsondocId": "d4f20833-de40-4a8d-b184-ee524cd85a1f",
               "bodyobject": {
                  "jsondocId": "3cb995a8-136b-4242-a5c0-54a279e5b44e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Message broker server"
               },
               "apierrors": [
                  {
                     "jsondocId": "0506ca95-091a-4413-807c-95ec20f8d8ac",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "58280b7b-884b-46a4-aee6-740443a6753c",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8ad38573-09ce-4e8a-9970-0696ac0c031f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ccfd88d0-549c-440f-8652-f194def720f3",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "51339deb-c30b-4286-9ee0-91d4ce684cdd",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/message_broker_server.json",
               "response": {
                  "jsondocId": "feb73209-9cf6-430e-b675-acd448021c20",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Message broker server"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "cae2c2f0-572c-4c03-9153-09bea0e55d26",
                  "name": "id",
                  "format": "",
                  "description": "The message broker server id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a message broker server based on an id",
               "methodName": "update",
               "jsondocId": "243c6a05-00b2-4c6a-9b1e-c7bf6dab7879",
               "bodyobject": {
                  "jsondocId": "ef1d6c78-f476-481c-81b2-164e23d6bd5b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Message broker server"
               },
               "apierrors": [
                  {
                     "jsondocId": "8dbea7b3-7953-4ec7-b942-ceb92328ba4d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6ca9b4ea-5dac-47c6-a5d9-093eb1a83086",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "80bf0a99-275e-473c-beec-8c7f9b4fa45a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "79fe0ea5-386e-4dc0-a4a7-7529ad2b4638",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "ffc30543-638e-4e4d-9fc1-8cf3a6d362b8",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/message_broker_server/{id}.json",
               "response": {
                  "jsondocId": "7d449e15-225a-4b3a-82c0-f6a0ec5ded3b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Message broker server"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "d6b53d53-e56f-469f-99c2-5f88b2238f68",
                  "name": "id",
                  "format": "",
                  "description": "The message broker server id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a message broker server based on an id",
               "methodName": "delete",
               "jsondocId": "7f0dcd3d-1b61-4151-a919-7ced8cf04624",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "91ec8ca8-9013-45c1-91c7-1b07986601cb",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8979fdcf-389d-4c7f-9dbb-4c5c067006c9",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "685d9c25-4a0e-4ced-b370-8cdf84ba055b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c607ec50-3f82-4358-b1ab-6465fa787aa9",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/message_broker_server/{id}.json",
               "response": {
                  "jsondocId": "d0dbd5bd-f1a9-46df-a146-e1087a5421f5",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Message broker server"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "9975aa71-a2e2-4bd0-be9b-b2fb60c4e61d",
                  "name": "name",
                  "format": "",
                  "description": "The name of the message broker server",
                  "type": "string",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "83a0e931-597f-444b-b8e1-431c2ac403f3",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3056e44c-3374-47a0-a3aa-cd9f6a4b1c03",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get message broker servers available that contains a specific name",
               "methodName": "list",
               "jsondocId": "d2017e44-eed5-40fd-8be8-b675284a9850",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "02708374-7cd3-4686-a222-42dd38f34bf9",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "61f63976-3d85-494c-b84d-6f48eee1b0e6",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "da2f163c-9ec5-4842-a729-e61bd3e99d6c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ef964b39-4b3b-48ca-be58-268a0cdf1863",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/message_broker_server.json",
               "response": {
                  "jsondocId": "2c2f03c5-1a6c-489c-afb6-7425d027e86b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Message broker server"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Middleware | message broker server services",
         "description": "Methods for managing message broker servers"
      },
      {
         "jsondocId": "3f1682da-1081-4aae-9f70-db81e9d83f0f",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "45b5fda8-2966-4854-a11e-265d9359f628",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an algo annotation",
               "methodName": "show",
               "jsondocId": "cc0a852e-bd4a-4260-b899-b476e3e4f445",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "bac50153-1efe-487f-a516-013c0bee70a5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "0bc9c166-5fbb-4574-bcfa-3736ea33b9b1",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "bd6242da-c241-499f-8bb0-08d818a20f5c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "68734928-f649-472d-9045-a861fa5b3e1a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/algoannotation/{id}.json",
               "response": {
                  "jsondocId": "de842156-9770-430c-a6a1-cf9c71ae4c4d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Algo annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "55e7898c-25fa-4603-9295-c8f3ddba2b8a",
                  "name": "project",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "a59408db-8a44-4a6b-b5fb-e024e8b377ad",
                     "name": "startDate",
                     "format": "",
                     "description": "Only count the annotations created after this date (optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1efadfae-cc33-4513-bb09-5f1139dc7620",
                     "name": "endDate",
                     "format": "",
                     "description": "Only count the annotations created before this date (optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Count the number of annotation in the project",
               "methodName": "countByProject",
               "jsondocId": "2cd0baee-973e-4bfa-9440-85d382a9149b",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "8b7d28fc-8fde-48ae-b75e-bab14e962912",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e705bc90-d903-41d3-a5c8-fe5fb8557032",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5af54dca-07cc-4725-af90-bd07bdb4d151",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f71d0d12-faca-4451-8be0-d26de5750d7d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/algoannotation/count.json",
               "response": {
                  "jsondocId": "a82e0658-a23a-4ae2-8712-f808b040ae70",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[total:x]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "518c469d-4345-4f0a-a46e-ccf6989fd804",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "32010808-486a-41a5-9224-5d3633a8f909",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "05417533-80f6-4218-9bf8-4714b2fa4640",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "dfa7f320-0839-4418-bb3e-571818eec394",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ef5bc444-15d6-427e-abc6-20dac6a70586",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "561db84c-40eb-4cf7-b007-da0ae9912edf",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "bf683179-5c32-4584-a608-c1eeb8d2bd2d",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a1ca5d67-edce-4ae0-840e-71881bea8cb1",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "93296a7e-6960-48e6-bce8-e73ff24ee76c",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2554d2dc-8e72-4638-a8c9-c8d6033a55e5",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get an alpha mask of an automatic annotation (image area framing annotation). Equivalent to crop with 'alphaMask' type.",
               "methodName": "cropAlphaMask",
               "jsondocId": "ae0674ea-d663-42ab-b5b5-7f8ee2d9f472",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "62b3e73f-4009-4f46-9e42-1d8cd95de3bf",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b7e842e7-8dd5-4517-800c-880ccb67d7c5",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d7865536-893b-4cb9-b413-f36ad42a8bfc",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a4c16f57-5f2b-4491-8d14-c28c3a05864b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/algoannotation/{id}/mask.png",
               "response": {
                  "jsondocId": "f80cf8cd-49b6-4b5d-844a-51731d7d0bb2",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "cb39343f-92cc-47d9-b373-c605a8ef250d",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "4f118c11-2c86-4301-803b-924e545f3f60",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7152d0f6-353b-426f-b34d-e2b0de842f25",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7c2ff67e-1cc0-4f33-8703-1a65a501b26b",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "26661412-a120-4889-bdf2-214a1297bfb2",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "52d1b0c2-4862-4d62-b385-f991f5519699",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7e439231-3eb4-4886-b21a-da3f92c2b7ee",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c762d8a7-2758-4316-8f5b-715321572072",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6be064d5-7adc-4fad-91a6-235967653efa",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d7c00721-b30e-44e8-b9d7-3e87c50e8d77",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a binary mask of an automatic annotation (image area framing annotation). Equivalent to crop with 'mask' type.",
               "methodName": "cropMask",
               "jsondocId": "9f197c69-2a45-4855-9b73-f89a59860c49",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "aa0afd64-515f-4c5d-a25f-8c92694ed2d1",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "cedad6d7-d286-46a8-add8-080c941d9f0c",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "f1c20f17-2b19-4fe7-aa5a-ce6adfdfdbf7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ff228a55-10e6-46e2-a145-9ae82a677da6",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/algoannotation/{id}/alphamask.png",
               "response": {
                  "jsondocId": "347135fd-2825-4efb-b923-01d00a51581a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "582dbac0-76fb-4f89-ab80-caa57d7b46b6",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "fd563a76-8ad7-4680-9dfd-dd6577a1ec2d",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7f8588dc-f074-4afe-a78d-429488a32da8",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "edd9ce35-7442-43df-b593-ae9e96c50355",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5ee89d94-75e2-4f3e-b070-360a4e1818fa",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b0cc3967-1449-45f9-9550-53e09eddefe4",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2a82c2f7-9057-44f1-8d6e-9945695634ba",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4b81ddc5-f123-4bdc-8aff-adfc7f3f64ea",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8cdf79e8-34c4-42b5-a2e8-b10573a89d45",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c18cec43-62b3-43b2-bd81-a8ab61abd684",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a binary mask of an automatic annotation (image area framing annotation). Equivalent to crop with 'mask' type.",
               "methodName": "cropMask",
               "jsondocId": "5b1f3461-448a-462b-b3a1-e8a46ca90e4d",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1e56d8b2-ccaf-44a2-962c-bc464b99bcf6",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "bd07bb52-4a80-48c0-a335-dceec653a003",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e9fabb26-7ac6-47ad-8f51-37c49692d26d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "bb36343b-fea5-4b5d-8859-2c7a6ea3432f",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/algoannotation/{id}/alphamask.jpg",
               "response": {
                  "jsondocId": "b410805d-c400-4010-9d6e-e983a7e4b36d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "83f0cd3a-098c-4836-8b3b-99df8bfed34f",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "d968277d-0f78-48a2-b58e-57096a128149",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c6f8b30a-6c9a-4321-8173-70a9602cb0df",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7db40fd1-ca8f-4cb4-b13f-98cb8d46d01a",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b7086630-e28c-4652-a32b-b5c1e6596cdd",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f26f8a49-1678-4da8-8621-e1ff78f28c1e",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8e328d3b-d839-4bb0-9f14-9713eb684b46",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "aac59253-4ccc-4722-b72a-eeffc4e036d8",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "cb987600-d89b-4459-b0e9-77b009387d95",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "15eb6db1-58bd-48e1-888f-91fd4a2618c8",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a binary mask of an automatic annotation (image area framing annotation). Equivalent to crop with 'mask' type.",
               "methodName": "cropMask",
               "jsondocId": "f4f964b4-e1c7-448d-8d8c-01fae0f18a7e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "b40adee8-7b23-4a0b-912e-818e356e9ef4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e75dbabd-95fc-4690-8fb3-574fceb81645",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "72cb8362-2ca0-4ed8-84f4-8295962f5b2e",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d2017ca0-9e2e-4367-b01a-00696177d658",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/algoannotation/{id}/alphamask.tiff",
               "response": {
                  "jsondocId": "0dd0444e-b66f-4f1d-8595-363c783254e6",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "1fae9152-5142-4f87-b5d8-0ce393eab97e",
                     "name": "annotation",
                     "format": "",
                     "description": "The annotation id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "973faa29-adc4-4c10-9e8f-4c8c1ce5f30e",
                     "name": "id",
                     "format": "",
                     "description": "The comment id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a specific comment",
               "methodName": "showComment",
               "jsondocId": "d2ad48f3-a665-4d9e-9128-53d5cdcb744c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d60d27ae-85a9-45c1-a92f-f5352a3e3cf7",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "25397936-0680-4d76-b40a-698944585d4c",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4d19a842-da76-403b-a141-16a4fcf4893d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "70734297-01d3-488f-9e60-65a1a3115f12",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/algoannotation/{annotation}/comment/{id}.json",
               "response": {
                  "jsondocId": "16adb19c-48c0-4c73-8fb8-37ecfb859c7e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Algo annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "51123800-0432-46e9-bb21-e893da1b0b29",
                  "name": "annotation",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "077d80bf-a774-421f-8d47-f3bc5c0f72dc",
                     "name": "POST JSON: comment",
                     "format": "",
                     "description": "The comment",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ea1d84a8-fd7f-4406-ba28-c29e0a420e30",
                     "name": "POST JSON: sender",
                     "format": "",
                     "description": "The user id who share the annotation",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "143f24cd-712d-48b1-abad-8c01d6ce4aee",
                     "name": "POST JSON: subject",
                     "format": "",
                     "description": "The subject of the mail that will be send",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1a420142-fe55-4da0-89ef-c7120dbdaa3b",
                     "name": "POST JSON: from",
                     "format": "",
                     "description": "The username of the user who send the mail",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8aa6b7a2-8aaf-4c9d-aeb6-ee001aa4ca7c",
                     "name": "POST JSON: receivers",
                     "format": "",
                     "description": "The list of user (id) to send the mail",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a2d3e024-59b2-4067-86ce-b3f34ed469d1",
                     "name": "POST JSON: emails",
                     "format": "",
                     "description": "The list of emails to send the mail. Used (and mandatory) if receivers is null",
                     "type": "list",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "da1892eb-bba1-4a3d-be2c-c0a6b96c1c77",
                     "name": "POST JSON: annotationURL ",
                     "format": "",
                     "description": "The URL of the annotation in the image viewer",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ab561228-597b-4ee6-9fa6-9da7c4ade9a6",
                     "name": "POST JSON: shareAnnotationURL",
                     "format": "",
                     "description": "The URL of the comment",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Add comment on an annotation to other user and send a mail to users",
               "methodName": "addComment",
               "jsondocId": "2b8b5da8-36fe-4483-bc44-ab903b806db6",
               "bodyobject": {
                  "jsondocId": "c71de1a0-95ec-4267-9c12-ed66e7ab3556",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Algo annotation"
               },
               "apierrors": [
                  {
                     "jsondocId": "4acea83a-4776-477f-ad1c-fe9900c5dbc8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "5cbb5cc9-b43e-4e74-89f9-f1973dc41aa5",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d3fca953-fe21-4277-971c-d00f86670999",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "37df0d1f-52f8-48bc-be93-6b7a13377c34",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "a9b670b4-d71f-442c-95c1-cf378f7f7a57",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/algoannotation/{annotation}/comment.json",
               "response": {
                  "jsondocId": "28a075e6-ea25-4150-b12c-0ded8a69c56a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "47315017-73bc-4075-a038-f04b793ff71d",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "bcfa92ee-2cce-4c39-8575-4e49a2c31238",
                     "name": "terms",
                     "format": "",
                     "description": "The annotation terms id (if empty: all terms)",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "30289b3a-fb23-4a9f-a086-37389977fc62",
                     "name": "users",
                     "format": "",
                     "description": "The annotation users id (if empty: all users)",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e9993034-5632-4422-9295-721e4a4a2e40",
                     "name": "images",
                     "format": "",
                     "description": "The annotation images id (if empty: all images)",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "52dfa0ed-d252-484e-8d14-e106344a8512",
                     "name": "afterThan",
                     "format": "",
                     "description": "(Optional) Annotations created before this date will not be returned",
                     "type": "Long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5abe190c-5040-45dc-8bb3-f2303616232a",
                     "name": "beforeThan",
                     "format": "",
                     "description": "(Optional) Annotations created after this date will not be returned",
                     "type": "Long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b28ba550-5021-441d-96b8-9f823d5822b0",
                     "name": "format",
                     "format": "",
                     "description": "The report format (pdf, xls,...)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Download a report (pdf, xls,...) with software annotation data from a specific project",
               "methodName": "downloadDocumentByProject",
               "jsondocId": "1678696a-2187-465c-9eb7-1a44fe148393",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d2b4079d-e653-4283-be01-b0ed8ca6987a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "30b6c4cd-b7e9-48ce-856d-37133149945e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "054be6d8-05bb-4531-a892-09fc363092d4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "4eb3e2fa-3b87-49bf-89a0-357dedf7fb41",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/algoannotation/download",
               "response": {
                  "jsondocId": "3258cab3-b897-4551-927f-4e41e6cf225f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "58f55173-738b-4264-8030-0ca324d85f6e",
                  "name": "annotation",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "a06f7d1b-b37e-486d-962f-06b599c572bf",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "df83a9cb-2323-4f81-b7df-16f2ede6164d",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all comments on annotation",
               "methodName": "listComments",
               "jsondocId": "7aabfad1-6029-47d7-b591-2914132dbe99",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "0c2ad0d3-90f6-4762-9bb9-85a089d95206",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d0a78bb0-2ada-4cb4-baf2-02d5c21eb3a3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e291c993-bf51-41e3-8907-5eb6e708b39a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "3febba53-452e-45f4-9458-468d6501a58a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/algoannotation/{annotation}/comment.json",
               "response": {
                  "jsondocId": "0e8c681e-2f58-4b9c-964d-a71ac1f9c025",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Algo annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "522ae033-9b2b-4b12-8344-07d72de747a8",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "0c7bafb6-56a4-4372-9cde-4b0bd8526b44",
                     "name": "type",
                     "format": "",
                     "description": "Type of crop. Allowed values are 'crop' (default behavior if not set), 'draw' (the shape is drawn in the crop), 'mask' (annotation binary mask), 'alphaMask (part of crop outside annotation is transparent, requires png format)",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "fed55816-a308-462d-b22b-4734670bb251",
                     "name": "draw",
                     "format": "",
                     "description": "Equivalent to set type='draw'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2c7a53c0-f126-42ba-bee7-572dc833521c",
                     "name": "mask",
                     "format": "",
                     "description": "Equivalent to set type='mask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "24be1bee-3634-45fd-b0f3-7af826541158",
                     "name": "alphaMask",
                     "format": "",
                     "description": "Equivalent to set type='alphaMask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9cf631e3-110d-463e-a923-fe2c59d1e740",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0db46649-30f7-45d8-973e-86bff82f4cf4",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "823d87ab-8d5e-4ef3-a4a6-219fafbc2671",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ba0b74b3-79a9-4ef4-8722-a0d0d0a6b788",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "96ffb851-ae42-4933-9d0c-eb6a219ecbad",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ce35591b-7730-46c0-a81a-1846c659fa5e",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1f560de5-53a2-47cf-a528-c301f587da15",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a61a257a-da67-4753-8be6-9b3b6813a74d",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0a892655-e8ab-421d-966c-cd3f6c8e9a29",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a crop of an automatic annotation (image area framing annotation)",
               "methodName": "crop",
               "jsondocId": "712e13ae-03f2-4fa0-a79b-6007b015f04c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "bd36f411-b578-476e-9782-eed52f93f02f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e9b96518-c044-4237-9477-3d75792a1393",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a0658f6f-1e4d-45c5-8e82-85a44b30e2a2",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7fd43c48-4383-4517-9d17-7dbf7fe4697b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/algoannotation/{id}/crop.png",
               "response": {
                  "jsondocId": "16b9d8cb-f145-4927-b9ed-a8109c8518bf",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "6057a359-edf5-4b6c-91af-72fb826fea2f",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "05e66dcb-5ba0-41fd-a718-5242b4713f47",
                     "name": "type",
                     "format": "",
                     "description": "Type of crop. Allowed values are 'crop' (default behavior if not set), 'draw' (the shape is drawn in the crop), 'mask' (annotation binary mask), 'alphaMask (part of crop outside annotation is transparent, requires png format)",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "bb143ad7-29a9-42e5-8b7c-046fa7ca1ce1",
                     "name": "draw",
                     "format": "",
                     "description": "Equivalent to set type='draw'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "80aae730-efb2-4bc9-805d-5d9cbf41268b",
                     "name": "mask",
                     "format": "",
                     "description": "Equivalent to set type='mask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2d80c83c-0216-4980-b6dc-f85ab24d27e9",
                     "name": "alphaMask",
                     "format": "",
                     "description": "Equivalent to set type='alphaMask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d3902571-867c-4e1c-9fd7-f99e8e6d9d77",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "09db6de3-6dbe-4d65-950b-60df8686b665",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1ab547b4-a6f8-4f2e-b0a5-de888cbd0a8e",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "30599874-a3d5-46cd-a679-385151926adf",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ef404798-2331-495e-a5bc-505555b94eb1",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "601cb267-b404-4bcb-9700-d73fe42da4f1",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7fd9ec67-4645-4359-9254-46fda6d69b1c",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9f0885f0-8853-4693-98e2-660fd1027b70",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b89c4df7-59ac-49c8-9a85-4b2ad698c623",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a crop of an automatic annotation (image area framing annotation)",
               "methodName": "crop",
               "jsondocId": "521ac40a-60df-4e06-aeae-02ade7324df9",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "53171029-0a51-4b98-b047-f8f195f5565c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d39d2027-9a15-4978-8878-fd5e00ffaa25",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "55eaa1fa-a723-45b1-a6ae-0bd1f924250a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "2adecf87-996a-40ac-9fdf-e1e7744df55e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/algoannotation/{id}/crop.jpg",
               "response": {
                  "jsondocId": "05cfd6bf-2765-4a5b-864d-199b39dfa157",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "aa7ec332-5a7e-4b57-a3b5-62f950e1010c",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "b3bc4f58-ed67-43cf-864c-2d087efbfdc4",
                     "name": "type",
                     "format": "",
                     "description": "Type of crop. Allowed values are 'crop' (default behavior if not set), 'draw' (the shape is drawn in the crop), 'mask' (annotation binary mask), 'alphaMask (part of crop outside annotation is transparent, requires png format)",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1fdd14ea-1e51-4aa7-900a-87aefc6570ce",
                     "name": "draw",
                     "format": "",
                     "description": "Equivalent to set type='draw'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "fc83b6c5-f496-461c-8be4-9bc0675eea25",
                     "name": "mask",
                     "format": "",
                     "description": "Equivalent to set type='mask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e87830ea-db85-43c4-b925-6294da60f1f6",
                     "name": "alphaMask",
                     "format": "",
                     "description": "Equivalent to set type='alphaMask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "017dae7a-7c6c-4635-a9f8-c15fe27063b9",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7996d9b1-8b8a-4a0b-bf98-f8ecac253f0a",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a425cffe-9029-45a6-a700-4779465b77e9",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6d8a55f2-c5b4-4350-bc90-52d6e62d12ce",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0e612472-a25b-4a01-aa06-16fa741f8458",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3b04a041-b495-4d00-8f3a-89d069aec89b",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "eb12f30b-f0b6-4f20-9c00-090878e00279",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "af2571b6-1ac1-4468-a2cb-aaf47e164a59",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "dd83c275-de9c-4b84-9393-3465c1fd26c8",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a crop of an automatic annotation (image area framing annotation)",
               "methodName": "crop",
               "jsondocId": "54f180a8-f49b-49de-bdfa-c9dd0c1a56d3",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1b88033b-60b9-40ec-b57d-4d77cae6b635",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a66a09c2-41e9-4375-a5f5-6d77741d62b9",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4965ade9-3f0d-4225-b19a-7b56fe9dfa1e",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "46053f14-5f88-4988-be7c-754e5190c36e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/algoannotation/{id}/crop.tiff",
               "response": {
                  "jsondocId": "3768344a-a563-4ccc-92f4-ef4850e60668",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "39001cda-1b68-47ad-9b60-3bc4ce73b2a6",
                  "name": "POST JSON: project",
                  "format": "",
                  "description": "The project id where this annotation belongs",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "aa326c86-cd61-43ec-abca-f55b938ce670",
                     "name": "POST JSON: image",
                     "format": "",
                     "description": "The image instance id where this annotation belongs",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ff5e7650-8a07-42dd-841a-d6a726730aba",
                     "name": "POST JSON: location",
                     "format": "",
                     "description": "The WKT geometrical description of the annotation",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6fecb320-0ada-4957-bc66-92a506c23838",
                     "name": "POST JSON: term",
                     "format": "",
                     "description": "Term id to associate with this annotation",
                     "type": "long",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "584b13ba-cb7f-4fb6-bc7f-db0ef11ea406",
                     "name": "POST JSON: minPoint",
                     "format": "",
                     "description": "Minimum number of point that constitute the annotation",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d0fbeb0b-b0c0-4fa5-aa25-fdd468f41493",
                     "name": "POST JSON: maxPoint",
                     "format": "",
                     "description": "Maximum number of point that constitute the annotation",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Add one (body is a JSON object) or multiple (body is a JSON array) algo annotations",
               "methodName": "add",
               "jsondocId": "af80ec09-2655-4dfb-bf32-54606cfebc81",
               "bodyobject": {
                  "jsondocId": "6e3eeb34-9365-4e19-bcaf-5070a2d23fac",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Algo annotation"
               },
               "apierrors": [
                  {
                     "jsondocId": "39946d47-6b2a-4429-9197-04c6f4dfd3e4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a3315326-0dbc-4e16-815d-548316600b88",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "b9c44ba2-29af-40ec-b4e8-2d3a42f17739",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b3e0286a-9f42-4006-841b-21c824513617",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "bafe2c61-dc15-4e73-a317-418908337ac7",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/algoannotation.json",
               "response": {
                  "jsondocId": "58946f0f-f035-44ec-8883-4b06c18cf611",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Algo annotation"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "f18169af-caf3-45a9-a2c9-91ad44811867",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update an algo annotation",
               "methodName": "update",
               "jsondocId": "3cc20c6c-e454-4f14-99e7-aef3098bbaac",
               "bodyobject": {
                  "jsondocId": "0242ebf2-38f6-4a2a-bedb-99e33d2b3003",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Algo annotation"
               },
               "apierrors": [
                  {
                     "jsondocId": "bed90f07-60d9-441f-9d32-9dbfb5259f19",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "59de61dd-2cf6-452c-b1f9-98d71c3d200d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7512c304-6fbc-4e40-8837-31858653b9ce",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "1c560db7-f7a5-4c13-8c79-0a68b323951f",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "a3724823-c390-48b3-8e67-1a409a7fb723",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/algoannotation/{id}.json",
               "response": {
                  "jsondocId": "9048c6a8-ba17-476e-bae3-9a487b519c8d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Algo annotation"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "7674b16f-d893-43d2-a07e-2849497d4ccc",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an algo annotation",
               "methodName": "delete",
               "jsondocId": "26583a36-88ac-47a1-8a93-25f50e6165b8",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "427a3a71-b782-4d47-a9e6-79d5d3d65cf3",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "90239cdb-2373-4d71-bd8c-c27fd27ad4f6",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "f60fef05-915a-41f8-8693-a1375dd3617f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "4521962e-a726-43ed-9634-a45686b1cd30",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/algoannotation/{id}.json",
               "response": {
                  "jsondocId": "8038a752-6211-4cee-a099-21a59d15893d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Algo annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "3f0dd233-78e4-46c6-915a-69807395cc9e",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b50003b1-6a85-41b4-848f-ebb6586ddaae",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all software annotation visible for the current user. See 'annotation domain' data for parameters (only show/hide parameters are available for this service). ",
               "methodName": "list",
               "jsondocId": "2ecdd6f3-243c-4a77-8a5a-8d9abb547fe6",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "e79e4ba1-d551-4775-81aa-337e88c299f1",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ddcab370-b6a9-46e1-8124-164fbd634d37",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a7ae3f7e-46a9-44cf-bf78-863366c06755",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "57c52197-91c5-4546-9d08-cf098018859e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/algoannotation.json",
               "response": {
                  "jsondocId": "da0dec5b-9acb-43f7-a288-462ce1907961",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[annotation listing]"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Ontology | algo annotation services",
         "description": "Methods for managing an annotation created by a software"
      },
      {
         "jsondocId": "6ac207cc-0a62-4a37-8fff-94bc8afc2248",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "4f321b18-1769-4b28-a3e2-e782e0fcc27d",
                  "name": "id",
                  "format": "",
                  "description": "The filter id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an annotation filter",
               "methodName": "show",
               "jsondocId": "a35fe7ab-ccfa-437d-b5c8-cbfc865c2974",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "fc664b60-d195-42e8-aecd-1acfa61ce01e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "4e7d7007-19a5-4dc3-bf60-772434035231",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "15e5f962-7b06-475b-bd43-94cf53c1f2fe",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b41f224a-eef3-4dc5-9133-d9d7afca61c7",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotationfilter/{id}.json",
               "response": {
                  "jsondocId": "3daec172-73b6-44d0-8890-b325b9372302",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Annotation filter"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "9d7b1c44-28e4-47c1-a911-3087908db4d7",
                  "name": "idOntology",
                  "format": "",
                  "description": "The ontology id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "c6459177-0d90-457e-a9db-871e1ca647cf",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "15454ef8-c3dd-44c4-bfc8-ca444466038a",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all annotation filters available for an ontology ",
               "methodName": "listByOntology",
               "jsondocId": "89c5bd63-66d1-406b-88dd-949106bc2256",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "0c1fae58-ddbc-4599-974c-3bed31ff13f6",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "14c8b99d-df71-42dd-93a0-b388eebaf133",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ad415cb5-7740-41bd-9238-1474534bcef7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "02217d19-a2c0-4fc2-a2e1-e4d4511d1512",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/ontology/{idOntology}/annotationfilter.json",
               "response": {
                  "jsondocId": "7e2658eb-178c-4dc7-9910-b1a605b801a3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Annotation filter"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "49fee421-8999-4638-bec4-0b0158349626",
                  "name": "project",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "589b1349-88e6-4e7a-a5b7-3d61f7dac9bf",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "90b8ad03-1118-472d-a6c4-02db55e54c89",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all annotation filters available for a specific project ",
               "methodName": "listByProject",
               "jsondocId": "f07157f3-ed1e-472d-9c54-5677087e6ee9",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "21aeeb28-3602-4647-8b7c-7fcef6a4adfc",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f7ac6f03-8276-4888-ba74-a9670eb7b342",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "524f0bbe-e1f9-4f34-bd8a-32b4ca3d2dce",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ddad3e03-ef35-42bd-a0c0-0a38f2956b8a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotationfilter.json",
               "response": {
                  "jsondocId": "e3a819ca-7fc6-43bb-ab9d-2021c466426e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Annotation filter"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a filter",
               "methodName": "add",
               "jsondocId": "d3811895-9456-40d4-a0e1-2c9f4497e9bc",
               "bodyobject": {
                  "jsondocId": "943e944d-f74a-409b-811b-96772e0fb5f8",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Annotation filter"
               },
               "apierrors": [
                  {
                     "jsondocId": "904a12d8-8c6a-428b-9200-b6e5533d691a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ba85eba0-d023-4b9a-8c64-cd5a5fa32ae3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8a272db1-8b1c-4b46-a5c9-12c3fe68cbd2",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "9c4866a7-7a7b-47c6-b4a7-aa1798fb80c1",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "e906940c-e2db-490b-9062-d95dc3bd8720",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/annotationfilter.json",
               "response": {
                  "jsondocId": "dfbd5ee1-9831-4ddd-8be5-8d5a789670ff",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Annotation filter"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "180d9d64-9fed-44c8-89e7-2eb09b45ff6d",
                  "name": "id",
                  "format": "",
                  "description": "The filter id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a filter",
               "methodName": "update",
               "jsondocId": "2fc7dad1-b797-41c2-98a6-cec9324f78be",
               "bodyobject": {
                  "jsondocId": "8e6e3af7-8e56-4b46-af85-fead13626181",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Annotation filter"
               },
               "apierrors": [
                  {
                     "jsondocId": "9cc1c4b7-e71d-4b50-abab-8c3ec47ebbb2",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "2c7178d8-c984-45b1-8253-fe94f4cf296a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c305717d-bb04-4e99-9e9c-0e8cc85b300b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "04a649b1-2a63-4e3c-90a7-720b9104b4ad",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "1ce4dbcf-4f17-4110-b018-7e22f787ae45",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/annotationfilter/{id}.json",
               "response": {
                  "jsondocId": "fa33bad7-e488-4223-b3bc-e97cdf2e5a18",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Annotation filter"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "c82ec940-3be1-4d4e-9aaa-a2131dd655be",
                  "name": "id",
                  "format": "",
                  "description": "The filter id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a filter",
               "methodName": "delete",
               "jsondocId": "4d5f04a3-ff15-4bbf-af4d-d1f3b919aeaf",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "29feef34-97e5-41e1-a0aa-2252717ec200",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "df9b187e-b68c-4be4-94c1-dac1a40a2b02",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "9309e54c-ac50-4158-aad6-c365943997c8",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "3e719357-e503-41a0-916d-cfd898a381e9",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotationfilter/{id}.json",
               "response": {
                  "jsondocId": "baf50ab1-935e-4d7e-b119-c6fa89d829b6",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Annotation filter"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Ontology | annotation filter services",
         "description": "Methods for managing a filter for annotation search (save search criteria)"
      },
      {
         "jsondocId": "1c40f88d-c7a0-4529-845b-4836c0c94e3c",
         "methods": [{
            "headers": [],
            "pathparameters": [{
               "jsondocId": "50d3575a-c686-4682-ba61-afde0ae0cc3b",
               "name": "id",
               "format": "",
               "description": "The slice id",
               "type": "long",
               "required": "true",
               "allowedvalues": []
            }],
            "queryparameters": [
               {
                  "jsondocId": "3c2c4b94-9415-482e-9183-e6ff445460bf",
                  "name": "max",
                  "format": "",
                  "description": "Pagination: Number of record per page (default 0 = no pagination)",
                  "type": "int",
                  "required": "false",
                  "allowedvalues": []
               },
               {
                  "jsondocId": "4ebdbf1e-de9e-4cd6-84ef-e6cfb2a14ae6",
                  "name": "offset",
                  "format": "",
                  "description": "Pagination: Offset of first record (default 0 = first record)",
                  "type": "int",
                  "required": "false",
                  "allowedvalues": []
               }
            ],
            "verb": "GET",
            "description": "Get all index entries for a slice",
            "methodName": "listBySlice",
            "jsondocId": "1be91d00-3e42-4790-bb30-009768aff708",
            "bodyobject": null,
            "apierrors": [
               {
                  "jsondocId": "7682f85c-561b-4343-8d1a-a866876dd01e",
                  "code": "400",
                  "description": "Bad Request: missing parameters or bad message format"
               },
               {
                  "jsondocId": "8a1138b8-4dfa-40ff-897b-35767699d568",
                  "code": "401",
                  "description": "Unauthorized: must be auth"
               },
               {
                  "jsondocId": "d7e58ecf-e29d-4b67-8c8d-91deb807d312",
                  "code": "403",
                  "description": "Forbidden: role error"
               },
               {
                  "jsondocId": "2fb52ef7-de2d-48db-81c6-733865028f16",
                  "code": "404",
                  "description": "Object not found"
               }
            ],
            "path": "/api/sliceinstance/{id}/annotationindex.json",
            "response": {
               "jsondocId": "033934a8-2ae6-47ec-9777-adf849f5d2c5",
               "mapValueObject": "",
               "mapKeyObject": "",
               "object": "Annotation index"
            },
            "produces": ["application/json"],
            "consumes": []
         }],
         "name": "Ontology | annotation index services",
         "description": "Methods for managing annotation index. Its auto index that store entries <slice,user,nbAnnotation,nbReviewed>"
      },
      {
         "jsondocId": "bfacd462-46d3-4107-8678-216a4980550e",
         "methods": [
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "804dfcd1-730d-460f-a2e9-42590fa5cb7e",
                     "name": "idannotation",
                     "format": "",
                     "description": "The annotation id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "18db7bbe-e773-40d0-bec7-9a708438a725",
                     "name": "idterm",
                     "format": "",
                     "description": "The term id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c8ae9fd1-7d71-460b-8d84-0a19b256bca2",
                     "name": "idUser",
                     "format": "",
                     "description": "(Optional) The user id. If null, it will consider the annotation-term of all users",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an annotation term",
               "methodName": "show",
               "jsondocId": "291ea64e-e341-4895-9e19-f3146b740d8d",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "737b60ff-b291-4bb6-892e-46a0330fa3b4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ae1349b1-fc41-489e-aef8-44591b9a11a8",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "dcf329c2-4fe3-42d4-a1ea-a0a51cd07402",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f562383d-17a9-4b4c-954a-4ee3d4f5a3dd",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/{idannotation}/term/{idterm}/user/{idUser}.json",
               "response": {
                  "jsondocId": "4b286ff9-0653-487b-a7eb-d26369c20c4d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Annotation term"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "bc3bd76e-a28b-49cc-8763-18af65ae859d",
                     "name": "idannotation",
                     "format": "",
                     "description": "The annotation id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "057c8afa-d743-49c6-819a-4bc2df0249e3",
                     "name": "idUser",
                     "format": "",
                     "description": "(Optional) Only get term from this user id (may be a job)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "d35a2cda-fd49-4af2-8071-71327d388b33",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "012f3c2c-7269-4ff2-8786-604312ffcc0e",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all annotationterm for an annotation",
               "methodName": "listTermByAnnotation",
               "jsondocId": "0b845433-40b5-42ae-bac5-820788651f73",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "edb893d4-6db5-4771-9d02-e10c9858b689",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "0c199e4f-523c-4d15-a36f-9b6f9edcd060",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "83dc9f03-84b4-41a4-a85d-e44a8a731a40",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "1fae77f5-5213-4930-ad31-ec802d08d840",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/userannotation/{idannotation}/user/{idUser}/term.json",
               "response": {
                  "jsondocId": "0876b5fc-8419-45a9-9494-3031e35251af",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Annotation term"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "3a391298-ea4e-4ca2-8670-051149764634",
                     "name": "idannotation",
                     "format": "",
                     "description": "The annotation id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8b68b28c-2bec-4943-9179-8af770762b5a",
                     "name": "idNotUser",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "9e864e15-d0f7-4d1d-9655-6e62e4e3309f",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "044ffd80-e43e-4269-8939-925a52011768",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all annotationterm for an annotation except annotationterm from the user in param",
               "methodName": "listAnnotationTermByUserNot",
               "jsondocId": "9047fff9-c0fa-47cb-b89b-93aaf30d461e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "fd66fde5-9f24-4813-88f9-cb7a6797ec59",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "dfe74abc-41cf-40b2-b97c-c9ee9ba060ac",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "47a29723-3b7d-46b5-9575-e7a3bb58b69d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "792cbdd3-172c-468d-8a69-067b5ce41e65",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/{idannotation}/notuser/{idNotUser}/term.json",
               "response": {
                  "jsondocId": "448c473a-315a-4fa7-8539-8eee1f01b48c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Annotation term"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "f4c883c6-894c-4a48-b85a-6bde600f89a4",
                     "name": "idannotation",
                     "format": "",
                     "description": "The annotation id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2f488e4d-05e1-4401-b36f-9e84e6fd4fc8",
                     "name": "idterm",
                     "format": "",
                     "description": "The term id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [{
                  "jsondocId": "7e56655e-97af-4252-be40-58f270ae0778",
                  "name": "clearForAll",
                  "format": "",
                  "description": "Delete term for all users (no algo)",
                  "type": "boolean",
                  "required": "true",
                  "allowedvalues": []
               }],
               "verb": "POST",
               "description": "Add an annotation term and delete all other term added to this annotation by this user",
               "methodName": "addWithDeletingOldTerm",
               "jsondocId": "e3dafd6e-edc4-4151-84e9-5f466845d9ca",
               "bodyobject": {
                  "jsondocId": "a2f787bc-9739-4270-bb7b-011437fd1c7b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Annotation term"
               },
               "apierrors": [
                  {
                     "jsondocId": "b19efa5d-c200-4e5f-947a-3a7c56ec689b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ab4e4262-c899-4dcd-9ba4-f4ec0c76a85f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4783b6c3-9a6c-4e6b-af56-5138abd0a051",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "870faaa8-5980-42d7-be42-9534a7070464",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "fd7ac93a-5ea5-4490-a286-3446aa7111a9",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/annotation/{idannotation}/term/{idterm}/clearBefore.json",
               "response": {
                  "jsondocId": "ff6ac874-5d5f-402b-beea-ef8953b7c701",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Annotation term"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "b97f22c3-4e10-464f-bc7e-b57c68a6a0a3",
                     "name": "idannotation",
                     "format": "",
                     "description": "The annotation id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9d119aac-0adb-46d0-b8f6-b88462957c62",
                     "name": "idterm",
                     "format": "",
                     "description": "The term id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add an annotation term",
               "methodName": "add",
               "jsondocId": "ca11fb89-53ef-49f2-b85c-dd0069333c07",
               "bodyobject": {
                  "jsondocId": "0503ea6c-b088-47af-a064-c313a61c3c7d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Annotation term"
               },
               "apierrors": [
                  {
                     "jsondocId": "4f52edcf-5e92-4cd3-88be-45aa63ee20bf",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "94c5e732-9bce-4657-88f8-e2e9e3dd1291",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8f0d90d9-8728-4900-9286-45e36344f513",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e6be95c2-2015-457c-8896-dad48ff5a2d7",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "6e8f17e8-451c-48fc-9502-7e9a5b1e07f1",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/annotation/{idannotation}/term/{idterm}.json",
               "response": {
                  "jsondocId": "888a208b-9cdc-4059-a6ab-1a51bb36775a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Annotation term"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "a5cc0227-2cac-4fc6-bba4-8038ee4b5d87",
                     "name": "idannotation",
                     "format": "",
                     "description": "The annotation id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "449cf815-156c-4dd7-9110-ac5ab53aafc5",
                     "name": "idterm",
                     "format": "",
                     "description": "The term id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1e24c993-ada5-4e91-94c1-8c107b6ffab3",
                     "name": "idUser",
                     "format": "",
                     "description": "(Optional) The user id. If null, it will consider the current user",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an annotation term",
               "methodName": "delete",
               "jsondocId": "b3fd9108-66ed-47a6-b721-d3a599426e22",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "f02a76c5-4130-4478-a2a8-02ed053265a5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "844535e5-32a6-4c01-aa74-50cb63407476",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8140906b-5599-49fc-92d0-a90d5a61497b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e74cb21d-590f-4a7f-af22-eee3f0b991d4",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/{idannotation}/term/{idterm}/user/{idUser}.json",
               "response": {
                  "jsondocId": "d7810b8c-2017-49d5-adc6-2a10d8bc16b7",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Annotation term"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Ontology | annotation term services",
         "description": "Methods for managing annotation term. Term added to an annotation by user or job."
      },
      {
         "jsondocId": "13e3dbee-bb12-4713-a76b-81e488ee5497",
         "methods": [
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "8e51036c-480d-47b2-a707-b972ccf9493a",
                     "name": "annotation",
                     "format": "",
                     "description": "The annotation id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "45425f1d-073a-4577-8c95-4054ac4d7d07",
                     "name": "track",
                     "format": "",
                     "description": "The track id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an annotation track",
               "methodName": "show",
               "jsondocId": "8907122a-f948-47b5-9e44-a6b4d0cd8cff",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "223918f3-0601-49e5-9d7a-f909e813f8ee",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "5a0fc544-d2d8-473e-9405-3c7e5c83d2d5",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "53d5b526-66b6-4afd-9fb3-ca707dd04fd9",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "2551c071-c8fa-42e5-8fcf-ef7774077724",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotationtrack/{annotation}/{track}.json",
               "response": {
                  "jsondocId": "289868e1-1d71-4959-b467-9b09695dead9",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AnnotationTrack"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "bdc6d448-0537-4dbb-b5fb-63dfe2b0d8b7",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "306fadf0-47bf-4d44-aa42-6212c5420bf7",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c5942301-4c58-4c21-940f-328b9f2f87ac",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all annotationTrack for an annotation",
               "methodName": "listByAnnotation",
               "jsondocId": "ded1bbe4-4478-449a-b6b3-b083fb213436",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1040f160-250d-4506-b8d8-ab4ee2609484",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8ef88761-e98a-4fef-b59b-4abec5420fb4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "3092c13d-56e9-42b5-98ad-6a28529cc662",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "cc766b0d-76b8-4462-9f61-52d8303b2035",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/{id}/annotationtrack.json",
               "response": {
                  "jsondocId": "ecc5d153-1c26-4925-816c-f1515a4022fe",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AnnotationTrack"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "34de5f93-32c7-499b-9ff6-becd6e77a8ee",
                  "name": "id",
                  "format": "",
                  "description": "The track id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "670a895a-d7f0-4326-b7ce-ab3241c8b3a9",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6ee4be0c-7a67-42de-8609-efe00f83d476",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all annotationTrack for a track",
               "methodName": "listByTrack",
               "jsondocId": "c1e3d2d1-56d4-4d48-9b78-5a7b1bde77af",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "55c08e95-eb42-49fd-a310-fe806e8d9481",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9f02e1f4-9b83-4019-9c51-047db6dc44e8",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8b13c3b2-68e5-411b-9d2a-dd2033c13bf4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c33737b3-99e7-4799-8249-303b5a5a5e36",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/track/{id}/annotationtrack.json",
               "response": {
                  "jsondocId": "9e5f3563-9b83-4b0c-8c3e-83111b520e08",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AnnotationTrack"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Get an annotation-track relation",
               "methodName": "add",
               "jsondocId": "ec6c94c1-c3ec-4c8a-93cc-b3735e6baa10",
               "bodyobject": {
                  "jsondocId": "88f4aee0-2d11-4904-a944-4a2c1326a8f4",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "AnnotationTrack"
               },
               "apierrors": [
                  {
                     "jsondocId": "6ac22d4c-5f9b-40ec-9405-ac9fa7014572",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7ba74d70-6b96-4be9-abc0-4a21e832ed6e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "2cd3765a-104d-479b-9de5-baf5d3593ccf",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "02dea732-7717-4973-b998-ace4d79eae70",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "b5ddc290-1909-4333-b25e-dd79c6c77904",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/annotationtrack.json",
               "response": {
                  "jsondocId": "31b443db-76ff-4c80-b8bc-13c21277e86b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AnnotationTrack"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "d95f4fcc-4d4d-45fd-bd17-27ff8338294f",
                     "name": "annotation",
                     "format": "",
                     "description": "The annotation id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "fba6be14-2e0f-4211-8c20-2ec6ac4ac050",
                     "name": "track",
                     "format": "",
                     "description": "The track id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Remove an annotation from a track",
               "methodName": "delete",
               "jsondocId": "4ae185b5-3266-43ca-879c-75cd903a5f38",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "47bbc157-1285-4f92-a2f1-230da3da6a94",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f8338683-cac6-4595-8011-67a6f43235d7",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e5953317-1342-4149-af74-924e9f8ea21b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "91dcea12-82b1-4343-baa1-134855df556c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotationtrack/{annotation}/{track}.json",
               "response": {
                  "jsondocId": "8a241077-37ce-485b-bb48-9f15a5e365f0",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "AnnotationTrack"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Ontology | annotation track services",
         "description": "Methods for managing annotation tracks."
      },
      {
         "jsondocId": "0f09a256-1056-43c5-9393-54b0ee9cca5f",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "fb751f70-7447-427a-a3a3-c185cc6c9b9f",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an annotation, this works for all kind of annotation (user/algo/reviewed). It's better to avoid the user of this method if we know the correct type of an annotation id. Annotation x => annotation/x.json is slower than userannotation/x.json or algoannotation/x.json",
               "methodName": "show",
               "jsondocId": "a704e528-fb02-4f6a-9cb6-7d0f635e7164",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "fc38229c-cbdc-42fb-b3f8-150e303f7ad8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "293fb556-8731-49fd-9936-7c85e876802a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d3b2ed27-3494-4af5-8cb5-df7115841edf",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "25207eab-cb5d-4e65-905f-3ba59902d8ce",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/{id}.json",
               "response": {
                  "jsondocId": "b608d9ab-39dc-48f4-9c74-d0444095dcb7",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "annotation domain"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "514636a5-3d25-4c2e-9923-dbc12d8259d1",
                  "name": "idImage",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "7b992996-a4e5-4a97-a1a5-1a68d8e1e402",
                     "name": "geometry",
                     "format": "",
                     "description": "(Optional) WKT form of the geometry (if not set, set annotation param)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "00a06261-c8bc-46b2-aaf1-ac74e112949a",
                     "name": "annotation",
                     "format": "",
                     "description": "(Optional) The annotation id for the geometry (if not set, set geometry param)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "91db5fe3-b289-485b-8ab4-0c7f303575a0",
                     "name": "user",
                     "format": "",
                     "description": "The annotation user id (may be an algo) ",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6d0b80fa-d4ca-4f4a-b9e1-a5c98b9c5dd3",
                     "name": "terms",
                     "format": "",
                     "description": "The annotation terms id",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1e8a7a15-232e-488b-9d65-8fd49076310c",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4da92e27-889a-498f-85e8-e0150aa6f21c",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all annotation that intersect a geometry or another annotation. See /annotation/search for extra parameter (show/hide). ",
               "methodName": "listIncludedAnnotation",
               "jsondocId": "c5a43e43-ecec-4891-8c6e-ad1426a67334",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "f5ba5717-b0dd-4f11-96fb-78496c0acf57",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "07bd7d5f-5443-4366-8c15-fc1e70139ea2",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a5b288c9-4a1a-422d-ac10-9c7f532aab30",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "bf0ac289-d4aa-4fcb-a4cf-cb3ab2f572eb",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{idImage}/annotation/included.json",
               "response": {
                  "jsondocId": "84c20ec9-fb9e-4fb6-a1eb-50c2856a64af",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "0daa1ead-4034-4e6d-a695-5bd39aaa512c",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get annotation crop with minimal size (256*256max)  (image area that frame annotation). This work for all kinds of annotations.",
               "methodName": "cropMin",
               "jsondocId": "574b3349-1ee1-48e6-9fbb-8b818a15c7ff",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ca1b8b8f-e9f0-44fa-afa3-55e438c843ba",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8df90a3b-d56f-43b4-a7b7-8d29bdaab7e4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "2992c996-932d-4d92-8c6c-24c6de5d2b72",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d23db0e6-6dfd-4e7a-9fad-f8f898beed00",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/{id}/cropMin.json",
               "response": {
                  "jsondocId": "6c007d0a-abc0-4a9c-ab6d-fb69820149dc",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "716b9e69-9d57-49c0-aa50-0ab4744a2e7e",
                     "name": "minPoint",
                     "format": "",
                     "description": "Minimum number of point",
                     "type": "int",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "49c8a9fb-cc4b-4cd8-94ee-c380dd9e7369",
                     "name": "maxPoint",
                     "format": "",
                     "description": "Maximum number of point",
                     "type": "int",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "cd00608d-6030-40ad-b7e5-4f073b90113e",
                     "name": "JSON POST DATA: wkt",
                     "format": "",
                     "description": "WKT form to return simplify. This may be big so must be in post data (not query param)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Simplify and return a form. The number of points of the resulting form is not garantee to be between minPoint and maxPoint (best effort)",
               "methodName": "retrieveSimplify",
               "jsondocId": "bb2560a5-bf50-49e6-a892-805823f29b6c",
               "bodyobject": {
                  "jsondocId": "974f747e-20fc-4323-8bc6-b607fbb6a3e0",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "annotation domain"
               },
               "apierrors": [
                  {
                     "jsondocId": "b8e6cb5d-2c97-4f3e-a9f8-d87b98b370fa",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8494d6d2-ef2f-41eb-8c70-7110e276858b",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c3fb113d-e9f0-4298-a82f-679c529835fe",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "be9d2ebd-5612-45f1-bc71-ec3fda64af2d",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "d71a1bc9-294d-492d-a862-aaf93dc27756",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/simplify.json",
               "response": {
                  "jsondocId": "b3188a8b-1b20-4abf-a8c8-6b53d071c6a6",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "annotation domain"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "646917a9-1299-4926-be19-18af7e722ab7",
                     "name": "minPoint",
                     "format": "",
                     "description": "Minimum number of point",
                     "type": "int",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "53283862-18a2-4902-83ca-ba578bc3a38e",
                     "name": "maxPoint",
                     "format": "",
                     "description": "Maximum number of point",
                     "type": "int",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e791ebf5-5c4a-4023-a772-f1c44b657bad",
                     "name": "JSON POST DATA: location",
                     "format": "",
                     "description": "WKT form of Y",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4b2da5c0-dd01-496e-8cf1-3b9750fe483a",
                     "name": "JSON POST DATA: review",
                     "format": "",
                     "description": "Only get reviewed annotation",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "733b6ed4-3fbd-46a1-bfd8-c0b925a99e0f",
                     "name": "JSON POST DATA: image",
                     "format": "",
                     "description": "The image id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6cec58f4-1092-48d1-82a2-a69ef5caa0e6",
                     "name": "JSON POST DATA: remove",
                     "format": "",
                     "description": "Add or remove Y",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b03b7544-8fc6-4b4e-a3b2-ec9c25b1b4b2",
                     "name": "JSON POST DATA: layers",
                     "format": "",
                     "description": "List of layers id",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ca727dcc-fb9e-48ba-a0f4-ea4858e34102",
                     "name": "JSON POST DATA: annotation",
                     "format": "",
                     "description": "The annotation to correct (if specified, only this annotation will be changed; image and layers parameters will be ignored)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Add/Remove a geometry Y to/from all annotations that intersects Y",
               "methodName": "addCorrection",
               "jsondocId": "c52a694e-eaa9-4e2e-a798-c88a62efcf98",
               "bodyobject": {
                  "jsondocId": "04af012c-c2b1-4fd3-b865-63e1fe9e7f6a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "annotation domain"
               },
               "apierrors": [
                  {
                     "jsondocId": "de31b05d-811e-460b-9458-29a775579329",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "239b1192-89e7-4060-8c08-8f0991e633f2",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d8feea5c-a349-4218-a1a1-ff01e9c275c4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "9924370b-12e3-4232-8b2a-74c650738565",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "432813fe-02e9-438b-8ac7-8a81ac5c5c5a",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/annotationcorrection.json",
               "response": {
                  "jsondocId": "2a446abd-b84a-400d-85a5-de625d88b64b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "annotation domain"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "b9bd0484-cb35-4081-b15f-fc87a4c17450",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "83f5a642-ccdd-46ef-b18f-af002d158422",
                     "name": "reviewed",
                     "format": "",
                     "description": "Get only reviewed annotation",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "230824f2-7988-4052-bb32-407442f162ee",
                     "name": "terms",
                     "format": "",
                     "description": "The annotation terms id (if empty: all terms)",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6328429d-2f6b-4c0a-8d09-cdc90cc8b994",
                     "name": "users",
                     "format": "",
                     "description": "The annotation users id (if empty: all users). If reviewed flag is false then if first user is software, get algo annotation otherwise if first user is human, get user annotation. ",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e26fb20d-fadf-44fb-88f3-a9e0769ee117",
                     "name": "images",
                     "format": "",
                     "description": "The annotation images id (if empty: all images)",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "67720223-cea4-4d68-a1c7-354b940a7854",
                     "name": "afterThan",
                     "format": "",
                     "description": "(Optional) Annotations created before this date will not be returned",
                     "type": "Long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f7ca5dd5-e364-4b1d-ab62-d2669b27dde3",
                     "name": "beforeThan",
                     "format": "",
                     "description": "(Optional) Annotations created after this date will not be returned",
                     "type": "Long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e15a1b10-d6a3-41a1-9e07-39a1b1a24c42",
                     "name": "format",
                     "format": "",
                     "description": "The report format (pdf, xls,...)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Download a report (pdf, xls,...) with software annotation data from a specific project.",
               "methodName": "downloadDocumentByProject",
               "jsondocId": "e6093818-f68d-4a21-9de4-83cc2066cb79",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "cae8363b-71dc-4ce4-b85b-cfe07853cbff",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "de2c95d6-0be3-496b-8eb2-9991e3fbe4b0",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "3e79cf40-c063-4c99-b2c8-dd0141161976",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "42a8526f-9aea-4564-9f9b-227966a9d521",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/annotation/download",
               "response": {
                  "jsondocId": "dd4092a0-31bf-4b03-a7e0-5c733620edb1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "7074dbbd-8657-4de7-9508-ab99b25730ed",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "a029fa0d-ee5d-412e-948e-de1ed44cfa1d",
                     "name": "type",
                     "format": "",
                     "description": "Type of crop. Allowed values are 'crop' (default behavior if not set), 'draw' (the shape is drawn in the crop), 'mask' (annotation binary mask), 'alphaMask (part of crop outside annotation is transparent, requires png format)",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "772ccc4d-a54e-45b9-9a0d-9e7e0552a129",
                     "name": "draw",
                     "format": "",
                     "description": "Equivalent to set type='draw'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7106b839-8ba1-4bf0-8bd0-87f4168529ac",
                     "name": "mask",
                     "format": "",
                     "description": "Equivalent to set type='mask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a9ef1f8d-7c76-41c3-aafb-e13c0d88b270",
                     "name": "alphaMask",
                     "format": "",
                     "description": "Equivalent to set type='alphaMask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "73007e75-471c-4afd-879b-855e3968bdbc",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3b2b15e6-4208-4c18-a798-873ee293b9ba",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2c725cc2-6e02-4438-92cf-37aa49a3ad1d",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d4d81b6a-34b0-43f8-89fa-683f9cc2c2ee",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e19e89d4-f597-482c-befe-e6f9fa0d2afa",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "40e00c16-83e5-4268-8b2e-8ab54e3971ca",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "85b47b95-8bc4-4ea7-a00a-458300c941c7",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2d61706e-3cf9-4df2-9c29-d443aa794fb8",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "705fbd9b-bc5e-416b-be7d-2eac1bd7cb36",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a crop of an annotation (image area framing annotation). It works for all kinds of annotation but slower than a direct call to a specific kind of annotation.",
               "methodName": "crop",
               "jsondocId": "61a0c9c7-5481-4fcb-ac07-6ffe1c625d3c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "af88e829-441a-440d-93d5-f837715b3aa9",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "bd4d2125-b5d9-4f15-ba94-079a37e8ce32",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ba37418e-bcc2-4fdc-a4f1-89f8110997b0",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "0385d601-419f-4940-ab2d-07bdd2d5f7f0",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/{id}/crop.png",
               "response": {
                  "jsondocId": "6b061f01-fa28-4954-84a3-98223d956446",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "c14757f0-bb55-4296-8490-6f82923c2e07",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "5fdecf93-4974-4e14-98fc-d4250556e28b",
                     "name": "type",
                     "format": "",
                     "description": "Type of crop. Allowed values are 'crop' (default behavior if not set), 'draw' (the shape is drawn in the crop), 'mask' (annotation binary mask), 'alphaMask (part of crop outside annotation is transparent, requires png format)",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5f9f8278-b1db-4dd8-ae21-d5abbf36df82",
                     "name": "draw",
                     "format": "",
                     "description": "Equivalent to set type='draw'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6cee17d5-31e0-4068-8745-9aa90f3a5d58",
                     "name": "mask",
                     "format": "",
                     "description": "Equivalent to set type='mask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ed82ccde-2475-4136-b297-f905f9f60a8c",
                     "name": "alphaMask",
                     "format": "",
                     "description": "Equivalent to set type='alphaMask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0067e2f6-bef7-4ef7-97b9-1163fb5f021f",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1adb6713-4bea-45d4-a143-3c49053fc51b",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "054e583e-3951-427a-a7b7-2303087ce988",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1c86f5a4-894e-4de6-a2fa-0d7b3a45a93c",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4d5fff6b-013e-4c1f-9e52-33bb216b36d9",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "71c75fb9-092d-4a6b-b9a3-e0964cf53d71",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9c0aa58d-2c8e-4373-b0e3-4d9a8f93a9f7",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "09766c18-f2af-4a4d-b4fe-0124c6f02a21",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0707f188-c1d1-479a-9ea0-940fe470399f",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a crop of an annotation (image area framing annotation). It works for all kinds of annotation but slower than a direct call to a specific kind of annotation.",
               "methodName": "crop",
               "jsondocId": "2d3a32e2-5d4f-4518-ab47-308c7e2c06d3",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c3e2738a-6d7a-43cb-8e57-0b69b98817a8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b1681809-af0d-455b-a476-c7af7cd07983",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0c85da2e-9a88-45df-a86f-64a452aaa856",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "baa75e6b-ee76-48ad-8f7e-24a20bfd4abc",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/{id}/crop.jpg",
               "response": {
                  "jsondocId": "cdf9aa7a-6393-4316-b4cf-3946340d523a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "d8063c24-e469-4892-881e-a9daf4f50886",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "c2846907-0248-4ad7-9bc3-8772f1054005",
                     "name": "type",
                     "format": "",
                     "description": "Type of crop. Allowed values are 'crop' (default behavior if not set), 'draw' (the shape is drawn in the crop), 'mask' (annotation binary mask), 'alphaMask (part of crop outside annotation is transparent, requires png format)",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2f61cd58-e61c-4a44-b6c9-a852680fc3d4",
                     "name": "draw",
                     "format": "",
                     "description": "Equivalent to set type='draw'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "67a4a8bf-414c-437d-ae23-fd10b33d3003",
                     "name": "mask",
                     "format": "",
                     "description": "Equivalent to set type='mask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0036968f-1852-4dd4-9aff-b460d0808cc7",
                     "name": "alphaMask",
                     "format": "",
                     "description": "Equivalent to set type='alphaMask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b629b04b-0837-4634-811b-1f93a18e5128",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9b491fe3-2dbd-4d9e-8a60-508a86ab05ad",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "32d1b529-7188-4fa5-97ae-319d7ff66f4c",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0cb7cce1-6399-45ce-8576-622c123a6287",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "eaa1988a-229b-4948-80e0-2e3ad8d46d3a",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "200cd25e-ab65-4abf-8aec-81b626d0f213",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "56837f3e-e773-427a-9d73-757d965cce7e",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "beca82be-0510-4778-a2b7-3bd3e6af1156",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "316c23dd-95de-4dfe-960a-97fe6d3cd731",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a crop of an annotation (image area framing annotation). It works for all kinds of annotation but slower than a direct call to a specific kind of annotation.",
               "methodName": "crop",
               "jsondocId": "b3220de2-828c-44d2-83bd-1cde0a99e721",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d70cef9d-238f-4684-ac07-192e26e820ba",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "feedc149-b2f1-4c69-ae5c-574932d08625",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "60b555cb-2595-42cd-ae74-9ced95fd71e1",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e5e80af1-610a-4886-b746-86d0b103e17d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/{id}/crop.tiff",
               "response": {
                  "jsondocId": "44f41980-43b9-4e05-acef-967d6d889f20",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "3f89fa1e-56fe-4fc1-8154-f25fe0f14b28",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Fill an annotation",
               "methodName": "fillAnnotation",
               "jsondocId": "86af8dd1-30f8-42d2-9dba-37f569d98195",
               "bodyobject": {
                  "jsondocId": "30df9181-2c27-4ab1-affd-beeeb2e69609",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "annotation domain"
               },
               "apierrors": [
                  {
                     "jsondocId": "d6457366-cabd-49b8-830c-c404f2f4dd39",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "eaaf3117-d701-4082-817c-b7a6939cc376",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "effdfef4-6d52-40a2-81c7-84fe127498f1",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "15eb5124-02b8-489e-a99b-13de5b0a40ec",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "18eae249-be04-4d71-a621-0dd7a03cbe82",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/annotation/{id}/fill",
               "response": {
                  "jsondocId": "84be4671-be17-426a-9d78-e4fe3fd0a8cf",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "annotation domain"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "7f5df512-70f8-4bfd-9f62-3daa77e6e266",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "89a61059-e6c0-4589-aa0c-70c7abdcc9bf",
                     "name": "minPoint",
                     "format": "",
                     "description": "Minimum number of point",
                     "type": "int",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "53a6eda0-820f-4c13-919f-ddab8a18183a",
                     "name": "maxPoint",
                     "format": "",
                     "description": "Maximum number of point",
                     "type": "int",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Simplify an existing annotation form (reducing the number of point). The number of points of the resulting form is not garantee to be between minPoint and maxPoint (best effort)",
               "methodName": "simplify",
               "jsondocId": "e910256a-efdd-472c-80f0-de705347137d",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "393fbd06-ecb7-419c-9a56-601d99c1612b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d548d9fd-6c6e-4684-aa3e-087612716381",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "46d00568-f171-4e48-b43f-74fed3d7cb5f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "500742e5-8636-4f7f-9eb1-7f375a47ba97",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/{id}/simplify.json",
               "response": {
                  "jsondocId": "78900fd6-97cd-4a5c-af0a-25e66739c377",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "annotation domain"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "18779610-95e4-4762-9d4f-1dfdbaa93dfb",
                  "name": "idImage",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "61ac0e23-e91c-41a1-b5ca-2c5b8d7e6bd4",
                     "name": "geometry",
                     "format": "",
                     "description": "(Optional) WKT form of the geometry (if not set, set annotation param)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "31b9460f-8a88-4081-814a-f67d0ee58e0f",
                     "name": "annotation",
                     "format": "",
                     "description": "(Optional) The annotation id for the geometry (if not set, set geometry param)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "bd8d21cc-2e40-4e66-a9d0-2e1b6e4ba795",
                     "name": "user",
                     "format": "",
                     "description": "The annotation user id (may be an algo) ",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "444bacca-2885-47ac-beb6-fa2971e20b12",
                     "name": "terms",
                     "format": "",
                     "description": "The annotation terms id",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all annotation that intersect a geometry or another annotation. Unlike the simple list, extra parameter (show/hide) are not available. ",
               "methodName": "downloadIncludedAnnotation",
               "jsondocId": "f3e73cfd-13b0-41fb-847d-c870fd5c5b27",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "a79f0a5e-16b7-4481-9c33-4de75f83a393",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "79aecaa2-74cd-4adb-828e-b600180ed483",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "b7fb3109-62ad-4df7-bf11-ea86148ca6af",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "5ea31682-3edd-43e6-8932-e76b073fc750",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{idImage}/annotation/included/download",
               "response": {
                  "jsondocId": "41cdce58-680f-475e-ad72-9a03a05c9914",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "354bc356-8a60-4878-b21c-668649b99a87",
                     "name": "format",
                     "format": "",
                     "description": "(Optional) Output file format (pdf, xls,...)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "12989409-eabf-4dae-819d-0d67c94e2b93",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "241e1e4b-e06d-433d-99ec-d4b86a96a277",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Download report for annotation. !!! See doc for /annotation/search to filter annotations!!!",
               "methodName": "downloadSearched",
               "jsondocId": "ac223c1f-4419-459f-b461-cbc459b7eeba",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "773fee99-e4e1-4a3c-928b-323ef1e7a2a4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9dfcb6b8-2f20-4afd-8281-8b49bbee01c9",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "2f6796c3-b844-4a24-bd92-1d94b387f811",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f9d49387-11f1-43f8-9b65-14c36bb25389",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/method/download",
               "response": {
                  "jsondocId": "85c846a6-7595-4e6b-b526-429bab4a5ac4",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add an annotation (only available for user/algo). If current user is algo, an algo annotation will be created. Otherwise, an user annotation",
               "methodName": "add",
               "jsondocId": "c5597b3f-0e97-4f16-9152-afa816a823db",
               "bodyobject": {
                  "jsondocId": "c13a9a5f-a671-4cee-ad29-94e51f353f84",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "annotation domain"
               },
               "apierrors": [
                  {
                     "jsondocId": "d5b64be1-18a2-4901-a336-6d3549f949b9",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "3a29c5c6-394f-4d26-b165-a4917688d44a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "335762f7-8aea-4e67-90aa-9f5b7569b904",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "2af48a41-535c-4d08-8508-a4c53b7f4ecf",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "9153f228-3030-47f4-a446-e0330024779c",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/annotation.json",
               "response": {
                  "jsondocId": "4a2c50e7-0f0e-4344-a593-1f5fa9493c92",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "annotation domain"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "baaf642f-61b1-4613-b677-52821507b943",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [{
                  "jsondocId": "b27abdc6-9683-4e80-a890-2268b5cbbc38",
                  "name": "fill",
                  "format": "",
                  "description": "(Optional, default: false) If true, fill holes in annotation",
                  "type": "boolean",
                  "required": "true",
                  "allowedvalues": []
               }],
               "verb": "PUT",
               "description": "Update an annotation. This works for all kind of annotation (user/algo/reviewed)",
               "methodName": "update",
               "jsondocId": "e20f8fa0-13f9-41a9-bb4d-778142adb2b4",
               "bodyobject": {
                  "jsondocId": "c126747b-a6c4-4204-98a2-8311f0b7c200",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "annotation domain"
               },
               "apierrors": [
                  {
                     "jsondocId": "31184da8-463c-46cc-a70a-e6df0e119bed",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "dd37a809-4976-452e-9669-174626bdb8ca",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e1c588c8-2724-4185-bbee-5c45b15078cb",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "871840f4-d282-4f18-b3ae-769cc9f3a8e5",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "623f9838-88bd-4aaa-b978-b52b8e67719b",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/annotation/{id}.json",
               "response": {
                  "jsondocId": "c80607e0-ec2d-46f2-ac5b-c38e73157cf7",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "annotation domain"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "ce173f94-f30d-42f0-bd57-b3ae10c45d45",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an annotation (only user/algo)",
               "methodName": "delete",
               "jsondocId": "f4b1d0fc-7bf1-4021-a79e-90f035ea5f86",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "87853de8-fc8b-4dcc-974b-57ab43a9ea3f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d5beb94e-a569-4e48-8819-551814ac12ca",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a15f0d67-e9cb-4987-8a07-c012b948a19c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d34c41f0-4320-4438-9f6d-6d85a91adf5d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/{id}.json",
               "response": {
                  "jsondocId": "7f934bb1-6116-400b-b734-f3b4cc8a0ebb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "annotation domain"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "a0d79073-64b1-41af-b343-3ca8d55feabc",
                     "name": "showDefault",
                     "format": "",
                     "description": "(Optional) If true, show 'basic', 'meta', and 'term' properties group. See showBasic/Meta/... for more information (default: true ONLY IF NO OTHER show/hideXXX are set)",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "65f253cd-393a-4d05-b930-3b924ed4b8fb",
                     "name": "showBasic",
                     "format": "",
                     "description": "(Optional) If true, show basic properties group (id, class...)",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0b50174a-f2d0-4cb6-a411-c3ebbf1c739a",
                     "name": "hideBasic",
                     "format": "",
                     "description": "(Optional) If true, hide basic properties group (id, class...)",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "058fd9e3-74a9-4c36-a9fc-4ed2d48516a0",
                     "name": "showMeta",
                     "format": "",
                     "description": "(Optional) If true, show meta properties group (urls, image id, project id,...)",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1675444f-a716-4be9-b4e8-6115338b3fa2",
                     "name": "hideMeta",
                     "format": "",
                     "description": "(Optional) If true, hide meta properties group (urls, image id, project id,...)",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c2ca22a5-9528-435a-9a8c-27df33919c24",
                     "name": "showWKT",
                     "format": "",
                     "description": "(Optional) If true, show the location WKT properties.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "726f1ee0-929d-49cd-a9b6-bc89c3430f9a",
                     "name": "hideWKT",
                     "format": "",
                     "description": "(Optional) If true, hide the location WKT properties.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "24f31adc-0e84-4e3b-8dea-a741cbdf9981",
                     "name": "showGIS",
                     "format": "",
                     "description": "(Optional) If true, show the form GIS field (area, centroid,...). This may slow down the request!.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e54de291-d0ab-4ca4-b384-2aaff0e76c95",
                     "name": "hideGIS",
                     "format": "",
                     "description": "(Optional) If true, hide the form GIS field (area, centroid,...). This may slow down the request!.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6b99a5ee-b387-4f5d-928b-35792cf9f65e",
                     "name": "showTerm",
                     "format": "",
                     "description": "(Optional) If true, show the term properties (id, user who add the term,...). This may slow down the request.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b0b6d333-6ac5-436b-9954-a804379bf1bf",
                     "name": "hideTerm",
                     "format": "",
                     "description": "(Optional) If true, hide the term properties (id, user who add the term,...). This may slow down the request.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "95a7ea89-dd9b-4018-b6b5-3446391115c6",
                     "name": "showAlgo",
                     "format": "",
                     "description": "(Optional) If true, show the algo details (job,...). This may slow down the request.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ca370aea-25f1-4893-9ce4-0ec89b340017",
                     "name": "hideAlgo",
                     "format": "",
                     "description": "(Optional) If true, hide the algo details (job,...). This may slow down the request.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9247f671-3082-4718-ace4-a14cda2782a6",
                     "name": "showUser",
                     "format": "",
                     "description": "(Optional) If true, show the annotation user details (username,...). This may slow down the request.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "cef050a7-de21-4e2a-91b4-a7d1ec9fb288",
                     "name": "hideUser",
                     "format": "",
                     "description": "(Optional) If true, hide the annotation user details (username,...). This may slow down the request.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2eee7d8b-9752-4fb2-ac3e-ef41acd43107",
                     "name": "showImage",
                     "format": "",
                     "description": "(Optional) If true, show the annotation image details (filename,...). This may slow down the request.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0f4de6f3-f339-425d-8e46-744397ab1ec3",
                     "name": "hideImage",
                     "format": "",
                     "description": "(Optional) If true, hide the annotation image details (filename,...). This may slow down the request.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7f88d343-e275-4c53-b094-ab1a6611b24f",
                     "name": "showSlice",
                     "format": "",
                     "description": "(Optional) If true, show the annotation slice details (c,z,t,...). This may slow down the request.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "df3134ea-96f1-47db-b7da-452f4fd290bd",
                     "name": "hideSlice",
                     "format": "",
                     "description": "(Optional) If true, hide the annotation slice details (c,z,t,...). This may slow down the request.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "bcf80bee-2139-43a5-948a-75e1c60dd883",
                     "name": "showTrack",
                     "format": "",
                     "description": "(Optional) If true, show the annotation track details. This may slow down the request.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ffc5e86d-cc54-4dd5-a681-308fce7157de",
                     "name": "hideTrack",
                     "format": "",
                     "description": "(Optional) If true, hide the annotation track details. This may slow down the request.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d6267688-994e-4fa2-91f8-e1a45f4c72b7",
                     "name": "project",
                     "format": "",
                     "description": "(Optional) Get only annotation for this project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7fac6f93-66a1-4b05-bd37-79ae46550dcb",
                     "name": "job",
                     "format": "",
                     "description": "(Optional) Get only annotation for this job id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a01dd1b1-7873-454f-9479-b8a96ad698f8",
                     "name": "user",
                     "format": "",
                     "description": "(Optional) Get only annotation for this user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "25123621-aa00-4880-9b29-8309b4d790f5",
                     "name": "users",
                     "format": "",
                     "description": "(Optional) Get only annotation for these users id",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "abc84cd5-d91c-40f4-a1cf-42c8380f8954",
                     "name": "term",
                     "format": "",
                     "description": "(Optional) Get only annotation link with this term id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2c2a1b9f-467c-4ee6-804e-f942cbe7c172",
                     "name": "terms",
                     "format": "",
                     "description": "(Optional) Get only annotation for these terms id",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b8773478-569d-425e-919a-e54f907637b8",
                     "name": "noTerm",
                     "format": "",
                     "description": "(Optional) Also get annotation with no term",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ebcdd2fb-4dae-4e86-a4e3-d9ca149336ab",
                     "name": "noAlgoTerm",
                     "format": "",
                     "description": "(Optional) Only get annotation with no term from a job",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d5041e25-3671-4db1-82a6-cfed7ea8f29a",
                     "name": "multipleTerm",
                     "format": "",
                     "description": "(Optional) Only get annotation with multiple terms",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ba390f4c-7740-43ac-ad15-933d3acaa088",
                     "name": "image",
                     "format": "",
                     "description": "(Optional) Get only annotation for this image id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8200b5b5-d825-443f-83ad-46fa675f76cc",
                     "name": "images",
                     "format": "",
                     "description": "(Optional) Get only annotation for these images id",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "545dad5a-c209-4765-a932-78f3d878d1a5",
                     "name": "slice",
                     "format": "",
                     "description": "(Optional) Get only annotation for this slice id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5fa1032a-de57-40f0-8e7e-e2d29ceb75a8",
                     "name": "slices",
                     "format": "",
                     "description": "(Optional) Get only annotation for these slices id",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a9402672-1ef7-476a-89b5-63feb16993fe",
                     "name": "track",
                     "format": "",
                     "description": "(Optional) Get only annotation for this track id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "31eddfdc-fce9-4d9a-bf1e-1b54da315dd2",
                     "name": "tracks",
                     "format": "",
                     "description": "(Optional) Get only annotation for these tracks id",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "210c7355-bd49-4416-a768-b24e8807f744",
                     "name": "noTrack",
                     "format": "",
                     "description": "(Optional) Also get annotation with no track",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c0d9820b-b742-466e-9cf5-d88b1e86f552",
                     "name": "multipleTrack",
                     "format": "",
                     "description": "(Optional) Only get annotation with multiple tracks",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "53734a35-e4ac-4b48-b20c-4c4a7f6a2200",
                     "name": "afterSlice",
                     "format": "",
                     "description": "(Optional) Only to be used with track(s), return only annotation in the track(s) after the given slice",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c477bbb9-de00-42a3-9d96-a4aac37c1ea6",
                     "name": "beforeSlice",
                     "format": "",
                     "description": "(Optional) Only to be used with track(s), return only annotation in the track(s) before the given slice",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a52ec34d-4356-483f-a0ad-38b8fecf309a",
                     "name": "sliceDirection",
                     "format": "",
                     "description": "Only to be used with beforeSlice, afterSlice or aroundSlide and mandatory in this case. Give the dimension to follow in the image. Accepted values: C,Z,T",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d36bd5b1-53c6-4834-92fe-0991333c4f18",
                     "name": "tags",
                     "format": "",
                     "description": "(Optional) Get only annotation associated with these tags",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "28154a23-7835-4f76-8064-18b2385d63b2",
                     "name": "tag",
                     "format": "",
                     "description": "(Optional) Get only annotation associated with this tag",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7349da79-3c82-4c3b-bf91-1d7c55c7f096",
                     "name": "noTag",
                     "format": "",
                     "description": "(Optional) Also get annotation with no tag",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "179fdcdb-f7a2-4141-8bb5-d7dc4c60e6cb",
                     "name": "suggestedTerm",
                     "format": "",
                     "description": "(Optional) Get only annotation suggested by for this term by a job",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "64d17c12-f431-4491-9095-6c1510058aa1",
                     "name": "suggestedTerms",
                     "format": "",
                     "description": "(Optional) Get only annotation suggested by for these terms by a job",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b045b7d5-4a04-41f8-a86f-dd6f873b6b81",
                     "name": "userForTerm",
                     "format": "",
                     "description": "(Optional) Get only user annotation link with a term added by this user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "fc991273-f820-4f26-a166-987588f0ec18",
                     "name": "userForTermAlgo",
                     "format": "",
                     "description": "(Optional) Get only user annotation link with a term added by this job id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5e013666-1c7d-4bfc-bd14-2fdf46ddf5b4",
                     "name": "jobForTermAlgo",
                     "format": "",
                     "description": "(Optional) Get only annotation link with a term added by this job id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "cf2666e5-8ee4-47d1-bb96-3170019491a7",
                     "name": "reviewed",
                     "format": "",
                     "description": "(Optional) Get only reviewed annotations",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5849667c-94e1-43fd-b3d4-569e4073c2d0",
                     "name": "reviewUsers",
                     "format": "",
                     "description": "(Optional) Get only annotation reviewed by these users",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "61b7bac1-dbde-4c41-9f38-a6a729bfe813",
                     "name": "notReviewedOnly",
                     "format": "",
                     "description": "(Optional) Only get annotation not reviewed",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e3a4b252-032d-4ecc-958e-dd13be386406",
                     "name": "kmeans",
                     "format": "",
                     "description": "(Optional) Enable or not kmeans (only for GUI)",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9867990d-2c97-4597-8d47-978295ffe045",
                     "name": "kmeansValue",
                     "format": "",
                     "description": "(Optional) Only used for GUI ",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b42f5752-c2b1-4edc-83b7-88215ce9050f",
                     "name": "bbox",
                     "format": "",
                     "description": "(Optional) Get only annotations having intersection with the bbox (WKT)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "84454a93-9652-451d-9888-2c62ebfeea5b",
                     "name": "bboxAnnotation",
                     "format": "",
                     "description": "(Optional) Get only annotations having intersection with this annotation",
                     "type": "Long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ae23e18d-5975-4a4a-be9f-c1c032727984",
                     "name": "baseAnnotation",
                     "format": "",
                     "description": "(Optional) The base annotation for spatial request (annotation id or wkt location)",
                     "type": "Long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "953a93a9-f845-42ac-a11e-80338aa8ea59",
                     "name": "maxDistanceBaseAnnotation",
                     "format": "",
                     "description": "(Optional) Only get annotation inside the max distance",
                     "type": "Long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1b58392f-fecc-41c3-b196-75173499ae0c",
                     "name": "afterThan",
                     "format": "",
                     "description": "(Optional) Annotations created before this date will not be returned",
                     "type": "Long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8e39e278-2b9f-4931-a415-202049e1ebcc",
                     "name": "beforeThan",
                     "format": "",
                     "description": "(Optional) Annotations created after this date will not be returned",
                     "type": "Long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "165b18f2-23a0-4a75-9213-3671b676ed38",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f525d609-1a73-4489-aedc-da7aedb13a79",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Search service for all annotation type. By default All fields are not visible (optim), you need to select fields using show/hideXXX query parameters.",
               "methodName": "search",
               "jsondocId": "501322c1-c900-4376-aede-e590e1468ef9",
               "bodyobject": {
                  "jsondocId": "feabf4dc-0e1a-479c-b53f-132106db812c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "annotation domain"
               },
               "apierrors": [
                  {
                     "jsondocId": "c7d19c85-ca4a-4ccc-b0a4-fbcd7708335e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "88c98ea8-5027-44e7-92d4-0d1394e99272",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "53f731ab-8d1b-44f0-a378-213fdf2eddad",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e9b70fa7-3a40-4b50-851c-b36c40149b5c",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "2828873a-0bbc-4ddd-b0fb-8e227f85a849",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/annotation/search.json",
               "response": {
                  "jsondocId": "a2dd0501-23f8-436d-9a0a-040edfe648dd",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[annotation listing]"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            }
         ],
         "name": "Ontology | generic annotation services",
         "description": "Methods for managing an annotation created by a software"
      },
      {
         "jsondocId": "81f23ae0-8a7c-4f2a-8acf-927fad12187f",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "590db319-f881-4a58-942e-4d0012af4cf2",
                  "name": "id",
                  "format": "",
                  "description": "The ontology id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an ontology",
               "methodName": "show",
               "jsondocId": "bd7f9081-5b01-4f9b-a83d-f505b0df8b4e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "adb01340-547a-402d-8c47-21e861f9aca9",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8da15137-46e5-446d-bc99-eda44afab3b0",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "b1d031c4-3873-49da-b2de-1f18022afdd0",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "cfab3111-7efd-4a4e-a8c0-b9eee8c7f15a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/ontology/{id}.json",
               "response": {
                  "jsondocId": "51e9bb73-8a16-4bc6-8754-c2ba6ff0d783",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Ontology"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add an ontology",
               "methodName": "add",
               "jsondocId": "9cbc5963-3d9b-4f09-b034-b42a633fcaba",
               "bodyobject": {
                  "jsondocId": "d8479b5f-51bd-4d2a-9a98-2902d1165a34",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Ontology"
               },
               "apierrors": [
                  {
                     "jsondocId": "00f900ee-5c0c-4766-98e7-6fdacc3f2ac8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "880cb46e-abe0-4cda-8dac-e3fb4e4ed839",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0b6a708c-736a-4680-9ec5-ab0cf6c8bf8d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "645b6187-fdfd-42d7-b0a0-877aaa36a023",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "dc14708b-9616-4094-8921-17fc42ec3fd9",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/ontology.json",
               "response": {
                  "jsondocId": "461a3d5a-2f52-4696-b0f5-e714c7fb3fdf",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Ontology"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "8b60ea2f-3fd3-4349-bb4e-d2fbcc51c007",
                  "name": "id",
                  "format": "",
                  "description": "The ontology id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update an ontology",
               "methodName": "update",
               "jsondocId": "484237d3-9292-422a-8994-49d6c78b86ee",
               "bodyobject": {
                  "jsondocId": "7a900ae9-32a1-49f7-bf40-b505fc0df5e9",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Ontology"
               },
               "apierrors": [
                  {
                     "jsondocId": "294bad05-9b40-4af6-bb34-8e27f72d1b5b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "734c3326-db37-43c7-82f7-a99bc2418955",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5a22edb9-3dc3-4838-b858-cac266821e89",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "03ac399e-4a8b-43e2-ad56-90bfcb3906a3",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "13271440-ce7e-408f-8967-90bd7fd59a72",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/ontology/{id}.json",
               "response": {
                  "jsondocId": "ffb3d6b1-c552-4ec7-b294-08533586bda0",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Ontology"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "33e99927-bc23-4439-ad0d-7b738adac88e",
                     "name": "id",
                     "format": "",
                     "description": "The ontology id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "dd2bbebb-91d8-41cc-9f4a-3d2c8cf5f282",
                     "name": "task",
                     "format": "",
                     "description": "(Optional, default:null) The id of the task to update during process",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an ontology",
               "methodName": "delete",
               "jsondocId": "8e3b7d23-b486-447a-a24d-eeb05fc168d2",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "2dd10bab-a11b-41b6-b8d1-6921d2adb3bb",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d9085030-7be7-4e7c-91e9-c7b077db5e8a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "beeea775-c2e3-4aa7-a0bb-84473bdf322e",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "1f6da504-e086-452d-957a-ead5a05139f8",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/ontology/{id}.json",
               "response": {
                  "jsondocId": "eb560689-3ae7-4450-af37-3a70d1d2500f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Ontology"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "ae43e85c-6636-4df9-ab81-d3641bd20022",
                     "name": "light",
                     "format": "",
                     "description": "(Optional, default false) Only get a light list (with no term tree for each ontologies)",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5774851f-9146-409c-9be9-f374a98fa707",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b3959d4c-084c-4432-b396-40c7f3869425",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all ontologies available",
               "methodName": "list",
               "jsondocId": "3046d57b-ee0e-4d7c-84b1-c5f7127dba25",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "e5f92f24-fdfb-4a2e-991b-1b658d98bd9d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "62b45619-124e-42f2-9b00-524beafe0452",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a69c5fd0-0433-4b8a-96db-7c915be812fe",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ecfd12ef-b4a4-49a5-98ae-a4f3e84b8c02",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/ontology.json",
               "response": {
                  "jsondocId": "7dc1c274-04fa-4f8f-95ee-cfd70f1e323f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Ontology"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Ontology | ontology services",
         "description": "Methods for managing ontologies"
      },
      {
         "jsondocId": "0655d57c-6d47-4ab4-932f-56c122ad2243",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "6db3af42-0b97-41ff-8641-1671beae3a41",
                  "name": "idAnnotation",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "d649294f-1fba-4169-9f6d-182d0334ce8e",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c954377d-e09a-4b94-89c3-7ae5e73f42d0",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all properties for an annotation (algo,user, or reviewed)",
               "methodName": "listByAnnotation",
               "jsondocId": "7f2b606a-68d2-4c5e-afa4-3d763e35489d",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "7f0a8fbb-cf7e-4e98-bc46-a23f0978acb3",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "1ff2a368-72ca-4162-8c5d-0df4fcd8cdea",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "114148fb-3489-4ac5-89cc-54ac3804a055",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e5ea4ca6-3033-435c-9666-a943a789edff",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/{idAnnotation}/property.json",
               "response": {
                  "jsondocId": "a895cc2e-f373-4b4a-9a02-51493e14f4ba",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "03bda92c-0f7e-412b-9581-2af209b76b7f",
                  "name": "idImageInstance",
                  "format": "",
                  "description": "The image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "85f91064-2e69-4ca1-9913-46bfffb3f72d",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0397fbfa-1d6b-4b00-8b3c-e14c18d3d803",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all properties for an image instance",
               "methodName": "listByImageInstance",
               "jsondocId": "c45a6e58-d14a-4a74-9953-69b450c57e62",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "4b6ca508-ec09-4e7e-9ad0-b21411d4dc18",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "64d32f6b-54e0-4c12-b31e-848874db55a8",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "f036b409-62b0-4765-bb9d-4910b680decd",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7b17310f-873e-421a-ab3f-637efbcdb48a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{idImageInstance}/property.json",
               "response": {
                  "jsondocId": "bb9bb69e-88de-4b0d-aa7c-3db11dc835c0",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "ba6fc7f6-3d32-4280-8f08-db73915d82ef",
                     "name": "idProject",
                     "format": "",
                     "description": "(Optional, if null idImage must be set) The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0fe6ba56-c92b-4da8-acb1-e898b90c9ee7",
                     "name": "idImage",
                     "format": "",
                     "description": "(Optional, if null idProject must be set) The image instance id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "acded749-6acd-45ec-9939-3c7561d32bb7",
                     "name": "user",
                     "format": "",
                     "description": "(Optional) if true, we will return the id of the creator of each key",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6c1f2154-bd5e-4300-a245-41b7f58c1e21",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "989fa1fd-dd69-44f0-ac75-02bc7fe06278",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all keys of annotation properties in a project or image",
               "methodName": "listKeyForAnnotation",
               "jsondocId": "e1774e92-6e97-4529-b12d-cbd5c9bc1711",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d2ff4621-c02a-4aeb-b0bd-7cbe336f5ca8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "3d013fb0-1afc-4f8a-b0d2-2bfd78365916",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c36878e2-e02b-47bd-b6ec-46cc0687eb25",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "933c5302-971e-4673-a13d-dc2a4b2b5331",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/property/key.json",
               "response": {
                  "jsondocId": "c53a84ad-f8d5-4e82-bb4c-f780083c4d21",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "a8ff2f80-feb7-46ba-b8f4-d51658d252e1",
                     "name": "idProject",
                     "format": "",
                     "description": "(Optional, if null idImage must be set) The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f28a9d69-89e7-4e2a-a3a0-7660c4332d77",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ab513207-056a-414d-a03b-126e89fdf553",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all keys of images properties in a project",
               "methodName": "listKeyForImageInstance",
               "jsondocId": "8e747f19-cb5a-42d7-9b55-a02f9785be4a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "a4345c26-224a-4fb4-8233-0a73467691e5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f114d35c-5329-4c92-a69d-97408ceb3ffd",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8021f45a-5943-493c-9b9b-4dfd8de9ce02",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "cc5261a2-d339-4743-a429-9e4a2a2ea0fd",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/property/key.json",
               "response": {
                  "jsondocId": "06079b63-e6bf-4c2d-9214-27189e49182a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "c49ff2c9-1a1b-4cba-8bc9-6438bd7bb642",
                     "name": "idImage",
                     "format": "",
                     "description": "The image id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "59d1c11a-b999-4cb2-8903-72b142f7d07a",
                     "name": "idUser",
                     "format": "",
                     "description": "The layer id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "10aecf78-b06f-4855-903b-ad4c12a1abd9",
                     "name": "key",
                     "format": "",
                     "description": "The properties key",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "df1820ff-5390-4255-9f59-39a4faaa84f2",
                     "name": "bbox",
                     "format": "",
                     "description": "(Optional) Form of the restricted area",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a86b1930-df8a-4ed1-869d-7c63100795cb",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ee3676a1-a038-436a-8761-04c67b90dee0",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "For a specific key, Get all annotation centroid (x,y) and the corresponding value for an image and a layer (user)",
               "methodName": "listAnnotationPosition",
               "jsondocId": "734b7bdd-aa37-4798-89ce-84f25746bbdc",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c00554aa-8562-432a-8f7d-505a8acedb7b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d3f8a66c-97f4-4f74-90e8-7a7fab5b3c2a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5049c6b0-fdcb-4def-abe5-ce83a9597ad6",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7b8cf9c7-e823-4669-853d-0f51079dc595",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{idUser}/imageinstance/{idImage}/annotationposition.json",
               "response": {
                  "jsondocId": "bf4c83c1-e537-43fa-89ce-f4d39960c157",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "e5955612-5f7e-4479-8414-ab8bba86c7ed",
                     "name": "idProject",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2ea66375-3f7c-4142-9af7-3907fe796703",
                     "name": "id",
                     "format": "",
                     "description": "(Optional, if null key must be set) The property id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8bd11c43-7389-4373-98d9-21cc7ddbc938",
                     "name": "key",
                     "format": "",
                     "description": "(Optional, if null id must be set) The property key",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a project property with its id or its key",
               "methodName": "showProject",
               "jsondocId": "b9ae16b8-1872-4651-ab30-55756984f669",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1afde869-e969-45ff-b82a-8548df7f6e30",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "756126c9-f6f7-430d-a10b-27e641c6e849",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4d8d116b-0de8-4a59-b076-67aa0272df2b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f8b30c9d-7f64-4aa5-89c4-36e4af878922",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{idProject}/property/{id}.json",
               "response": {
                  "jsondocId": "f8297aa4-314c-4198-8539-6eb8ef570a2e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "ee544a31-d1a8-4a74-87d1-74d91622e986",
                     "name": "domainIdent",
                     "format": "",
                     "description": "The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ed4c518a-af51-47ca-bb00-d94d96916654",
                     "name": "domainClassName",
                     "format": "",
                     "description": "The domain type",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "98ccf5b9-93b4-40de-86d6-240c08cf3101",
                     "name": "id",
                     "format": "",
                     "description": "(Optional, if null key must be set) The property id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e23b0889-3729-4e3f-9238-4ac54f3c8cf5",
                     "name": "key",
                     "format": "",
                     "description": "(Optional, if null id must be set) The property key",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an abstract image property with its id or its key",
               "methodName": "showDomain",
               "jsondocId": "a72793af-60fd-49cd-ad03-f3dab235de8a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "858d7b50-be97-49e9-bdeb-a4dac9d80405",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "423c31b2-2355-4384-8777-c7bc65e5cd0c",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "98c031bd-c9b9-465c-a17d-fa6977e12a52",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ee595828-7b23-408f-b5d0-3a131148306a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/domain/{domainClassName}/{domainIdent}/property/{id}.json",
               "response": {
                  "jsondocId": "d23e6fd9-d5fa-4729-8565-631e09359838",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "7693d55f-cbeb-4214-a1aa-484c6465e04d",
                     "name": "idAnnotation",
                     "format": "",
                     "description": "The annotation id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4b5e06a3-505c-49f9-9933-b46159e4ab57",
                     "name": "id",
                     "format": "",
                     "description": "(Optional, if null key must be set) The property id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "00c52ea7-a138-461d-80a9-4678b039feaa",
                     "name": "key",
                     "format": "",
                     "description": "(Optional, if null id must be set) The property key",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a project property with its id or its key",
               "methodName": "showAnnotation",
               "jsondocId": "92b540c6-a78c-4c11-8259-a87d0755e6c6",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ac219ed0-3e3a-4993-ba90-3280d68eee7d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ae1cd19e-a322-45da-ba2e-4bba8ab90d6a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "2e32400d-7aa6-4f45-98b5-e368fb3fa348",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "fb9417b8-0546-4bd3-a14d-82a346cd441a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/{idAnnotation}/property/{id}.json",
               "response": {
                  "jsondocId": "83cd3fad-1209-4ce5-b7db-b645f4a00176",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "42927ce4-c0cb-47bf-b09c-fc993461b195",
                     "name": "idImageInstance",
                     "format": "",
                     "description": "The image instance id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a186fd60-8462-46f3-b65e-8b449e8b0cdb",
                     "name": "id",
                     "format": "",
                     "description": "(Optional, if null key must be set) The property id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6a80c422-1806-46d9-adf6-b609048bdaed",
                     "name": "key",
                     "format": "",
                     "description": "(Optional, if null id must be set) The property key",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an image instance property with its id or its key",
               "methodName": "showImageInstance",
               "jsondocId": "41a27a6b-f2fa-45be-9f6b-414413a587cd",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1c5c43dd-d438-462f-8f5c-de0ee6154de6",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "86560774-4681-4d7b-838d-df58afab0154",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "bb224b56-7d81-46e9-82c1-a13f900c151b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "74078143-a234-4b4f-8f99-cbbc95b81ee5",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{idImageInstance}/property/{id}.json",
               "response": {
                  "jsondocId": "ff6fb2ce-b554-4ea2-a028-efb50c80bfe9",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "c54df561-6175-4fbf-aae4-a2d320e0283d",
                  "name": "idProject",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a property to a project",
               "methodName": "addPropertyProject",
               "jsondocId": "da17e832-fbef-42b1-a674-1f949519deb8",
               "bodyobject": {
                  "jsondocId": "3dcd9e32-f758-4e10-9421-8b669b6e96d7",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Property"
               },
               "apierrors": [
                  {
                     "jsondocId": "cde33edf-90e7-42f6-99bb-6b53ab60cb2f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b6533f27-e9a8-452d-9599-7ef375035ed1",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "cf5f6120-29fe-41b3-8edf-e3a44bab9e81",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6a39266e-4f37-461f-a31f-89a471d1f3eb",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "bef21e96-0c9a-44c3-93dd-bdca5a9a2618",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/project/{idProject}/property.json",
               "response": {
                  "jsondocId": "4fe55206-dbbc-4c2d-9f4c-2ffdf663be5a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "cf867071-e45c-4144-9bbf-21d4b2b9d0fa",
                  "name": "idAnnotation",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a property to an annotation",
               "methodName": "addPropertyAnnotation",
               "jsondocId": "d52fc888-7a0b-4d4d-a6f6-d8159e6c5ee6",
               "bodyobject": {
                  "jsondocId": "99924219-c2cf-4dcf-bc62-6b40976378d6",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Property"
               },
               "apierrors": [
                  {
                     "jsondocId": "9207ad22-1f9e-470b-a428-4728b93690db",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "3f40826c-82b5-4100-8541-aa64cff9d3f1",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4311d47e-e505-4151-b61b-21fd55f4694a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c36eee74-19f9-41b6-be81-2498fca4aeb0",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "a19a479c-88c1-47d2-ac8a-e2316773fa58",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/annotation/{idAnnotation}/property.json",
               "response": {
                  "jsondocId": "d8219ef3-d450-4fc8-ba75-31f816a8ad6d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "acdf3908-dacf-4bdf-a68d-40dfacb6a857",
                  "name": "idImageInstance",
                  "format": "",
                  "description": "The image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a property to a image instance",
               "methodName": "addPropertyImageInstance",
               "jsondocId": "1f69a024-11ed-4973-9f04-f3a2ba4bb244",
               "bodyobject": {
                  "jsondocId": "1a857ef0-6761-42df-982e-4b78392b1258",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Property"
               },
               "apierrors": [
                  {
                     "jsondocId": "e60ffdc2-1294-45cf-a4fb-76fb0e9cc5c4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "30e89fee-626b-47ff-bf56-58761528cbbb",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "82fd0723-d6d6-4b7f-8a65-9f473c604731",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "49bf25df-078e-49f1-8f9c-96652f9b0f03",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "1678682a-ef5b-4dc2-9cfc-ed4f85d3352c",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imageinstance/{idImageInstance}/property.json",
               "response": {
                  "jsondocId": "018557d3-1dd3-4834-9a7b-92ca8dce0c6f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "0f68b511-e9df-4d19-b920-b1d7c7f9e39f",
                  "name": "idDomain",
                  "format": "",
                  "description": "The abstract image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a property to an generic domain",
               "methodName": "addPropertyDomain",
               "jsondocId": "9e2996fa-051e-460f-bbe7-93477302281a",
               "bodyobject": {
                  "jsondocId": "abf4b3e9-aba2-4595-9541-a4d96bef7dc3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Property"
               },
               "apierrors": [
                  {
                     "jsondocId": "f26a760b-390f-4bdf-bc9d-4e296f56c1b9",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "5b9c181c-2778-4461-8697-8adb59cbbff7",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7224bcbd-fbeb-4783-97c7-83a852e7d690",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "20b9b96d-f6f7-4944-996f-584da313590d",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "e18bfcdd-2957-4b16-9460-8b4ec3ff5617",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/property.json",
               "response": {
                  "jsondocId": "608eb551-0238-49bc-a8d7-2b72a67ab9b3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "5279bb2a-2925-49d1-ae4d-89648cf1340f",
                     "name": "domainClassName",
                     "format": "",
                     "description": "The domain class name",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3b7f8d2e-1dc4-4397-b7e8-7a2eaa3ede59",
                     "name": "domainIdent",
                     "format": "",
                     "description": "The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "017fcd15-220d-48de-9aad-d0ddd3ab81f8",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "eea9bab6-2ecb-4803-8143-1a828e6e7d2f",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all properties for a cytomine domain",
               "methodName": "listByDomain",
               "jsondocId": "063e15b3-33f8-4d0f-8dec-aad4ddbc2430",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "615cdc5b-822d-4e0b-a97f-cbbdf82750f1",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b52e2750-b70b-469e-8b13-7613991e0081",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "884e8b78-514f-4df3-95ca-287adc32dc84",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f7587ca8-487e-4635-a148-765212c95ef6",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/domain/{domainClassName}/{domainIdent}/property.json",
               "response": {
                  "jsondocId": "c53718a2-97e8-4f75-9bdc-4abf2ef80427",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "d9aca81c-5560-4235-bbec-78790c631edf",
                  "name": "idProject",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "6e927be3-73ec-41c8-8a50-143bbe69d26f",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a6962e0b-0d8b-49d4-a7a1-3829cb7e1ce9",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all properties for a project",
               "methodName": "listByProject",
               "jsondocId": "5fe13cbd-43e5-4131-bf74-e74cd3c5a175",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "8a038c95-0775-49fb-b913-77df8e0ba6ed",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7fb53bf4-f8df-4b35-bab8-a93ce545aea8",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ea9a3d7d-db96-41e5-a677-2f01e83c3aba",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "592ba67c-adc1-4d64-9759-99d2dc7d98e0",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{idProject}/property.json",
               "response": {
                  "jsondocId": "1fb35909-c65c-4a1b-8aa0-95eec5390b93",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "503ee3d5-d803-4b29-a6d2-03c7a895ebfe",
                     "name": "idAnnotation",
                     "format": "",
                     "description": "(Optional) The annotation id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c5b7c7db-8612-479b-88aa-d2611b547a23",
                     "name": "idImageInstance",
                     "format": "",
                     "description": "(Optional) The image instance id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6e52b608-7cf1-4666-ade3-ea4fcf5a0cc8",
                     "name": "idProject",
                     "format": "",
                     "description": "(Optional) The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5ac75f44-b1eb-405a-a961-770e9e1754ec",
                     "name": "id",
                     "format": "",
                     "description": "The property id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "669d010e-63fc-45ff-b136-06e259b0ea20",
                     "name": "domainIdent",
                     "format": "",
                     "description": "(Optional) The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6895aeb1-2bcb-406f-8fa9-20b063efdea8",
                     "name": "domainClassName",
                     "format": "",
                     "description": "(Optional) The domain type",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Edit a property",
               "methodName": "update",
               "jsondocId": "6434dfd7-00b1-4c33-a6cc-28ee26cb7ac4",
               "bodyobject": {
                  "jsondocId": "7b3590e7-11ac-4b0b-9a11-24ad79f62e07",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Property"
               },
               "apierrors": [
                  {
                     "jsondocId": "342f0596-b719-4b08-ae43-a6c8db8a2be4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "87e1df2d-048e-4edb-abd8-3d7070679d3a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "96b6837b-0782-4397-b908-d3e44c0eb13a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ef6767e4-b237-4b9c-ae9d-c8dd01d680c2",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "a504fcc9-6435-4dae-9c14-abfb06cdd6a9",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/domain/{domainClassName}/{domainIdent}/property/{id}.json",
               "response": {
                  "jsondocId": "0719f68a-6e84-414b-997a-117fc58a7477",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "5294a71e-6941-489f-81a3-8927ea9c3890",
                     "name": "id",
                     "format": "",
                     "description": "The property id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "89520320-2cde-4d3c-93ca-fbd264a1abec",
                     "name": "domainIdent",
                     "format": "",
                     "description": "(Optional) The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "faf28736-e5eb-4095-b406-b77fbf727c13",
                     "name": "domainClassName",
                     "format": "",
                     "description": "(Optional) The domain type",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a property",
               "methodName": "delete",
               "jsondocId": "ee77005e-2ce6-4a0e-8a4f-47fc1f5a904e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "526043b5-00f1-48d5-a73b-6de7a31f975e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "140deb30-dd71-414c-a286-e9822e435f1c",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7a2072f5-3e41-4e5b-8a94-b3bed5e6fc42",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "703a6441-b0fb-4981-8670-cda245ce371a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/domain/{domainClassName}/{domainIdent}/property/{id}.json",
               "response": {
                  "jsondocId": "905e5ecf-430f-4de1-b90b-df2bb7f973fb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Property"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Ontology | property services",
         "description": "Methods for managing properties"
      },
      {
         "jsondocId": "a2d55ad2-eb38-46c2-a189-d6b65094edbf",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "499dc494-f457-4fc6-ac29-551622a564d9",
                  "name": "id",
                  "format": "",
                  "description": "The relation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a relation",
               "methodName": "show",
               "jsondocId": "f647e55f-60ec-4ff5-a665-0074802b1a01",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ee7ae545-4899-46e8-8c58-9b9b5c815914",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "2dc61c65-f6c7-47f3-934a-449e86beb366",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c2e32aaf-ddf6-437b-b7fb-0bcddfa49f41",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c151074d-8f1e-4f68-85a2-b4ccdaa6bfd2",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/relation/{id}.json",
               "response": {
                  "jsondocId": "3968d4f1-ae3e-42e5-9a9e-bdad1ac2352b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Relation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "3f7c5ee6-494e-4eed-a91e-3865a99c2957",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "376768f1-12bf-4e07-b85a-c0fe56cc3ea0",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all relation available",
               "methodName": "list",
               "jsondocId": "314026d8-ad31-482f-b142-0c1d6c1853f9",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "6d6c6ce4-3dae-4454-9a2b-00fc5c96fc73",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8fa6f8e3-70a7-4824-8c09-237ac369513c",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "fbeb3e9f-1cd9-4861-857a-51840fd538fe",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "bbf566c9-f93a-4dde-9fdd-f72466435798",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/relation.json",
               "response": {
                  "jsondocId": "8d5c4503-3ff9-4e1c-84e6-cd3e176c3510",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Relation"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Ontology | relation services",
         "description": "Methods for managing relations"
      },
      {
         "jsondocId": "f8b23bfe-deda-4907-bd30-8d4ce2feae09",
         "methods": [
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "ee04bba9-00de-4f15-b880-31768ec41d39",
                     "name": "idrelation",
                     "format": "",
                     "description": "The relation id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e6459318-a7c4-4c35-a583-39e1354ce5d7",
                     "name": "idterm1",
                     "format": "",
                     "description": "The term 1 id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ae403e60-11d4-4139-bd60-cbd9bb18cc29",
                     "name": "idterm2",
                     "format": "",
                     "description": "The term 2 id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a project property with its id or its key",
               "methodName": "show",
               "jsondocId": "13b66a6f-a689-4fb4-ad2f-f7165c3e0a25",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "3274b7ac-ba2c-4a0e-af6b-fe5cbf00cdcf",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "da18eca8-0f9b-48ed-b6b0-44fa52f44825",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "718c6e2b-ae4e-4a13-96d0-f41acffd346e",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c04fd1de-be63-4851-80f0-f16d49599bdb",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/relation/parent/term1/{idterm1}/term2/{idterm2}.json",
               "response": {
                  "jsondocId": "6ece8997-ab29-4672-8103-e1807a291020",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Relation term"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "d9d7eac1-8621-49e2-8cb4-4e054b4ea5d3",
                     "name": "id",
                     "format": "",
                     "description": "The term id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "df65a59b-1b6a-4854-914a-96d471f9967e",
                     "name": "i",
                     "format": "",
                     "description": "The position index (1 or 2)",
                     "type": "int",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "06f2e76a-7619-4135-aa6f-affeec020ec7",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2f3712de-785d-4d48-9991-6f55fd4b4454",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all relation for a specific term",
               "methodName": "listByTermAll",
               "jsondocId": "1b00f389-3e6c-4626-85f7-b4ea3a75d717",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "9ba2374f-8c72-4dd5-a72b-a7b862277b9d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "2c4acc26-def5-41a4-957c-c87fd97f56b2",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "17b5ee49-2984-4d93-bd25-6b2dc4fd8c3c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "5718bee2-847c-4a50-9656-027d6ad119e4",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/relation/term/{id}.json",
               "response": {
                  "jsondocId": "3e14d3ab-d767-4923-a677-3e168a856f24",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Relation term"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "32341b05-e8eb-4c72-98b5-e6ebc56cd2ba",
                     "name": "id",
                     "format": "",
                     "description": "The term id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e0b3ff5a-f7ae-4063-9518-949eac9cd79b",
                     "name": "i",
                     "format": "",
                     "description": "The position index (1 or 2)",
                     "type": "int",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "78a28a95-0299-4648-9a7c-041dd9423c1d",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2307543b-c423-4fb1-a3b3-44a6052f11d1",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all relation for a specific term and position (1 or 2)",
               "methodName": "listByTerm",
               "jsondocId": "c7b2a263-4b76-4a07-bc83-7753f38d5824",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "af088df4-9493-4358-871a-a73d2706aab5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "803f9371-2aeb-4c73-b631-c0a6c051e7df",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4a1d8c83-d1e6-4ee0-aaf9-a36dd92c914f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "933430f8-07e8-452a-a535-4094eb5bfaa6",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/relation/term/{i}/{id}.json",
               "response": {
                  "jsondocId": "f9817f1e-9936-421f-b83d-b8d69bf0cc87",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Relation term"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a relation between two terms. If not set, relation is PARENT",
               "methodName": "add",
               "jsondocId": "51ebb272-2f74-4dd1-96aa-aba87a3b46f7",
               "bodyobject": {
                  "jsondocId": "3ab30cf2-ea6e-4f14-87e2-5fb32a9be7d3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Relation term"
               },
               "apierrors": [
                  {
                     "jsondocId": "1f27c37f-90a9-4401-8e75-a179cccc7965",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a980d0a9-b3f3-4aac-ad5b-f8b9ab77dac3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a2f89a83-7f50-4f8b-b7ac-6815c45d0b79",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "0986c012-feb6-4a29-bb56-3d845a6a0c85",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "b7d7559c-907a-45cd-80d3-863845907c9d",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/relation/parent/term.json",
               "response": {
                  "jsondocId": "e30d9d09-da01-45ee-9f27-8e7ce28cef85",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Relation term"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "be5f020e-8dee-4a18-863b-c5314f06418e",
                     "name": "idrelation",
                     "format": "",
                     "description": "The relation id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1cef3fad-85d8-488c-b369-4ae248f8d695",
                     "name": "idterm1",
                     "format": "",
                     "description": "The term 1",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "22f2c8b7-6c7c-42b0-9480-8857293072e6",
                     "name": "idterm2",
                     "format": "",
                     "description": "The term 2",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a relation between two terms",
               "methodName": "delete",
               "jsondocId": "c8666e86-8f6b-4f97-b817-6204e69e4427",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "f9ac2cd9-c110-4642-b767-260c1419e7a3",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f89c0dc4-e164-455e-99ec-c7d19ee9969d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8ae8d80c-f668-47b1-8ff9-e81de3420b8e",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ce79e309-b629-4f0e-b80c-7a762d2b495c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/relation/parent/term1/{idterm1}/term2/{idterm2}.json",
               "response": {
                  "jsondocId": "977b6c0f-a53c-4f71-9a12-d0cc362d9595",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Relation term"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Ontology | relation term services",
         "description": "Methods for managing relation between terms in ontology (ex: t1 parent t2)"
      },
      {
         "jsondocId": "04bbe803-3c02-420a-a92f-2213e6a59d4f",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "1b62e40d-8807-424c-b00f-781bc532dc0c",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a reviewed annotation",
               "methodName": "show",
               "jsondocId": "060c7e1d-aae3-4da3-baaf-ea71a46aed46",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1dd1c130-0f6f-41cd-b6cb-0dc7df0d5bd9",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f69cb54c-2185-4071-8916-58bfb8ff0558",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4549ab73-6868-44a8-8744-51912c3e58cc",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c0963581-6563-4604-8f40-d8f3c0b51204",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/reviewedannotation/{id}.json",
               "response": {
                  "jsondocId": "f07098e8-7ff9-4514-9255-f783e2a5581c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Reviewed annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "33951ea5-25af-4560-a7fe-59d1705c412e",
                  "name": "id",
                  "format": "",
                  "description": "The image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Start to review an image. The current user will be the reviewer.",
               "methodName": "startImageInstanceReview",
               "jsondocId": "2a35f2b4-7384-4ea4-8489-ca67677da1c3",
               "bodyobject": {
                  "jsondocId": "7aa5cc63-afdf-4a62-a400-81f2d8518e2b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Reviewed annotation"
               },
               "apierrors": [
                  {
                     "jsondocId": "168359ca-e808-4a7a-abe8-83a9a3ffca2a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e9ffa40f-c92d-40bd-95c2-26a5e74c715f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "bb8febed-f387-4809-9863-c261eef24244",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "3be42ffa-b533-41ed-84de-2b8a9affb85d",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "18fd6240-8817-40a8-b13f-656b2f6bd8c5",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imageinstance/{id}/review.json",
               "response": {
                  "jsondocId": "967253eb-0937-4ed9-9b1b-bf8c7623f566",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Reviewed annotation"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "fed7b4e8-2541-4c81-8a15-e6ee480c4395",
                  "name": "image",
                  "format": "",
                  "description": "The image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get the number of review for each user in an image",
               "methodName": "stats",
               "jsondocId": "e8a38e84-2bee-4cf6-91d2-99cfe6314d90",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "98295108-c1b1-4b54-a2a2-2fa29fba8b61",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "76e11ab2-abef-4ae4-9009-be1ede6ab784",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "f44ba440-66b2-4d68-be94-b124e32419cc",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "fcd4f6bb-757c-409f-a445-c366b14fcc74",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{image}/reviewedannotation/stats.json",
               "response": {
                  "jsondocId": "0f3451ef-6c07-41d9-8cb0-ed4ccd813b0f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Reviewed annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "80dd03e5-c036-498b-b72e-945ef6101a78",
                     "name": "image",
                     "format": "",
                     "description": "The image id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "150a26a9-7dc5-48aa-9177-a81ef7e4104e",
                     "name": "users",
                     "format": "",
                     "description": "The list of users id",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Review all annotation in image for a list of user",
               "methodName": "reviewLayer",
               "jsondocId": "b2a1208f-3900-4eb5-8a5c-00b1cba9f556",
               "bodyobject": {
                  "jsondocId": "9e09eed6-4500-4d11-a063-953789ad42cd",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Reviewed annotation"
               },
               "apierrors": [
                  {
                     "jsondocId": "4e89bdc2-507e-46f7-a29e-c5ee88cf9b26",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "92053e60-aa01-4b74-b86a-8d0eda887f56",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e086ab49-ea24-439a-a747-140ce45752f1",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c48f00ef-fdce-4f6e-87f5-9fadcbeb03b3",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "2ae466c2-0324-46b1-90ed-78d21ce9b5c7",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imageinstance/{image}/annotation/review.json",
               "response": {
                  "jsondocId": "f40234b5-a120-44cc-ba28-3a5f603afc0f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Reviewed annotation"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "bf12adc8-3d16-4f46-9634-30caca3557fa",
                  "name": "project",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "d951e886-f084-4521-93c5-175698d8206b",
                     "name": "startDate",
                     "format": "",
                     "description": "Only count the annotations created after this date (optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "09d6962f-07c8-4ba5-9c2f-d2bf58d0ed89",
                     "name": "endDate",
                     "format": "",
                     "description": "Only count the annotations created before this date (optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Count the number of annotation in the project",
               "methodName": "countByProject",
               "jsondocId": "8e49db07-1e47-4ee2-a508-a459bae9c829",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c11f1e3b-6596-4aa4-8663-b5c93e62a4cd",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "005266cb-7edd-4dd0-a9dc-681e4d3e7f35",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "9bc65b62-5f2f-4772-b98b-defedfc6e288",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "21939a40-edea-459a-994b-0ffdb829934c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/reviewedannotation/count.json",
               "response": {
                  "jsondocId": "59594f24-c569-4251-95d2-3dbf02873d9f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[total:x]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "6c97b1c5-1675-4389-9e1e-de09d2ccb11f",
                     "name": "image",
                     "format": "",
                     "description": "The image id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "52620c83-285c-4056-8a17-18dea99f9ea2",
                     "name": "users",
                     "format": "",
                     "description": "The list of users id",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Cancel the review of all annotation in image for a list of user",
               "methodName": "unReviewLayer",
               "jsondocId": "5d73045f-f2bb-488b-8bb8-531e50937764",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "0bb45353-8a39-4b79-a80d-0676faef1e4a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ca8de231-3b5f-4061-bc8d-c4247bfc001a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0dbbe51e-6e30-4c1f-a54b-e631f1d0cdd4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "1a35c638-9082-416c-a272-1d779ac819ca",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{image}/annotation/review.json",
               "response": {
                  "jsondocId": "e5a6f44a-7fef-46e7-ac12-71ef95115ff8",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Reviewed annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "572e07eb-2a86-4379-a7e4-002fa1a4db1c",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "e7c1137b-b621-4aca-8084-08d24c6f30a2",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "581d11f1-36d0-4c49-b6d4-12dc309d1aaf",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3b961cf6-b8ad-47f1-9f49-e2cfb787527d",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e58fe8b7-82a6-45ed-806d-082c0a542e49",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d4c5472d-6250-4033-b607-f722036ef5fe",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "90927838-3765-4dbf-ba7b-ce9814f77648",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ae3cc9aa-a91e-4b4f-a9c2-0d49b3ef418d",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8bc7eb88-56a3-4221-aff8-3eb04d5b0257",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "673d63d0-f38a-430d-a99c-b275f8a4b296",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get an alpha mask of a reviewed annotation (image area framing annotation). Equivalent to crop with 'alphaMask' type.",
               "methodName": "cropAlphaMask",
               "jsondocId": "dab0bfcd-968d-4de4-83ee-f52e8c3fe0b3",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "027b7675-ca3a-419a-a9c4-cf7d7681806d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "cb4cb75c-604e-4191-927c-a7ef1089fa46",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5a27a12b-7c6e-4a70-bd14-bd7576eb0f98",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "abaf7160-ba49-4c6e-8d5b-aa2864ef64e0",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/reviewedannotation/{id}/alphamask.png",
               "response": {
                  "jsondocId": "dcd9624b-4fde-4ed7-a434-0bc48c2f1ffc",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "555a788e-f405-4b7b-9593-44e5f1ac1ab6",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "cdbbaa8b-623e-41c4-b807-074f99777bdc",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "dcc797bf-4e04-4686-b6e6-6167604d5c8f",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "304a675d-4a49-4217-b22e-bef84f52120c",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "37b455ef-c3ee-47e3-b01e-c4e91e1da9b8",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2c446521-9adc-4a9b-a0cc-97731456d777",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "eb767bec-12cc-442f-a968-9757e99a636c",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4c963242-82ba-473a-9c30-e8d04843fbd1",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8ad239d1-2874-44f9-880c-fbc300c5fe47",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7a884753-2074-4883-8a39-785c34435847",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a binary mask of a reviewed annotation (image area framing annotation). Equivalent to crop with 'mask' type.",
               "methodName": "cropMask",
               "jsondocId": "09fa4503-624c-4852-9b4c-b7b54ff113fe",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d3992289-37b9-4975-bf6a-b0a70d5c5b14",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "4a93048f-1e2e-4d22-b1a8-688cc12d2663",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "158c68a5-0b36-4b47-b4b9-e6beb483d75e",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b4b090b3-73fe-463a-958b-0d5ed1f316e4",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/reviewedannotation/{id}/mask.png",
               "response": {
                  "jsondocId": "43868119-358a-4d7d-ab7d-a0d305bb699e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "2a655036-acaf-4777-a950-578509b08717",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "5f332432-3aca-4a27-8b89-87d8a2a3feb6",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4a792753-66e2-4201-8c44-70d2cd40a854",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e84f08d2-2c8b-4e37-9201-e64a951754cb",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "481c5ac6-265d-4c77-b96b-4d59ded27351",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8a8fce64-bc4e-4be8-8884-c878e00a677f",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "da432b6e-bd33-4188-95b1-eb08824bc724",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8daf99c2-38da-465f-b058-f954e88f479a",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "59490732-defa-4c8b-a397-5f875b3fd4ab",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "993b490d-8919-4e6f-b8f8-9432fceddfd6",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a binary mask of a reviewed annotation (image area framing annotation). Equivalent to crop with 'mask' type.",
               "methodName": "cropMask",
               "jsondocId": "eae99334-759d-44a7-a9ef-6ab8b2f971a4",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "4e4ab926-6687-44e5-a646-225823810b98",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "3974459b-ae6c-493c-844f-64a5ba410649",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e7f06be0-4b83-4647-a254-52652e04cb3f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "921447cf-6e11-4140-84a9-4d89abb806cb",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/reviewedannotation/{id}/mask.jpg",
               "response": {
                  "jsondocId": "ae38a385-1acc-491b-8dab-46cff9be800a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "91e0e283-ae8f-46fa-a479-0df2d4d8f0dc",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "8672ce4f-5a77-467a-9617-4bbee696c10c",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a23dba66-687d-401e-acbe-5876c2b61066",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4be91992-d36f-4296-8d88-2eb25633ea2e",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c73459f1-671f-46b1-b822-8062be2e415e",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ba9f3602-94a1-4243-af99-88914dcc51b5",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0f869ac9-e0db-430b-8bfb-d866f9de95a6",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0e67da5d-b514-4895-98d7-b51eb6003947",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7c6c719c-ce69-49d1-9178-b590d7b69a28",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c7731018-22a6-489b-8830-1e23033f0013",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a binary mask of a reviewed annotation (image area framing annotation). Equivalent to crop with 'mask' type.",
               "methodName": "cropMask",
               "jsondocId": "5bbd3ee7-fb8b-4914-bb67-bf616e0df01a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "76701002-221f-4e8b-b999-64a45728b6b9",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "138673bc-17a2-4821-bca6-36a9fdf73631",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c81fbbb9-d866-474e-88bd-8f1028cfcb9f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "fc12d0e8-d7c7-45c7-8549-b8c777ac075c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/reviewedannotation/{id}/mask.tiff",
               "response": {
                  "jsondocId": "c496b9f1-e73c-4492-9efd-f29d0b704df9",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "534e6d98-c9f1-4429-85f4-977a99f1cc80",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "8a918411-644c-41ad-acbf-ae0443a299fd",
                     "name": "terms",
                     "format": "",
                     "description": "The annotation terms id (if empty: all terms)",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "dec88972-9982-4b3e-ae15-e65bd3d55955",
                     "name": "reviewUsers",
                     "format": "",
                     "description": "The annotation reviewers id (if empty: all users)",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "abc58ea6-9932-4629-9ca5-db9e70496da0",
                     "name": "images",
                     "format": "",
                     "description": "The annotation images id (if empty: all images)",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "14585e42-2914-4bf5-9dad-a19c3addf159",
                     "name": "afterThan",
                     "format": "",
                     "description": "(Optional) Annotations created before this date will not be returned",
                     "type": "Long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ee6c4d6e-c334-47ae-9a99-132c5061d8ac",
                     "name": "beforeThan",
                     "format": "",
                     "description": "(Optional) Annotations created after this date will not be returned",
                     "type": "Long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "28b6054d-7206-41e5-805d-ae83c1ecffb2",
                     "name": "format",
                     "format": "",
                     "description": "The report format (pdf, xls,...)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Download a report (pdf, xls,...) with reviewed annotation data from a specific project",
               "methodName": "downloadDocumentByProject",
               "jsondocId": "82a5f6d5-aa43-4cd7-87a1-ebe328a672d2",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c3a206c0-b59a-49e3-a87b-d53acb39c873",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d2775e8f-fa0d-4968-ae78-8d28896496ba",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "541cc9e2-1227-4236-9c57-a3b4a66539cc",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "65c82ebf-02c5-42d5-8fde-d75753878e23",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/reviewedannotation/download",
               "response": {
                  "jsondocId": "c8ba986b-2ce4-448d-8532-e702135e9066",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "08711a1e-fd7a-4295-aa25-d1cbaf3531e0",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "92cc2326-b2d5-48e6-be9a-f11d35da5d89",
                     "name": "type",
                     "format": "",
                     "description": "Type of crop. Allowed values are 'crop' (default behavior if not set), 'draw' (the shape is drawn in the crop), 'mask' (annotation binary mask), 'alphaMask (part of crop outside annotation is transparent, requires png format)",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c26cc54a-f750-417c-842d-53633d76ad5c",
                     "name": "draw",
                     "format": "",
                     "description": "Equivalent to set type='draw'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "01d4174f-036d-44a5-835e-ee9b4a0cd672",
                     "name": "mask",
                     "format": "",
                     "description": "Equivalent to set type='mask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c93d8eaf-93c8-4e6b-885a-c40c6cdd7fe6",
                     "name": "alphaMask",
                     "format": "",
                     "description": "Equivalent to set type='alphaMask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "aee2d181-5d22-4456-94ac-43a8b408cb2a",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "abf2e2b0-e8fe-4ad8-8aae-1a7c42e61da5",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c0ba98f9-6c63-40f4-a916-67b2b9c7bdd2",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f59ee167-c681-434b-960f-f8edc547a66f",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d06e0ca0-2544-4a63-9445-e4d173f7313c",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "13ea0752-e8f7-4e97-94e2-16eb4c423a41",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f87bce4c-3152-44f1-b5fc-d33e00c7d10b",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ce37d387-fe1c-4f2d-a9c1-8952fa686f48",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "68a7c2a4-15dc-40e1-9232-7336e45f04aa",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a crop of a reviewed annotation (image area framing annotation)",
               "methodName": "crop",
               "jsondocId": "8e7178dd-09da-4eb7-8a15-178466a5476a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "3ed028af-caf2-42e4-8355-2ea420d02ec8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7fa6d41a-41f7-403e-aaf4-c103c2ae91f3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e2f621c6-8fa5-47b8-8161-e7cf619e5949",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c9e8b452-bf66-4fb1-953f-0437232bcade",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/reviewedannotation/{id}/crop.png",
               "response": {
                  "jsondocId": "e7383557-0bf4-45a0-9fd1-153c97331297",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "1401c26e-fd68-49b6-82e7-05d12c23a348",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "e286135b-3852-4214-9700-372f9db74e24",
                     "name": "type",
                     "format": "",
                     "description": "Type of crop. Allowed values are 'crop' (default behavior if not set), 'draw' (the shape is drawn in the crop), 'mask' (annotation binary mask), 'alphaMask (part of crop outside annotation is transparent, requires png format)",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "31a1d429-0040-490a-b050-2ee52c274687",
                     "name": "draw",
                     "format": "",
                     "description": "Equivalent to set type='draw'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ae826b98-1b4d-4ce4-93b5-51fdad798720",
                     "name": "mask",
                     "format": "",
                     "description": "Equivalent to set type='mask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7e1f87b3-75b5-4ad4-aefc-ccb32b8a196a",
                     "name": "alphaMask",
                     "format": "",
                     "description": "Equivalent to set type='alphaMask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7a246a14-ad19-4058-a472-66e93a4787ec",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "28472d54-8dcc-4e0f-aed1-7a23a5e1470f",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6828d063-b571-47b0-a665-22505dc57bd7",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "eb84901d-64cf-4971-abe4-697bf69a9368",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d2526441-a559-45a9-905d-3d6d298def05",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a9a05656-e50d-4389-a983-176726a689e8",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5d970b65-1b6f-47bf-a249-27a9352d0399",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "849d9a70-8c05-4d3c-a944-536779da75c7",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3e3aa08f-5d7a-4729-93a8-f380ea59b6db",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a crop of a reviewed annotation (image area framing annotation)",
               "methodName": "crop",
               "jsondocId": "1756fe14-92c6-4ec8-9be4-18f4432ad692",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "9b0d7aa9-808b-4839-a9ca-3b094129784a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "71567722-c34f-4342-b783-e7b4b88db59a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d1e6b0d7-a7a4-409b-b839-993adb14fd83",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "52a02f79-87bb-4424-b05a-76a1ff08198b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/reviewedannotation/{id}/crop.jpg",
               "response": {
                  "jsondocId": "dc074f20-b8ff-4ba8-856a-ebb0cff4c664",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "71183fd4-c6f8-4c94-beef-140cd267ecf7",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "2eda44db-b7ba-46a7-8ff8-66373cb3c2d6",
                     "name": "type",
                     "format": "",
                     "description": "Type of crop. Allowed values are 'crop' (default behavior if not set), 'draw' (the shape is drawn in the crop), 'mask' (annotation binary mask), 'alphaMask (part of crop outside annotation is transparent, requires png format)",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "15e6e582-c560-4ad2-99f0-a7f1458c49c1",
                     "name": "draw",
                     "format": "",
                     "description": "Equivalent to set type='draw'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "79ba00f9-aff9-4fb3-856d-5af972664e57",
                     "name": "mask",
                     "format": "",
                     "description": "Equivalent to set type='mask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1e8e1ab9-197e-4b4b-93c9-3324f1ac07b1",
                     "name": "alphaMask",
                     "format": "",
                     "description": "Equivalent to set type='alphaMask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "92c8f7e1-3a0c-477d-a42b-f3b9fd3a8a06",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "52207238-1b76-4a9e-b323-f0d577d97ad9",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "cfba29d3-1da7-47b7-a1e0-dfa368afc135",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "778166f8-4005-4ca9-9ecc-564b137a0132",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f5d759be-dbd0-4c3d-a633-0724d463a5ea",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "caf5ad74-a241-49f9-8e9e-300f970645e4",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8512feda-2396-4131-a300-93f596c013e3",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "321572e2-03ce-4baa-a982-3d178b2eb131",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8bde058e-52ce-47b7-8f1b-a75bd134df2c",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a crop of a reviewed annotation (image area framing annotation)",
               "methodName": "crop",
               "jsondocId": "7e3ee679-2e9a-4c3d-af98-a9d889221f57",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d1aec42c-71d3-4309-b393-7e13307abda2",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "392b3e3f-5e38-447d-84ea-6cb51033a28e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a4877b97-02fa-450e-92ef-862a4b596031",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "5cfc6951-c9e5-4717-bf4f-17f03c700bb9",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/reviewedannotation/{id}/crop.tiff",
               "response": {
                  "jsondocId": "ccd6ca64-5faf-4d17-b75f-fee5dd1db799",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "e7dd99a8-713d-47db-a381-a3ff0f35ec1f",
                  "name": "id",
                  "format": "",
                  "description": "The image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [{
                  "jsondocId": "b7db5744-5fcc-4485-8863-d8dd1b5c4ab3",
                  "name": "cancel",
                  "format": "",
                  "description": "If false, the image will be validated. If true, the image return in unreview status (only if no reviewed annotation) ",
                  "type": "boolean",
                  "required": "true",
                  "allowedvalues": []
               }],
               "verb": "DELETE",
               "description": "Stop to review an image. ",
               "methodName": "stopImageInstanceReview",
               "jsondocId": "581fc827-b181-4956-93a5-53cfb5531bf2",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "de8425bd-6572-493b-9901-8e45a267180e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ae5e89cc-0a56-4060-9171-20ebd97eb47f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "1f53638b-7790-468c-bf30-1b939d554894",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "4f7a6ed9-da20-4ffc-9ac1-0372fafe8ccc",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{id}/review.json",
               "response": {
                  "jsondocId": "dfff6ac7-9ca1-41cd-8de6-906bf2ad3071",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Reviewed annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "8f930b66-9013-4ff4-a0e7-65db8105d78d",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Unreview (cancel the review) a user or algo annotation",
               "methodName": "deleteAnnotationReview",
               "jsondocId": "64030c18-7ba3-4214-8134-0f354a9f07ae",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "092fe76c-abef-4dfc-b344-492e413d00fb",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "1fa8c3df-8447-4bbd-a355-45b4b4c661d5",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e5f49b21-72e7-4652-a888-94c91b7e791a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d0f5a2fd-3afe-4e82-a2d7-26f9cd9b7715",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/annotation/{id}/review.json",
               "response": {
                  "jsondocId": "dc0b541d-8138-48c1-a101-b615fe607f2a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Reviewed annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "0aea8b02-77ce-49b5-9978-c8b2dcf0ddbd",
                  "name": "id",
                  "format": "",
                  "description": "The user id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Count the number of reviewed annotation for the current user",
               "methodName": "countByUser",
               "jsondocId": "1edb5c18-abef-461b-b210-bc009309eb84",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "185861b3-dac1-43f7-af45-8d4dc3e9e289",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "4c72bcc7-be7d-439c-89fb-68c118ea4b2c",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e78da5fc-33d8-4868-bfbd-411ca9c0e111",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "de651571-c595-43a5-b8bf-b73e1513e966",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{id}/reviewedannotation/count.json",
               "response": {
                  "jsondocId": "d76729be-9369-49d5-8fff-0e447f42c9d8",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[total:x]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "1f9cf429-da5c-4d08-b3cf-38e4f9aecdcc",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [{
                  "jsondocId": "d0d305bd-0f98-4e33-b89e-447351a38c99",
                  "name": "POST JSON (terms)",
                  "format": "",
                  "description": "List of annotation terms (if null, keep term already map with this annotation by the annotation creator)",
                  "type": "list",
                  "required": "true",
                  "allowedvalues": []
               }],
               "verb": "PUT",
               "description": "Review a user or algo annotation",
               "methodName": "addAnnotationReview",
               "jsondocId": "6c4a3d55-6bf8-4371-806d-2f6bbd3622f4",
               "bodyobject": {
                  "jsondocId": "764a8f07-24a8-44eb-8a00-b13b4f714d0f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Reviewed annotation"
               },
               "apierrors": [
                  {
                     "jsondocId": "a75b7dd1-8d59-46e5-bece-e94336e29611",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "93418c3a-1190-4342-8cdc-846b7b1b0890",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "85f0ca23-05ad-4226-880a-45c58d65680c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "356d3332-005a-4396-9270-cdfb85de4fa8",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "a6604f96-766e-42e5-bdc8-2ad40f57c8d3",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/annotation/{id}/review.json",
               "response": {
                  "jsondocId": "d1692499-d70f-465a-b5bc-9345e548f73d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Reviewed annotation"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "d2a3b1a5-adc9-42df-b8d2-790246e30527",
                  "name": "iduser",
                  "format": "",
                  "description": "The user id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add reviewed annotation. Only use to create a reviewed annotation with all json data. Use /annotation/x/review",
               "methodName": "add",
               "jsondocId": "d7db5095-b0b5-4e40-b90b-174834ff442a",
               "bodyobject": {
                  "jsondocId": "625c0645-f0d3-4eac-b7c9-e0b29852a29b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Reviewed annotation"
               },
               "apierrors": [
                  {
                     "jsondocId": "915b4475-f796-4333-be66-73bb6d8fc50d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "64187b56-9ce7-4139-bef2-285f99fe2333",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "677da3fe-2f84-4e5f-af6e-2600e6256f14",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e13d4d70-fb0e-4443-872b-039dd1234dc4",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "3a6d7ac6-3361-426c-93ee-3f61cbed9aed",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/user/{iduser}/reviewedannotation.json",
               "response": {
                  "jsondocId": "25f857a1-46b8-4275-b4a2-00b59d3705db",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Reviewed annotation"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "67210e66-a210-4855-aedd-f0805480f8da",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a reviewed annotation",
               "methodName": "update",
               "jsondocId": "9c8664e3-c74e-45f9-a85c-7b87b13cac61",
               "bodyobject": {
                  "jsondocId": "fa83d474-5a01-4a8c-8c40-76bdcb8af5f3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Reviewed annotation"
               },
               "apierrors": [
                  {
                     "jsondocId": "b02bdf0a-7357-4a26-92ee-84614fe2e76a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7354d024-229a-43ec-adbb-5a7f0c5a55fb",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "92e241b3-bc90-4755-ad15-46ff906a7563",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "08695e1c-fb21-436a-b1d7-8650acbc075a",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "4e11f461-fcd7-4c5c-af2b-8e9be5f5366d",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/reviewedannotation/{id}.json",
               "response": {
                  "jsondocId": "93b0d322-89b2-47d1-95dd-ba9a24be130f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Reviewed annotation"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "f5dceca9-58df-4b8f-b1a5-e09ebcafad5f",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a reviewed annotation",
               "methodName": "delete",
               "jsondocId": "76ab6926-56b4-4146-9bc9-10db6e554e9a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "edbb83f2-f2b7-4214-a438-ddd9c517ce33",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f98bb061-62ef-4ec6-8899-f6d483259544",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "f7e06981-3e28-46d8-ac86-6bdc03b422b6",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7af7d546-2546-44cd-82b9-fef8ed10952f",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/reviewedannotation/{id}.json",
               "response": {
                  "jsondocId": "dbeb8da9-fa42-47dd-9d17-13caf986479b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Reviewed annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "883a29a2-3e7e-4776-b468-cfc3e17a93c8",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "cc87cfe7-7770-4332-b8fa-d3bc219f27f2",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all reviewed annotation available for the user",
               "methodName": "list",
               "jsondocId": "00f5308d-4cca-41b6-9b09-53cadca86744",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d10f7580-313a-4ebc-b806-7dc4094c83d6",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "aa00c84a-e47b-4ad8-bcd2-a5eb381377f1",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7016820c-d454-4cb1-abfd-4ad66f99e426",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "0c1cb9dc-7dc3-4a90-8fef-18b292efb8a5",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/reviewedannotation.json",
               "response": {
                  "jsondocId": "ce00f158-465d-41c1-982a-8e05ae3b7b2f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Reviewed annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Ontology | reviewed annotation services",
         "description": "Methods for managing reviewed annotation, annotation validated by human"
      },
      {
         "jsondocId": "e7cd0aeb-02ac-4b39-b36c-b6bcb88df78c",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "9dcab703-976f-4b51-98ee-eaa8d7186134",
                  "name": "id",
                  "format": "",
                  "description": "The term id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a term",
               "methodName": "show",
               "jsondocId": "e2c83f45-59a2-42c3-9214-a3e51219241a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ce771355-a493-4d97-b3ba-5060835d168b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "77ab76af-d1a2-43ee-a6ff-1bb366ce53fa",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "58fcaa63-c7e9-4496-80b8-dfa06122ab80",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "07227955-b9d2-4bf6-adee-6a730874cf5d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/term/{id}.json",
               "response": {
                  "jsondocId": "26762079-06c3-48a7-b4ba-6915edab8b84",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Term"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "4de0a759-f4ac-48a7-8a02-931ad6009f04",
                  "name": "idontology",
                  "format": "",
                  "description": "The ontology id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "189c179e-e6e7-4a24-955a-35e229376d14",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8cc213a1-c9fd-44aa-8917-55e0a933a632",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all term from an ontology",
               "methodName": "listByOntology",
               "jsondocId": "a1789f75-80e4-4e6d-8b95-a84f5612b753",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "868dd13f-464e-46ff-a450-f65a2b32a1d5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "88f50be1-4527-49dc-bd4e-d5966ef8df5e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7d691aed-9173-48be-af0a-ea068ae55fd6",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "92f94a50-2713-4609-b63a-96e02cf0d83a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/ontology/{idontology}/term.json",
               "response": {
                  "jsondocId": "8938e6ff-af33-4d4b-934d-eb11f9d3daf7",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Term"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "f0810ab5-7dbb-4f20-a6da-8b46208614cf",
                  "name": "idProject",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "e83c9f60-75aa-4706-aac3-8ab3886eb6c4",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1cef40a5-1030-485d-8f10-63bda5a3055f",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all term for a project",
               "methodName": "listAllByProject",
               "jsondocId": "a3e4a1c6-ef7a-40c7-af9d-0ee3c535b56c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "0f759c5f-0936-4320-b8b4-fc8ae02d0842",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c1c7669b-86c4-4b5c-bcbd-36cf44019b42",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7c2a8281-9c9e-4b14-9b81-d85b3c642adf",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7f6460b3-9d8e-485e-89fa-2ddbfa410ed1",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{idProject}/term.json",
               "response": {
                  "jsondocId": "94cafb75-0019-4356-9071-8f8d2be1eb0a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Term"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a term in an ontology",
               "methodName": "add",
               "jsondocId": "ddb13538-9535-45ed-886b-f35ec6b8713f",
               "bodyobject": {
                  "jsondocId": "511fe3c5-d511-4642-bcaa-75a8832bbeb3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Term"
               },
               "apierrors": [
                  {
                     "jsondocId": "9bd3861b-8a17-437b-aa2b-3d0b35cd3363",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "4abb6e4a-0ba4-41b2-bbdb-215451e8f044",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "39252ba9-1a49-4aa9-b81e-dc49197a9f3f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "62adb6df-efae-4feb-ab10-d2ddf3a32ff6",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "75aa2305-cc7b-4617-b97f-f69bd69d17fd",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/term.json",
               "response": {
                  "jsondocId": "93cf99bf-08c6-4847-b325-7cab129ebeb8",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Term"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "f0867035-1ccc-4989-9a31-d216dcf3e8ea",
                  "name": "id",
                  "format": "",
                  "description": "The term id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a term",
               "methodName": "update",
               "jsondocId": "b78e0c96-9f2d-44a1-a763-eb687783978f",
               "bodyobject": {
                  "jsondocId": "5337abd6-8014-4e9b-a8c2-8ba6b12a0b6d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Term"
               },
               "apierrors": [
                  {
                     "jsondocId": "90c3821e-bd96-49f9-aa9c-29ca43b98819",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "61446066-dbd0-4214-a4fa-521967904939",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "3b27caed-bff3-4e0c-91df-5a4ead26518d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c244d3e2-1385-4872-b539-c4c07540c2ac",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "6b10a477-3270-419d-a206-e3d8dfdeea42",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/term/{id}.json",
               "response": {
                  "jsondocId": "92e79ebb-3738-4213-9d0f-370ae64ded8c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Term"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "02d9c91b-11fa-44c7-a28a-cd9f5b8c00b4",
                  "name": "id",
                  "format": "",
                  "description": "The term id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a term",
               "methodName": "delete",
               "jsondocId": "0c701080-c52f-48b5-8143-48c799763feb",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1e654b00-d52d-4647-8fc9-31462062ec7b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "4715eb04-985b-4042-920c-667abe126d96",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "3efe6fea-c0c3-4fcc-bf2b-a6cf5ba4a015",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d8f94d3b-5d56-4d0f-ac5d-feb4747ca447",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/term/{id}.json",
               "response": {
                  "jsondocId": "4c5023c1-f66c-46b8-8035-63b59d711159",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Term"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "ce84b891-a0ea-4b91-96f0-8c837bef5304",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9d0fb1ba-8a96-45d3-b033-c3cb60e8ebab",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all term available",
               "methodName": "list",
               "jsondocId": "80191df7-b8bb-4689-88ec-3b6a978dd2be",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "8ef7af65-5e85-4312-a0aa-e1a821eb74de",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6931617c-5a05-4180-b1c8-b1075b595b94",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ababae8c-f36f-47da-b447-0be14c47c8c1",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "803f1453-eb5d-477b-87da-33f3724e0c5b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/term.json",
               "response": {
                  "jsondocId": "e5348f40-ab58-4fdc-bf77-dc57c70c5759",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Term"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Ontology | term services",
         "description": "Methods for managing terms"
      },
      {
         "jsondocId": "c50aa86d-05f0-4702-83db-04aea9e05773",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "e7d7c55c-c69e-4b27-bda2-f7b3b6181da6",
                  "name": "id",
                  "format": "",
                  "description": "The track id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a track",
               "methodName": "show",
               "jsondocId": "7239269e-c128-436e-b40e-3aebd31a1401",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "0b921da2-150e-435b-9ad8-e94564b4317b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "271114b5-b8ee-4261-8270-736fd6f1f1c1",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0a335acf-1d73-40f1-872a-36a0710e3201",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b38aaf28-ce3e-4e4a-90eb-63e11526a651",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/track/{id}.json",
               "response": {
                  "jsondocId": "7a338726-4c5f-4eb4-be07-ac27dde4d302",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Track"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "98576679-7b9e-49f9-b774-251094fda2ba",
                  "name": "project",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "1e7c3b14-4435-49d7-8409-6d232357fd3e",
                     "name": "startDate",
                     "format": "",
                     "description": "Only count the tracks created after this date (optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "049db92f-8df2-41c9-a781-b529651cd17e",
                     "name": "endDate",
                     "format": "",
                     "description": "Only count the tracks created before this date (optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Count the number of tracks in the project",
               "methodName": "countByProject",
               "jsondocId": "3693e4b7-14a6-4cef-a5ce-d65d4eca9073",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "cbb81e75-cbfa-4a94-8882-29ce76833545",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9d02df85-e870-4437-845f-68ffd7e08d46",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d4dde79f-c88e-470f-a760-525cec6a8ea7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "88fa15f1-4531-4490-937e-1155011974e0",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/rest track/countByProject.json",
               "response": {
                  "jsondocId": "6b1e92e4-b28b-4d13-929f-8a6f662d8fb6",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[total:x]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "8026d96b-7a9a-4988-8039-b6489226e54b",
                  "name": "id",
                  "format": "",
                  "description": "The image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "6b559044-076c-4b81-a76d-ffa58bb648dd",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a70711c7-4471-4a16-8d11-14d9f59f40a2",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all track from an image instance",
               "methodName": "listByImageInstance",
               "jsondocId": "ab4b636b-4589-4977-baf0-f416a155febd",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "6b0fe35d-5631-40c1-ae0e-7c219d50d5c3",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "1fe5e6d9-04ef-45db-954d-134cf83d8117",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "94c540d0-3d60-4052-b812-c54ec5721339",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "0a5976fe-0ebd-4dd1-a824-20c1c1a2f667",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{id}/track.json",
               "response": {
                  "jsondocId": "54908f3d-d731-41a9-8fc4-ceb20d00edfc",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Track"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "74f1ba40-4f73-4242-b88e-a592a8116c40",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "e2efc3b3-33f8-4832-8b29-8703e29a1cc2",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f16cdde5-e81a-4a80-ac47-4c4704b5fe5e",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all track from a project",
               "methodName": "listByProject",
               "jsondocId": "cb9d2a6f-a127-49cd-b278-3716e9cf7807",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d306f777-f87a-49f8-9549-f9a496808aef",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "74fea732-2784-4570-9f59-e111d6c75ee3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "2ab73915-33aa-4c15-9657-d30a73b36f1f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b8d359d4-9c4f-4996-beed-0489af9720f8",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/track.json",
               "response": {
                  "jsondocId": "7bd21d36-69f1-4015-a41f-c451e8b10a54",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Track"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a track in an image",
               "methodName": "add",
               "jsondocId": "20a6eec2-60e3-401d-8746-23a7521e4639",
               "bodyobject": {
                  "jsondocId": "5cd77d3b-5a07-4f44-ba29-299591c07522",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Track"
               },
               "apierrors": [
                  {
                     "jsondocId": "04736365-880d-4690-af8c-91db12b91839",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "0ed16b0e-4f74-461c-9daa-3337b2750c11",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e3a17daa-bade-4d35-84a3-03072a061cc1",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "1811a72b-94fb-4410-af7d-e4a8042a1f53",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "16d02490-a1d8-44ec-a82f-d6f3eabf3608",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/track.json",
               "response": {
                  "jsondocId": "6f3a0a3a-da04-46d6-b54b-7397ce8aaaa1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Track"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "d055a8d3-fa05-494f-b485-6272dab9ad06",
                  "name": "id",
                  "format": "",
                  "description": "The track id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a track",
               "methodName": "update",
               "jsondocId": "f09d288f-02f4-4f2f-ac5c-b79d1b515392",
               "bodyobject": {
                  "jsondocId": "11dae921-4a21-4f6f-a270-61d320b29161",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Track"
               },
               "apierrors": [
                  {
                     "jsondocId": "9f95a747-6e33-473e-b1c4-fbf6d357b5f8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "394b8a1a-9f0f-4b1d-b407-25ffaa774164",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "47110681-1f9e-4f6b-b51e-fa4b306002c8",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b58bd42c-31bf-4e22-953c-1432ca079092",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "02ab9381-acde-4eb5-bd39-8ac58824b830",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/track/{id}.json",
               "response": {
                  "jsondocId": "0cb51d66-b844-42c6-8329-14173d333f6a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Track"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "0977171e-1587-4293-be2e-b39f8560a948",
                  "name": "id",
                  "format": "",
                  "description": "The track id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a track",
               "methodName": "delete",
               "jsondocId": "4e1abc22-a63f-4874-ab52-fd0925638c15",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "653cd33b-5dfa-47d1-98f5-7b13318f4714",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c49d70f9-801f-4013-acdf-af087093bf38",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5830cb96-3e9c-4e99-b69a-fe138ae8c565",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7305784b-1447-4076-8912-658935434a57",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/track/{id}.json",
               "response": {
                  "jsondocId": "3cc1b78c-5d1f-4b23-af9f-290d5661ad0b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Track"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Ontology | track services",
         "description": "Methods for managing tracks"
      },
      {
         "jsondocId": "34e4b3d2-a124-4e7a-8e04-e808e4ad652f",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "33dd2964-6c19-4ff4-9b03-cc6591011432",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a user annotation",
               "methodName": "show",
               "jsondocId": "25614a70-0570-48a6-aca1-be0ec9122e8c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "137de258-ae65-47ce-96f9-2f521da2da7a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "49467a11-91f7-43bd-973f-a471fc42bfa3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "b440b8a2-08fe-407a-89c1-3f3095e3d77c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a8d848a6-0ad5-4a47-adb5-6d09235e31c8",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/userannotation/{id}.json",
               "response": {
                  "jsondocId": "52c07c1b-74d1-4465-8d6a-f3003f0b3718",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "dff7ffae-44af-471e-a00a-09bed13e426b",
                  "name": "project",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "fc8ed61e-3be8-4cd7-a102-37a85f73dfa4",
                     "name": "startDate",
                     "format": "",
                     "description": "Only count the annotations created after this date (optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "dee4e8ba-33c7-48be-987a-99bb612ed4c3",
                     "name": "endDate",
                     "format": "",
                     "description": "Only count the annotations created before this date (optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Count the number of annotation in the project",
               "methodName": "countByProject",
               "jsondocId": "f2604ddb-a3d5-4d62-a7fa-bf851f52d79e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "f4c42bc6-cd25-4d05-a956-3aed6f27048e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "2ac46c28-3fcc-4130-8f60-277e970b1e48",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8a665085-9318-4009-8093-8fe98541dae4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e3e83c2b-6254-4dbd-84f2-44804a75d75b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/userannotation/count.json",
               "response": {
                  "jsondocId": "096c7ef1-67be-4b9a-a6dd-350c8fedc89e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[total:x]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "26c351bc-f86f-4fc6-94e1-f2133fa15df2",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "e818e64b-661f-40c1-a6ca-6560ba481879",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9ec2750a-60fa-4bbb-a649-d7fa4aaa86ef",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4454aeaa-a5dc-4c80-bb6f-8470f6971004",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7c15dbd8-c0eb-467a-8bf9-d01e6a4c370e",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3dd3133f-10cb-433c-8d34-46e4e209c9ab",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6863ca05-77be-4c9f-8313-33f7330a4fe0",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "48afe9d2-ce86-400a-ba4a-2edeea34ceff",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "42d17f15-3b84-4483-92c9-8857e691b14d",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "196e2f64-d19e-4a6b-a8c2-3f671d2d66c2",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get an alpha mask of a user annotation (image area framing annotation). Equivalent to crop with 'alphaMask' type.",
               "methodName": "cropAlphaMask",
               "jsondocId": "51d479db-e012-4323-9a07-1382b8436573",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "9b1d1660-2ebb-4d8c-b52b-8a0c8adc46a5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "abc063c5-0940-4dd7-aae0-b9d0cbc3691f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "856dd089-5e78-491b-a305-cf1f09feb3fd",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "370491c6-1f79-4bb8-a8eb-67645dcfcab5",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/userannotation/{id}/alphamask.png",
               "response": {
                  "jsondocId": "64ab0155-01f4-4a5a-a91d-380277409b77",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "dd941508-ab4b-4e12-8c99-0c9ef0233c2d",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "0fcb9983-1091-4417-bfd5-10258fb68928",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "979f5265-0486-4da8-8f02-4742901e3c65",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "88afabe7-4434-46bd-ac2f-d4648e754dc2",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6281f0a2-3f1a-4999-b6b1-cbebba6e4b1e",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8f45518a-4b93-4259-b18e-9bd4eb13825c",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "dc2dd295-30c3-496a-838e-162263e3b082",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "155d84ab-c471-4296-b85f-10e68afaf064",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ec97de3a-9fcd-46a6-8ba7-43a618df8d50",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "627c02e5-0a6f-42c9-807b-d401eb14de79",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a binary mask of a user annotation (image area framing annotation). Equivalent to crop with 'mask' type.",
               "methodName": "cropMask",
               "jsondocId": "007f3daa-0c34-4fed-ada4-13a936c40d66",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "0dfd06f1-c775-423f-a3cc-c9805a1493bf",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9da6a4d4-d1cc-4b65-a510-21e10b4503cb",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "db7c354f-c13d-4548-a423-aa9981c3f84a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "eba1697e-0222-442f-bebb-d6bda646c3c2",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/userannotation/{id}/mask.png",
               "response": {
                  "jsondocId": "1e3f11fe-af56-4787-9bc9-0d3e1be6715a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "ce6b8f25-2734-45b9-a317-c4f4ca562ef9",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "bcd03c9b-7993-45f5-a330-faeed5becc48",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2d0685c2-ab12-4a3a-b230-93a7827ca152",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "024811d5-e7ba-4783-a2a7-98f9560cb0d6",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c8384e37-60b3-440c-ab91-c0231eb1be87",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0682f325-b80c-486c-bb1a-354e7b1188e8",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f72b7149-1b42-4af2-ab4f-c3d8a83a8056",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d9825db4-bac5-4fc7-8722-73f1d95204a1",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f8dae8e7-e3f5-4b1a-af87-acb350474ba4",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "63b51251-e281-433b-af47-2264c7f7dd4a",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a binary mask of a user annotation (image area framing annotation). Equivalent to crop with 'mask' type.",
               "methodName": "cropMask",
               "jsondocId": "0f0fdda6-85bc-4d27-ac11-c6b0babba059",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "89b9dfa0-4daa-4fb4-8541-8e6d06b235e0",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "935d914e-9feb-422e-a653-c68e3091a8df",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "36417f26-7ca8-4466-82aa-7d2aa2fb078b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "75e8ed16-c141-498e-8b98-42cbf01a0467",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/userannotation/{id}/mask.jpg",
               "response": {
                  "jsondocId": "ea751da3-c577-4c42-b749-1883f43ce8f8",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "57391422-3266-4d28-b8e6-07d19a2ddb0c",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "0e96c7e8-5534-4ad6-9bd6-df30be7512b3",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "78e51547-1c7f-483f-8989-a8656b158618",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c3db3de4-acf2-44df-90ee-ede922206c70",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "01e302b6-b2e4-4d6a-a70c-3552836564eb",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ff730724-823f-41ce-92d7-b2851c470a9d",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3947f0d9-de2f-403c-a23d-bd5dad2e4201",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5cd87f39-263c-4559-a348-7c44147f5801",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9079f333-eda7-43df-b09a-98f2d7319c47",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0de459b2-9876-42af-8cda-c6704e24fea8",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a binary mask of a user annotation (image area framing annotation). Equivalent to crop with 'mask' type.",
               "methodName": "cropMask",
               "jsondocId": "e8287db3-2656-451b-8f9b-d68d40330db3",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ee1474a2-027e-44a7-8001-6c6f1bc8234f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "3a481ca3-24d2-4a8c-9885-b53939a7ace4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a944cecb-8677-42de-9ddb-e7e44c25e120",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ca0e7d1c-b25b-4255-98da-90eafecc9a86",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/userannotation/{id}/mask.tiff",
               "response": {
                  "jsondocId": "727580dd-b567-41c2-81d0-7797c9a4af16",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "f5722d01-95c6-4dd2-97d4-0e095848382b",
                     "name": "annotation",
                     "format": "",
                     "description": "The annotation id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d1e64589-0ce5-4c6f-8429-def6b87d0d5b",
                     "name": "id",
                     "format": "",
                     "description": "The comment id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a specific comment",
               "methodName": "showComment",
               "jsondocId": "65f7a960-5c7c-4332-ada5-eef7a49ccbbe",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "f47722f8-7a78-4fca-91ed-2b4c8c2ab660",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7fa7cdd0-9e2f-4343-8a81-c931f120bc23",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "28554694-1e5b-4fa8-a028-a61a82777598",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "011b3e18-bb0b-4671-99d6-adba1dcc8fa9",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/userannotation/{annotation}/comment/{id}.json",
               "response": {
                  "jsondocId": "cac5b3f2-274b-405c-9a6b-03890cbb8526",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "ffa19e3c-9766-45d7-9acf-8dd70911df00",
                  "name": "annotation",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "5caccaed-b98e-439c-9942-31f31cc74b08",
                     "name": "POST JSON: comment",
                     "format": "",
                     "description": "The comment",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "223128f3-0e59-4753-be89-ab53147842d3",
                     "name": "POST JSON: sender",
                     "format": "",
                     "description": "The user id who share the annotation",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "eec96bcb-e9d6-4442-bbfe-48cf66c470e1",
                     "name": "POST JSON: subject",
                     "format": "",
                     "description": "The subject of the mail that will be send",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "502b7dc7-4755-45df-a72a-2f7fd6fc06ba",
                     "name": "POST JSON: from",
                     "format": "",
                     "description": "The username of the user who send the mail",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e7b4d428-7c92-45ec-99c4-af95efab8218",
                     "name": "POST JSON: receivers",
                     "format": "",
                     "description": "The list of user (id) to send the mail",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "46ba48eb-08e2-4306-9aeb-b073bb9a0252",
                     "name": "POST JSON: emails",
                     "format": "",
                     "description": "The list of emails to send the mail. Used if receivers is null",
                     "type": "list",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f615a128-3f4c-4782-9ddf-47266208f3eb",
                     "name": "POST JSON: annotationURL ",
                     "format": "",
                     "description": "The URL of the annotation in the image viewer",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "763f7194-c98b-4111-856b-5fc43e7e56cb",
                     "name": "POST JSON: shareAnnotationURL",
                     "format": "",
                     "description": "The URL of the comment",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Add comment on an annotation to other user and send a mail to users",
               "methodName": "addComment",
               "jsondocId": "2f45728b-8019-41f2-8b6c-78b54957ff65",
               "bodyobject": {
                  "jsondocId": "bb390b61-bf9c-4a5e-9bd2-d9193e8fce1d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User annotation"
               },
               "apierrors": [
                  {
                     "jsondocId": "8dcdc73b-02e3-4176-ae6e-763f56a5d733",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b7fe3443-1d83-4338-86d3-bb0854091b98",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a1dc4b4e-8aa7-48b3-bfb0-4e7d61c478be",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "aefe1645-976f-4f5a-9817-cbe068b60722",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "55a8b3f6-9dfb-4d0a-8d75-96fd1ca53493",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/userannotation/{annotation}/comment.json",
               "response": {
                  "jsondocId": "1e3f63db-1c2b-40d8-bc25-5fb2dcb4b3a6",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "0cf870b3-0d69-401e-b475-c782770c76e2",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "0f48abca-1634-4500-ad83-880333d45dcd",
                     "name": "terms",
                     "format": "",
                     "description": "The annotation terms id (if empty: all terms)",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4c01d10f-a026-4279-8a5d-f4391cff58e8",
                     "name": "users",
                     "format": "",
                     "description": "The annotation users id (if empty: all users)",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d4c7a2c9-7945-4669-8354-655bfcabf821",
                     "name": "images",
                     "format": "",
                     "description": "The annotation images id (if empty: all images)",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1b579fdf-ebed-4fd4-8f6c-1f1e0940d110",
                     "name": "afterThan",
                     "format": "",
                     "description": "(Optional) Annotations created before this date will not be returned",
                     "type": "Long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e1ea74aa-7216-4a61-9dc4-59bb972cd318",
                     "name": "beforeThan",
                     "format": "",
                     "description": "(Optional) Annotations created after this date will not be returned",
                     "type": "Long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4ca5d522-8605-40a0-9af6-9421096110a8",
                     "name": "format",
                     "format": "",
                     "description": "The report format (pdf, xls,...)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Download a report (pdf, xls,...) with user annotation data from a specific project",
               "methodName": "downloadDocumentByProject",
               "jsondocId": "0d4d846b-c1a4-4189-97b9-f054b430100a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "9f6c1d7c-0c70-47ed-ad8e-59c749c28244",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f8384c1b-35a2-44cd-95b7-b4f3b0a7ad20",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5a581c0d-6193-40b4-9a94-4e9fd3230bf4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "47e73426-db07-4537-94c9-73ca9488240c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/userannotation/download",
               "response": {
                  "jsondocId": "3696f277-7d47-40ab-9101-90bdbc11ff39",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "93094725-7d39-421a-bbe8-4ba61956e6df",
                  "name": "annotation",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "5fc91e62-d341-46e0-b2ec-393beccc4852",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "dc4022cf-d865-422b-b0b5-274d7b866289",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all comments on annotation",
               "methodName": "listComments",
               "jsondocId": "dcde5374-3a57-4ead-a763-06b9ff3c93f5",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "9aab70f2-24b7-4ff9-9f30-d6aede231405",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "4a3b1937-408e-4f4a-ba4c-6db6e225ddb3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "b83e6a60-4d8b-4c64-8471-55ed13c716e3",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "87ee6c03-6c60-4b04-a6d9-84c26faaa8d9",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/userannotation/{annotation}/comment.json",
               "response": {
                  "jsondocId": "4de3836d-b1b5-4c6e-b765-736139db5782",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "645c8c8e-ba6f-4e29-98a4-3b610c2ab92c",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "7485b05f-839a-4faa-b519-1d26e6bbcdf4",
                     "name": "type",
                     "format": "",
                     "description": "Type of crop. Allowed values are 'crop' (default behavior if not set), 'draw' (the shape is drawn in the crop), 'mask' (annotation binary mask), 'alphaMask (part of crop outside annotation is transparent, requires png format)",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5767fcff-1a1e-444a-839e-e50b6b38fb5e",
                     "name": "draw",
                     "format": "",
                     "description": "Equivalent to set type='draw'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "47baf40c-4d98-4651-8123-794549706064",
                     "name": "mask",
                     "format": "",
                     "description": "Equivalent to set type='mask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6c951d17-1511-4b99-9b3f-aea5503460fd",
                     "name": "alphaMask",
                     "format": "",
                     "description": "Equivalent to set type='alphaMask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2bd7a331-b0fa-468e-88e2-9944119ecc63",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ec330ee7-b5a9-4212-a457-3d994c0f07f8",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "096a6a45-25fa-46d9-9ce8-d79ff8d1be43",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "11e3811a-ef66-40e0-85a4-2c171c3cdd4f",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3c1dacd2-0612-43ac-974f-285967d44482",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "789401a8-e101-4237-a1f1-01b7fa2f9ea6",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8f7b1e0f-f5f1-4e59-b631-6d6e6bfd9f90",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c8cd96b4-0757-4b5f-8869-a59135524118",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b3665f09-f0d8-46b2-b2d3-917404631f25",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a crop of a user annotation (image area framing annotation)",
               "methodName": "crop",
               "jsondocId": "7e7d4424-d7b6-4296-96c1-a908b3321d95",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "9ba68268-f51b-4509-9c3a-fa7bd7295184",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "fb49591d-38fd-4227-bc82-14c356cf7f3b",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "969d3d8a-2978-40b0-9861-434fdc075529",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "be93a481-7453-4d82-bc24-8d9c79b3785d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/userannotation/{id}/crop.png",
               "response": {
                  "jsondocId": "38ec9a29-a99a-44d0-b882-8e32e466e953",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "3a8db608-abde-4aab-a4c0-695e0c432708",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "97f20678-777d-453e-a5af-8513dc77147c",
                     "name": "type",
                     "format": "",
                     "description": "Type of crop. Allowed values are 'crop' (default behavior if not set), 'draw' (the shape is drawn in the crop), 'mask' (annotation binary mask), 'alphaMask (part of crop outside annotation is transparent, requires png format)",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "99017f3f-b2ba-4074-91c0-8dbef6094a61",
                     "name": "draw",
                     "format": "",
                     "description": "Equivalent to set type='draw'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "488ba594-703e-4b0c-8e07-00f19be3ab62",
                     "name": "mask",
                     "format": "",
                     "description": "Equivalent to set type='mask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7a30b8b9-b678-4b08-a788-b1265a5b7703",
                     "name": "alphaMask",
                     "format": "",
                     "description": "Equivalent to set type='alphaMask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "030443ca-c89e-46a8-be17-ffece1b88fa4",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2f7ff572-0499-47bd-b437-f200ec525545",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f4d76552-755a-4387-924d-5ea60679818a",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e74b4134-5ae0-4a4e-bed1-6b1fbdd71eac",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "88b25d94-780d-44b6-9469-f6e6d33defd3",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "438a337f-7637-4e86-8a70-8f2e65b99b31",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b5198eb7-f6d6-492b-9408-a28c4e2aa69f",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "785d92b4-4220-4676-acde-cf1e7f475131",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f0582596-2bd3-4920-ab07-2ed032368c4a",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a crop of a user annotation (image area framing annotation)",
               "methodName": "crop",
               "jsondocId": "ff7bf491-57ee-4c3a-9f18-dc15099ca9ed",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d893cd5a-a17e-441d-af72-b16d674238e0",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d59af2e6-ab5d-4fbd-b46c-c6269caf5df3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0baf8121-7e7f-4c12-8875-b36f93760be4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6f14a1e3-ad57-4791-b6ee-911943e74796",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/userannotation/{id}/crop.jpg",
               "response": {
                  "jsondocId": "fd25c919-340a-4e9d-ae7e-03ea2f788f33",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "2c06cd98-6c86-4747-8f8c-85c9a9d30aba",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "1d170086-1375-48d9-88db-7ce4aee93ecc",
                     "name": "type",
                     "format": "",
                     "description": "Type of crop. Allowed values are 'crop' (default behavior if not set), 'draw' (the shape is drawn in the crop), 'mask' (annotation binary mask), 'alphaMask (part of crop outside annotation is transparent, requires png format)",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "65efaacb-9daa-40bc-b005-c44576fd316f",
                     "name": "draw",
                     "format": "",
                     "description": "Equivalent to set type='draw'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3a8f5058-cb53-45c4-8639-dcbf5808bb0d",
                     "name": "mask",
                     "format": "",
                     "description": "Equivalent to set type='mask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "faa0eb51-ad9c-4595-bba0-93cb7ca7983e",
                     "name": "alphaMask",
                     "format": "",
                     "description": "Equivalent to set type='alphaMask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "80186758-093e-4ca8-ba31-e313569102d2",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ec7de4ba-f5cc-4c40-af6b-01bb957c7fe3",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6d8b7cd6-422b-4012-aaeb-270a15b7a649",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "15425f33-0faa-438c-9ed9-28e414cafae4",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "921c0502-5781-4065-9c03-4116cf31a4ca",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5b69d919-9e35-40d8-ab94-1220b9963bcc",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "cd15f17a-15e1-4017-9968-281c177c1ff5",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3bf3e468-658e-4e7f-aa75-68488ed7295b",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "73f184c4-e12a-4d6b-9b8a-954bdc1623f8",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a crop of a user annotation (image area framing annotation)",
               "methodName": "crop",
               "jsondocId": "f5d5120e-08cb-4442-8afc-af05d121471a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "9bb4af44-7b49-4f49-a395-b43d77b8282c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "3474e4cf-5371-4503-9240-81442d307f48",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d4abeead-7c7a-4849-872a-158fb8285b73",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "00767d6a-7aa8-4b09-bf7c-6cf46c2d6797",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/userannotation/{id}/crop.tiff",
               "response": {
                  "jsondocId": "183b03bb-058f-46c2-8898-dda8dfea0916",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "bf22fb63-bb28-493f-9b4f-5b72cf8d8b1d",
                     "name": "id",
                     "format": "",
                     "description": "The user id (mandatory)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b4e146bc-fad0-46e0-b9de-ebbc58100567",
                     "name": "project",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Count the number of annotation for the current user",
               "methodName": "countByUser",
               "jsondocId": "e3b03218-51c3-4482-aeb6-793b48d4cb8c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "5982674f-85b1-42de-b4df-31e2c99e754f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "41415d1e-b999-480c-9c8d-faac3ec55fd3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "3dd440e8-389a-4478-8498-29862c372fc5",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7b54454e-70d4-4ed3-9a49-cc84f8fb65e3",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{id}/userannotation/count.json",
               "response": {
                  "jsondocId": "bd0c37f3-c75c-46d8-bbb1-3ba12092c816",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[total:x]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "b7e71204-3046-4cee-ba2d-795b53e94b20",
                  "name": "POST JSON: project",
                  "format": "",
                  "description": "The project id where this annotation belongs",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "38775b57-ad1f-44c7-80c7-d20ff3dfcb08",
                     "name": "POST JSON: image",
                     "format": "",
                     "description": "The image instance id where this annotation belongs",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0d904b4e-a307-4b7c-b2cd-e619d9a01fbd",
                     "name": "POST JSON: location",
                     "format": "",
                     "description": "The WKT geometrical description of the annotation",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "31cb6010-3fa2-4722-a830-062b669c0eda",
                     "name": "POST JSON: term",
                     "format": "",
                     "description": "Term id to associate with this annotation",
                     "type": "long",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f54a76ca-4d50-4fb1-a880-ceacc561bbcf",
                     "name": "POST JSON: minPoint",
                     "format": "",
                     "description": "Minimum number of point that constitute the annotation",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4c0ea5fd-6c29-412e-b7bd-df7aaa94084f",
                     "name": "POST JSON: maxPoint",
                     "format": "",
                     "description": "Maximum number of point that constitute the annotation",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Add an annotation created by user",
               "methodName": "add",
               "jsondocId": "40b03ff3-cda1-4cb5-a333-f5080890b279",
               "bodyobject": {
                  "jsondocId": "c94ecda1-fbe2-42b5-bfb2-d48640a6e6e4",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User annotation"
               },
               "apierrors": [
                  {
                     "jsondocId": "8c5d386f-9fc8-4f97-8455-6ed902ed5945",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ebdf3b79-65d8-4cb5-86a4-f0959463d94f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "f3829da3-6368-4ab7-a7b0-b2026282e533",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b994ad35-6e7f-4e62-8710-408fdf381940",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "a04bdaa1-4fa9-4e3b-ae92-61752821c728",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/userannotation.json",
               "response": {
                  "jsondocId": "01a370c6-21f4-418f-a282-9cc5a71d65ab",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User annotation"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "22b89fbc-bd60-4e61-b65c-f936732a971d",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update an annotation",
               "methodName": "update",
               "jsondocId": "e92d1ba3-579a-4d31-9052-05c9d449948a",
               "bodyobject": {
                  "jsondocId": "03b2614f-41aa-41e6-9094-1233105abe12",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User annotation"
               },
               "apierrors": [
                  {
                     "jsondocId": "8c6ec4e3-5542-4867-b967-5d97b72ec218",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c177cac3-bf0a-487c-bcf7-3afa27ca0fd3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "354da4bb-03db-4cc7-9e11-e5810330bcff",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "cfac7fe5-1337-4a6f-980d-ceae928d91de",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "4220142a-24f3-4d57-af60-26b0d094c675",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/userannotation/{id}.json",
               "response": {
                  "jsondocId": "65c4cd73-bbe9-413d-9ccd-819cd9ff9063",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User annotation"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "8762affa-8229-4530-ae08-003193311956",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an annotation",
               "methodName": "delete",
               "jsondocId": "f2f13b93-d267-4f53-ac57-c8836c68de9a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "764b9168-5859-43e8-b3ae-e45732ad1f8d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9902740a-b978-4b24-a5c3-91f2c1d00814",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "21303175-503f-48dd-a5cd-4b600204f934",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "407889e8-9ac4-489a-b234-45c55df43725",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/userannotation/{id}.json",
               "response": {
                  "jsondocId": "74ed817d-840e-451b-b058-642022e7bc8c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "0f393c8b-81df-4d44-8c9c-54d630f66311",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1953ea54-0bd4-404c-963a-f52ca4223d0c",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all annotation (very light format)",
               "methodName": "list",
               "jsondocId": "0efa0eb2-c892-4117-abc5-7de2eb62e55e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "37cb5744-b7e4-4a3d-82d7-94d1f42a191a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "0d4a1a1b-6051-4bf3-b176-f5a1e30f78af",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7b46b961-b02f-4fd6-b1b3-17d903ae7aff",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "4f2dada5-e242-4eb6-857b-f4c1461d72a0",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/userannotation.json",
               "response": {
                  "jsondocId": "db205e0c-a0b6-4604-996a-e6fd88a46953",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Ontology | user annotation services",
         "description": "Methods for managing an annotation created by a human user"
      },
      {
         "jsondocId": "88ba9839-4893-4b07-bbe7-7a38c87ff5d2",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "cac98f48-7103-4dc4-9d24-4f6f89752a02",
                  "name": "project",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "0099e6f7-c18c-4324-a791-6db8032cefd5",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5edf9531-8062-4652-bd09-508ba421b563",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all image filter project for a specific project",
               "methodName": "listByProject",
               "jsondocId": "fbd64a11-aa9f-470c-a7b8-076dd1344f02",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ee738be3-7d12-409c-b37f-9bd9d43cf95b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "3c28bd22-dd1c-41e9-8e75-2ecb3e74afb1",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8a11edff-07cd-44e4-b83b-7269c465a8fe",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "da7a1e8f-afa2-4aa6-aabb-b76a57b91443",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/imagefilterproject.json",
               "response": {
                  "jsondocId": "63e3af08-f904-422f-99e9-163afb17f017",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image filter project"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add an image filter to a project",
               "methodName": "add",
               "jsondocId": "1ae9491a-7456-4e1d-93d5-2d5a9c248b29",
               "bodyobject": {
                  "jsondocId": "3a8df0af-49d7-4c6b-8d32-00d9f788315a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image filter project"
               },
               "apierrors": [
                  {
                     "jsondocId": "01008d1c-c4f5-43d6-a7dc-a3047751bac4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b6ea12ff-96b7-4fe3-9230-bbddd3d46adc",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "26c26653-9016-4017-aba1-23ec19477005",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "4840a2d8-81d9-4eec-92aa-ba413155d658",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "18b107bd-e255-4593-952a-8e445a9f3984",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imagefilterproject.json",
               "response": {
                  "jsondocId": "3005e72c-40ac-4d8b-b4d8-df66ad4a7bb8",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image filter project"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "4d2a3979-8f6d-4e28-8e59-d79e49398948",
                  "name": "id",
                  "format": "",
                  "description": "The image filter id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an image filter from a project",
               "methodName": "delete",
               "jsondocId": "a26ca2d5-6601-4d9e-a333-f48dd3a05224",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "0e06652e-e198-4bbb-8ef8-199d38677e3c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "bcdf159a-5a7e-4022-85d2-d291b2bb806a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "eb07c5c7-2b02-4235-8b11-68fe9849c0bf",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "787d8538-114e-48ec-8106-d31e92615319",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagefilterproject/{id}.json",
               "response": {
                  "jsondocId": "75dfc646-9214-43d6-9865-3e0ffd1f5302",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image filter project"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "4d1535a6-64b1-440e-9620-a97d25e68f3d",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2e8e6dd1-3ee8-480c-95b4-0c86f078b237",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all image filter project",
               "methodName": "list",
               "jsondocId": "f0e7dcee-6142-44d7-82b8-aeb17ba96525",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c3c67bda-d710-430e-81ae-c03aceff5466",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "4eb44c15-0631-4d12-af6e-6952661e4b34",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7748a5dd-702d-45f0-b9e7-13cd415fb3a7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "8897ef77-f439-4b5c-a2a9-838d0765c041",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagefilterproject.json",
               "response": {
                  "jsondocId": "89c2a6c7-6eca-425e-9258-63beeab4a644",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image filter project"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Processing | image filter project services",
         "description": "Methods for managing image filter project, a link between an image filter and a project"
      },
      {
         "jsondocId": "13976cba-36ce-4e88-90d0-e0f53cf8796a",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "559e68a2-7744-4b7f-9892-4bbc622490a4",
                  "name": "id",
                  "format": "",
                  "description": "The image filter id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get an image filter",
               "methodName": "show",
               "jsondocId": "1cc54ed1-8721-423a-b727-004111decf22",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "148b7c63-d232-4931-bc56-87ce9b0fa1d4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "390f0c65-0c0e-4426-a5c1-942892881f73",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "fbf34b72-609d-405b-920b-c66ff7a93319",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "89d8313d-69f0-4c21-94b9-f4aa46b49772",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/imagefilter/{id}.json",
               "response": {
                  "jsondocId": "83bb7da0-355a-41c2-9a1a-9d754c709888",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image filter"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new imageFilter to cytomine.",
               "methodName": "add",
               "jsondocId": "bc33495d-d1a4-44fe-a266-1c42ff0bbd07",
               "bodyobject": {
                  "jsondocId": "a50c6a6b-102c-41b5-8bf8-96d91e857cfc",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Image filter"
               },
               "apierrors": [
                  {
                     "jsondocId": "52d01bf2-efe5-4070-ba2c-1b9ec57abebc",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d627865f-3ca5-42f3-b4a6-98be451cb86f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "b5ab003c-1c80-4c89-990a-930fb3567fde",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "883a4c37-1b82-4306-bf9f-547df749d2aa",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "549b0b88-ffc1-4d36-b4d6-f1b50d918815",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imagefilter.json",
               "response": {
                  "jsondocId": "d102411a-d751-4e60-9393-8ee1f01c7712",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image filter"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "cb5f4159-69e3-450a-8134-b08cb286deef",
                  "name": "id",
                  "format": "",
                  "description": "The imageFilter id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "5323fa1b-f429-4f1f-8d6a-9fc0a951ef2c",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f393715f-b5fb-4d6a-8543-a56d5d067541",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "DELETE",
               "description": "Delete an imageFilter.",
               "methodName": "delete",
               "jsondocId": "5d7343cf-f430-4dfb-a938-befa8ca75339",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "e4e0295e-cca8-4891-b4c7-58a54d45a691",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ed512fa0-be73-495f-8217-83facc0c8e36",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a879629e-7be0-45cc-94bf-d85461911b47",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "2bb99ba0-d4ad-475f-a52f-61f23e0c3d3b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imagefilter/{id}.json",
               "response": {
                  "jsondocId": "e3c827fa-eb73-452f-9396-7bb182188093",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image filter"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "8fe425bb-6c62-4575-8d94-839413aca377",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7a68b8f1-da4b-4e1d-a1e8-0da6c5529eab",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all image filter",
               "methodName": "list",
               "jsondocId": "164e9e99-fb7d-4bba-b88e-3b33dc686ceb",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "94aa1375-1832-444e-a221-2a4c8d643ec8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c94af920-6ed3-46ca-a9af-b5123ec6006a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0c563ad4-5a73-4161-84d9-62a3c068a1e6",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "3c24db6e-297e-4f23-913e-30a700e26e5b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/imagefilter.json",
               "response": {
                  "jsondocId": "f00c583c-12d0-410e-b555-5663250664cc",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Image filter"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Processing | image filter services",
         "description": "Methods for managing image filter, filter that can be apply to a picture"
      },
      {
         "jsondocId": "9898428c-fc1a-4cb0-9cda-8694d781779c",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "c841abaa-1eba-4915-92f4-d518b704a874",
                  "name": "id",
                  "format": "",
                  "description": "The job data id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a specific data file info",
               "methodName": "show",
               "jsondocId": "b43dc88f-7ac5-4cbe-bf65-60c1c6d53921",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "f9038e21-c6a4-48df-bf73-06f35fa26dbc",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "99d24215-d318-4720-a8c1-298676b686eb",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d3006727-3ea6-4d78-8156-dd851924ffc2",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "da804542-1402-43c5-bed7-7b4bbb64d557",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/jobdata/{id}.json",
               "response": {
                  "jsondocId": "3f2cae57-3a19-4dff-8a7b-4759339416a3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job data"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "4c72e407-6e45-40a0-8dca-ab1cd024bdb7",
                  "name": "id",
                  "format": "",
                  "description": "The job data id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Download a job data file",
               "methodName": "download",
               "jsondocId": "4976b6e2-533f-4686-a3af-5662c17a6e8c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "f27b69c3-b72f-4292-9470-54df94013ef3",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "44890d1d-a2ee-401b-83f6-37981b11cba4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8cedf4a5-e1e2-436e-9b31-49aa0a4b4664",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a88ca323-76f2-42e9-b165-302220fc6e97",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/jobdata/{id}/download",
               "response": {
                  "jsondocId": "a3dae850-a9cb-489c-8959-c71ab2e16379",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job data"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "508ae407-8134-4281-80db-c0c1f436e8c5",
                  "name": "id",
                  "format": "",
                  "description": "The job data id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Upload and add file to a job data",
               "methodName": "upload",
               "jsondocId": "7105dc99-0d17-4dcf-af07-7aa81dce2f2b",
               "bodyobject": {
                  "jsondocId": "3b446801-8b6e-43ac-89bd-b6299074c97f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Job data"
               },
               "apierrors": [
                  {
                     "jsondocId": "55f79e7f-b0cf-40f6-86c5-1989f72b8e4d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "fab5202e-7ded-4e5f-98b3-e6a411ecfbc3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "26b08d60-4c47-49f5-a68c-c32f1d0ff7de",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "5a30afba-ed19-4da4-a97f-47b44e3f7ffc",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "1033fd12-3fd2-490d-a234-10c7b50ebaa2",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/jobdata/{id}/upload",
               "response": {
                  "jsondocId": "b7d494d4-fd34-4a1b-8644-e2f8c2c34fef",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job data"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "bbbd5e94-a5e3-4f86-bc35-963440c64390",
                  "name": "id",
                  "format": "",
                  "description": "The job data id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "View a job data file in the browser",
               "methodName": "view",
               "jsondocId": "d6cb8c29-ac9d-4cbb-ad96-3a98b3f98010",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "eb4cfce6-e6e3-4617-950c-f8d8e934c96c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "917afc04-cdf4-4b04-ab23-dabf90ea2115",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7c591e93-f39b-4f76-b83c-f23ec8b49202",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "85988e60-358a-4274-ad29-f64d9c02fb05",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/jobdata/{id}/view",
               "response": {
                  "jsondocId": "0633a35d-7f62-415e-a7ae-bd1e3d955c7d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job data"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "c1901ced-8a4c-4416-a9e8-638092132182",
                  "name": "id",
                  "format": "",
                  "description": "The job id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "7f3101c2-6911-4667-87cb-579336db8970",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a193507a-6342-4ac2-aaa0-c31c929743c4",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all data for a job",
               "methodName": "listByJob",
               "jsondocId": "90cfd7ab-0049-4ec6-a99f-ae74091c7b3e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "514401a8-203a-471a-965d-db3cd2efd621",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b7495bff-224f-4dc9-897f-0e8fe50ec7e3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a08ad255-6dc1-4bd9-a575-fbd2ce238ed6",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "20aba4b9-9946-4849-84ed-fb18d2a1b38d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/job/{id}/jobdata.json",
               "response": {
                  "jsondocId": "077422b4-6ab8-4f02-a9a5-cc98f431b348",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job data"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new data file description. After that, call then 'upload' action to upload the file",
               "methodName": "add",
               "jsondocId": "b803d3f7-4b7e-4f59-9628-b9623687f78f",
               "bodyobject": {
                  "jsondocId": "08c929c6-5e9d-499b-b89f-ab855bb4de77",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Job data"
               },
               "apierrors": [
                  {
                     "jsondocId": "f3eeeffa-37da-4c70-a498-fe080bdc1581",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "43572f26-c958-4096-867a-457d97050de4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d4b42c6e-b93d-430c-a6f0-c39933f399ec",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "3ed8a716-ffd3-4fba-abe9-5967885ac775",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "7f97ca5d-8e18-4334-858d-e16043408132",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/jobdata.json",
               "response": {
                  "jsondocId": "bb61bd58-5eac-4d76-b399-742c70b59045",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job data"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "d216738c-ffd6-4a48-88e2-7891fcd972b2",
                  "name": "id",
                  "format": "",
                  "description": "The job data id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Edit a job data",
               "methodName": "update",
               "jsondocId": "17dbd7d5-982b-44ba-ae34-5357457af65e",
               "bodyobject": {
                  "jsondocId": "975d63b2-cbc8-47cc-ae51-97df1ebe4db3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Job data"
               },
               "apierrors": [
                  {
                     "jsondocId": "e7b52893-b67e-403b-ba3e-1851229ff755",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "77af8de4-dddc-4f98-a8ac-30cbbfab8497",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "426bdd43-ac9b-47f2-849c-dd5a683a633a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ae390504-9086-490c-aa32-9590c11bc011",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "bf1fd352-6cff-46e6-98b3-795ec7dd848e",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/jobdata/{id}.json",
               "response": {
                  "jsondocId": "ad6b0f75-980b-4cb2-8fe7-8e5d7cdeb858",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job data"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "82164c77-1653-439c-acd1-de89b2e5e539",
                  "name": "id",
                  "format": "",
                  "description": "The job data id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a job data",
               "methodName": "delete",
               "jsondocId": "8d6f107e-9ab7-4921-bf93-43727924afa4",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1da4dc9b-d535-4850-8596-478d09e1bf44",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "1689343d-d179-4d4b-a026-cd10a6c3b89e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "9ee8bd6a-7f54-4054-b6e9-885c20974589",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ab7171fc-3285-4699-9d2e-0956c1a3876c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/jobdata/{id}.json",
               "response": {
                  "jsondocId": "2b0f1537-ad90-4b0e-9901-2f571ec672fe",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job data"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "e33c6edb-bff5-4bc7-a32f-53ea31b26259",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a6e5cd68-4004-44f3-a643-dee539fbf226",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all job data",
               "methodName": "list",
               "jsondocId": "498836ff-2b6c-42e7-b8e1-611627806aeb",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "6743cf34-0ab5-4619-af09-5f9270168f2a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e87fd9b8-049e-479f-948f-f867be71eb85",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a41873f4-62e6-4d72-a369-60055086735a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f6a9c8db-e915-464f-bcd1-5fa1e7ddd28b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/jobdata.json",
               "response": {
                  "jsondocId": "2eaa30fb-7232-4a10-8c1a-aca6a2cecc3c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job data"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Processing | job data services",
         "description": "Methods for managing job data file. Files can be saved on filesystem or in database."
      },
      {
         "jsondocId": "6719f796-bd6d-4514-8de4-d34554a7c624",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "2b939243-f3ce-4bef-b32c-35d349f2eebc",
                  "name": "id",
                  "format": "",
                  "description": "The job parameter id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a job parameter",
               "methodName": "show",
               "jsondocId": "550117b9-7e27-4883-962c-7f7c995b4298",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "8e29a4a0-9fd8-4afc-b3a8-82fc6de8c935",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "bbf66141-6dc4-44f7-b3d6-7478c1372130",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "cfdc19cd-9014-4dee-9904-298b9c4a08b7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ab75be7a-4675-40b9-bc4d-bca857fb10c0",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/jobparameter/{id}.json",
               "response": {
                  "jsondocId": "66a14a56-da84-4183-8eff-fa1eda30358e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job parameter"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "f8d83de0-a19b-44f3-86dc-1da968c56dd1",
                  "name": "id",
                  "format": "",
                  "description": "The job id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "33b30105-64cf-469e-87d5-9b50c6aef745",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f75a8b8e-34ba-43af-bd6f-83a4109f51a7",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all job parameter for a job",
               "methodName": "listByJob",
               "jsondocId": "280e766e-74dd-419c-a8fe-c9ec29974bab",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ad6c428a-4b06-4e9c-a663-5a3a5fc3215a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c88ed6d4-b7a2-4e7e-baea-159de3ec43ef",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d8719ac4-66e9-4e08-912f-40abaf477e49",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "508709a8-30cd-44b5-bb92-c2daadc5b71f",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/job/{id}/parameter.json",
               "response": {
                  "jsondocId": "ac8e897c-a8ca-41e4-9225-8c2a148e5aad",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job parameter"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "9d1a91fa-c39d-4e33-9e1a-33f33fdb91ed",
                  "name": "id",
                  "format": "",
                  "description": "The job parameter id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new job parameter",
               "methodName": "add",
               "jsondocId": "a25b4fdf-1d47-47cf-8195-0b5147c87fc5",
               "bodyobject": {
                  "jsondocId": "9162abc5-8e82-43a3-8045-d859136c5adb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Job parameter"
               },
               "apierrors": [
                  {
                     "jsondocId": "b6765356-c4cb-4da9-bc5e-5e6fe687a674",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7d1a23d4-5166-48b7-89fa-8fa71744783e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7dfc10f9-d69a-42a9-9333-2f4daa0cacb6",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "8bc8dca1-fd0d-49fb-84b1-348deffed9a4",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "47571942-6a63-435d-be0a-7c38806516f9",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/jobparameter.json",
               "response": {
                  "jsondocId": "76b12c87-76ef-4093-a912-daed8b585cc5",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job parameter"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "c93653ff-dbe6-43d4-b8d4-53c39eb90601",
                  "name": "id",
                  "format": "",
                  "description": "The job parameter id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a job parameter",
               "methodName": "update",
               "jsondocId": "d22c963c-64aa-4820-b87c-e58652432d8a",
               "bodyobject": {
                  "jsondocId": "22f5a338-f350-4e91-989e-80745182664b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Job parameter"
               },
               "apierrors": [
                  {
                     "jsondocId": "5581e601-b0a5-49df-8e03-3e1b863ecbab",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "aa4d14c9-a54c-4400-b91a-b7a5663a279e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "14055350-ffab-423e-8f25-849eb473edb3",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "848e4c44-4973-4e30-abad-c21c947b9f23",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "dcc9f130-ff56-45a2-97d0-f390dc70b575",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/jobparameter/{id}.json",
               "response": {
                  "jsondocId": "77a29ec2-8e1d-4115-b7b1-1ddc4a3edb2b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job parameter"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "ec0c4deb-f7d1-4bf8-9d62-ecfb5fb3c162",
                  "name": "id",
                  "format": "",
                  "description": "The job parameter id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a job parameter",
               "methodName": "delete",
               "jsondocId": "69cf99d1-f595-4907-8a6f-357f466ebca7",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "2c1f23b5-b97c-41e3-9a9f-5c525c350287",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "1cb4412f-773b-4446-9437-64f6a97a1215",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "aef8e06f-c9ef-4793-9684-2f7b8c98491f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "68308b24-408c-4102-9d8b-51ecf6197674",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/jobparameter/{id}.json",
               "response": {
                  "jsondocId": "0758b4a5-27dc-4648-bc9e-3d7333d15345",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job parameter"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "60578c47-5258-43a9-a591-eb517114e974",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6176b7e2-d205-4cdf-aea3-cf8dd6e6f72f",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all job parameter",
               "methodName": "list",
               "jsondocId": "d1ca0841-d375-414b-91e4-1210eee9009e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "fc543e94-831c-4d14-87ac-a1f8da081187",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b573ab60-bbf6-45bd-9628-cf7e1272e285",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "1b408b77-0667-4fd8-85fe-f00c99cba833",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d2a6172e-9e8e-4733-b95e-49570af442e1",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/jobparameter.json",
               "response": {
                  "jsondocId": "ca60ac45-0d06-40e8-b2ae-8bbac23459d9",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job parameter"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Processing | job parameter services",
         "description": "Methods for managing job parameter. Each software may have some parameters (e.g.: cytomine project id, number of thread,...). A job parameter is a software parameter instance with a specific value for this job"
      },
      {
         "jsondocId": "fbfa2403-d7a8-4a99-b0eb-869dd466d82d",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "b740eee3-9e7d-4335-86ba-83854b032f26",
                  "name": "id",
                  "format": "",
                  "description": "The job id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "769283ee-c838-42a8-8141-aee634c2715d",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "43f5f2f9-482f-4897-8fbe-6f203fc48eaa",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a job",
               "methodName": "show",
               "jsondocId": "cf4398ed-0bdf-46c1-8151-316f861fe458",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d99cb2d2-cea9-4079-a261-b9f5bbec5660",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "336f4950-81a1-4629-abfb-b2a8e3c6d192",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "1a9ba647-5408-467c-ad47-98d59b15a07f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ff542692-cb37-45d4-9141-1c9ff2e6c106",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/job/{id}.json",
               "response": {
                  "jsondocId": "20b3c97a-9763-4aeb-90af-0d2b3bf8f5d0",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "b3432a29-3789-4298-a1a6-e185e067a970",
                     "name": "jobId",
                     "format": "",
                     "description": "The job id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "741534d1-49a8-4acf-ba40-fea0651e4379",
                     "name": "processingServerId",
                     "format": "",
                     "description": "The processing server id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Execute a job with a given processing server",
               "methodName": "executeWithProcessingServer",
               "jsondocId": "8193b430-bdc2-4cea-b98a-8a88f71d9a3d",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "e999e0f8-af8f-4848-89ea-5cf2ea26853f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "0ee30093-846f-4894-b559-f2db625d9905",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c9616372-56dc-4a3a-a827-2d2cfc1390cf",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a8bcc9f2-0626-4e28-aa36-53bfb3fb050d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/job/{jobId}/processing_server/{processingServerId}/execute.json",
               "response": {
                  "jsondocId": "7d0f0ad0-4a54-4399-9cd3-de7e0eec0d79",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "c355644a-5953-4884-a59d-a22a64c4b550",
                  "name": "id",
                  "format": "",
                  "description": "The job id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Kill a job",
               "methodName": "kill",
               "jsondocId": "79222670-220f-44cf-b29f-3c0f1b1db279",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "f834068b-c24f-49e9-b156-d22535291849",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "0ce64173-8e4c-41fe-b178-fbe38ce49780",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "097b2873-4cc4-45cf-9030-bc8ebe549472",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "effbe492-ba8f-4e2c-8a78-f7f422fe9c7c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/job/{id}/kill.json",
               "response": {
                  "jsondocId": "1d048acf-27f1-467f-8694-a254054244a4",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "8433b1d7-c698-4705-a045-c7dbe8c631d0",
                  "name": "id",
                  "format": "",
                  "description": "The job id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [{
                  "jsondocId": "82eed366-0e75-49c2-a1df-716a5c197849",
                  "name": "task",
                  "format": "",
                  "description": "(Optional) The task id. This method is heavy, so we use Task service to provide a progress status to the user interface.",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "verb": "DELETE",
               "description": "Delete the full data set build by the job. This method will delete: annotation prediction, uploaded files,...",
               "methodName": "deleteAllJobData",
               "jsondocId": "726e980c-fcb1-4fd8-8778-92dfc296ed7a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "2dd5af98-c5a5-43a3-b28c-6aa3f199808e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ed43ff14-c86b-43d4-8c85-3623fae23fff",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "cb9ae2e7-a26e-4443-84dc-ee3259543cab",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f191ce00-1a32-4ac0-b2f3-2e11e7213682",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/job/{id}/alldata.json",
               "response": {
                  "jsondocId": "52167f31-25f7-4add-9235-80d10578eb52",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[message:x]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "08bdfad0-c7c7-43e1-9490-8b3a32f14fa9",
                  "name": "id",
                  "format": "",
                  "description": "The job id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [{
                  "jsondocId": "c9455b04-c3f4-48d5-8281-7001387bdd89",
                  "name": "task",
                  "format": "",
                  "description": "(Optional) The task id. This method is heavy, so we use Task service to provide a progress status to the user interface.",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "verb": "GET",
               "description": "List all data build by the job. Job data are prediction (algoannotationterm, algoannotation,...) and uploaded files",
               "methodName": "listAllJobData",
               "jsondocId": "06cb3a07-ab15-4006-b1f7-7a9e55893875",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ccfeba72-8236-4962-9526-551ab3bd2fc2",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e86b0fe4-1384-4d4f-9a6c-2d4691fbb702",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "20b1a51d-ffb0-497c-af0b-e8729b1e1cc9",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "bec54c17-ed13-45f7-b2b8-22358cc2bf72",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/job/{id}/alldata.json",
               "response": {
                  "jsondocId": "8ac92469-d38b-4ea8-befe-5886558416be",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[annotations:x,annotationsTerm:x,jobDatas:x,reviewed:x]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "01363586-6034-4e5b-8abc-0106314505d5",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [{
                  "jsondocId": "4a9be3f3-cd33-4064-8eca-a98a6820172a",
                  "name": "task",
                  "format": "",
                  "description": "(Optional) The task id. This method is heavy, so we use Task service to provide a progress status to the user interface.",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "verb": "GET",
               "description": "For a project, delete all job data if the job has no reviewed annotation",
               "methodName": "purgeJobNotReviewed",
               "jsondocId": "ef07745e-a953-4b39-aff4-d89223a27942",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ee2d6478-9ae9-4beb-986a-5ad285f33f6a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8ee7f0d0-7c7b-4f4e-b0db-98acabf0206d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "40fd961b-2415-4e4a-8101-bf77e7fd8ec0",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "fc96d011-d846-49bf-9268-eeeb4d2e3e77",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/job/purge.json",
               "response": {
                  "jsondocId": "eead42f6-e74a-4b9e-a19a-82bd54afcc96",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "project"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new job and create the corresponding user job",
               "methodName": "add",
               "jsondocId": "59f220cf-c04d-4e13-8a46-264841e27ecf",
               "bodyobject": {
                  "jsondocId": "3e502b91-a13c-4343-9263-938f2b171074",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Job"
               },
               "apierrors": [
                  {
                     "jsondocId": "300673a2-6122-4252-9aa9-07e122f1c857",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f57cde24-2bb1-4ada-90b0-b6ffb166cc46",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "3c5689d1-9ce5-4fc1-ac77-b7a12162fd91",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "0b24a575-1312-4b27-bec0-44f2ec20397e",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "34630b85-4ab1-400c-a519-b22b9531e251",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/job.json",
               "response": {
                  "jsondocId": "b93d3746-6511-4631-a1ac-1fd88dd2b062",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "771b2424-c103-42ad-b110-9ab1eae73ac9",
                  "name": "id",
                  "format": "",
                  "description": "The job id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Edit a job",
               "methodName": "update",
               "jsondocId": "417ef7b7-1700-4720-ae1b-3a4eb4ed2f99",
               "bodyobject": {
                  "jsondocId": "13b4e8ad-cbdb-42a1-97c5-de73e71ed56b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Job"
               },
               "apierrors": [
                  {
                     "jsondocId": "aad993ba-802c-4c51-9c76-b33a60d202c0",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "718412a4-a21c-4dfa-a344-6bc0b4b1367f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "59a7579d-20bb-403f-9168-81a4feb4e464",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "344f43cf-fd05-4fe8-b8f2-a4cd54465747",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "0be72906-d09d-4d1f-b244-d4ef09f78ee1",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/job/{id}.json",
               "response": {
                  "jsondocId": "2d60f3a6-3f3a-4caf-9619-81cca645b56a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "23970ecd-a08c-4eb2-a007-221fc583d051",
                  "name": "id",
                  "format": "",
                  "description": "The job id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Execute a job, launch the software",
               "methodName": "execute",
               "jsondocId": "62175819-8059-4685-8196-eb8856b68cc1",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "93716ddb-bc88-4677-aab3-0edaddb96df8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "327d46c0-ae25-407e-aa54-8250a0af9730",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "b3118da9-a113-472e-bd29-6b1eb275dbc4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c59caa4e-bf4b-49be-ad19-8aa877d234d1",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/job/{id}/execute.json",
               "response": {
                  "jsondocId": "f24de554-684a-424c-9c8a-10d2e47b22ae",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "cdd1232d-a7cc-4a19-a09e-4e989eff7b83",
                  "name": "id",
                  "format": "",
                  "description": "The job id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a job",
               "methodName": "delete",
               "jsondocId": "ae3b18e4-a7b8-412a-9b9f-3bf1b26e850a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "bdf9df1c-82cb-4021-85c1-d6f6226d606c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b370b76f-d6d9-45fa-b4f0-33f714de0df0",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7aeae970-6e57-4ae8-b3ce-2677d6496fe1",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b3b37760-e881-425b-964c-c8c17b83e8f2",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/job/{id}.json",
               "response": {
                  "jsondocId": "0c695f65-1620-44c6-9819-ab3c645dd791",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "1468d376-79d1-427e-9008-ab605a2f25f0",
                     "name": "light",
                     "format": "",
                     "description": "If true, get a light/quick listing (without job parameters,...)",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b8eb8e36-23d5-4efd-bd2f-d7d7e93de256",
                     "name": "software",
                     "format": "",
                     "description": "A list of software id to filter",
                     "type": "long",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "06a9e0c5-2342-4ea9-9bc4-b198e69a069b",
                     "name": "project",
                     "format": "",
                     "description": "A list of project id to filter",
                     "type": "long",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d4b36688-da2d-445c-b7a7-d3838d35d310",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c1ca1565-960c-49aa-9e9b-89525bf37f37",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a list of jobs",
               "methodName": "list",
               "jsondocId": "bc759c07-ffdb-4477-93c0-ba71c4d5c272",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c0119400-717c-4d97-a466-0c584af49bdd",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e20c31b2-0a70-4b36-85e5-10181e11789c",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "63a50d16-e7e4-4e04-8407-8719c63bb432",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e593b0a8-ff2c-4015-99e4-c171a3a6f1db",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/job.json",
               "response": {
                  "jsondocId": "c435b482-9eee-436a-b603-b0e2972a5588",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Processing | job services",
         "description": "Methods for managing job. A job is a software instance that has been, is or will be running."
      },
      {
         "jsondocId": "084d92a9-fe39-46b3-9515-86ece28e501f",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "d3c3ec94-e3a9-496d-8330-163d877e3f9a",
                  "name": "id",
                  "format": "",
                  "description": "The link id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a link between a job and an annotation",
               "methodName": "show",
               "jsondocId": "3f22467f-1a49-4cc8-86cd-458756864264",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c6c99802-5d29-4527-9807-6292063bd804",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8d60c731-89ad-437f-9a91-b5a80aac057c",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a32ff61a-7613-4f7d-96b4-41b8d0152d50",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "8726bef9-87db-448a-a089-e8dddb231a99",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/jobtemplateannotation/{id}.json",
               "response": {
                  "jsondocId": "44922f0e-ade3-4d6a-bf93-32c93356cbca",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job template annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a link between a job and an annotation",
               "methodName": "add",
               "jsondocId": "c8d7cd45-e4ba-4d45-b837-d1d1b311436c",
               "bodyobject": {
                  "jsondocId": "68013159-8b19-4422-8de5-c7e945f887f9",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Job template annotation"
               },
               "apierrors": [
                  {
                     "jsondocId": "1d9941a2-82d7-47a4-aebe-884e794fe941",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7bc5e0bd-c2ad-442f-8d84-8d86eb6c353a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ac698e79-fb3c-4074-922c-198d5b2139fb",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b7060278-ed47-4805-952d-c24e00c55303",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "419188b1-3ffe-4b86-b0ce-0685133f32f9",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/jobtemplateannotation.json",
               "response": {
                  "jsondocId": "3a51bc8c-d6c2-4a22-b560-9b70f897692e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job template annotation"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "6016e712-9247-4d0b-a806-2ec1ae2eec47",
                  "name": "id",
                  "format": "",
                  "description": "The link id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Remove the link beween the job and the annotation",
               "methodName": "delete",
               "jsondocId": "d7a3a294-2275-4241-940e-f95a67b0bc17",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "57a2aa11-c7ad-44b6-a21f-566b0a0ca5e8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8531730b-5d36-4ea1-aff6-76004d70b72e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "58e4c94a-af13-4179-84ce-01c91d3a623f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c6ea8e2f-ae28-4f49-a80e-bc4a693b7c41",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/jobtemplateannotation/{id}.json",
               "response": {
                  "jsondocId": "87c48eff-1726-49d9-a6aa-053b72d7bbdb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job template annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "adc0dc3d-aa54-438d-b7c4-04caac51c804",
                     "name": "jobtemplate",
                     "format": "",
                     "description": "(Optional) The job template id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ba5bc722-6e02-4320-a733-b2ba73fe14a3",
                     "name": "annotation",
                     "format": "",
                     "description": "(Optional) The annotation ROI id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3b81a077-76ba-43f6-9c0a-89754921b56c",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "fe3f45d3-9949-4575-a043-e8e6f16e432b",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all link beetween a job template and an annotation",
               "methodName": "list",
               "jsondocId": "f3fb14b2-db8b-4172-8a00-07da2bf5b4b8",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ee88a653-3734-4fc9-b389-96116c3858de",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "988d8479-e007-40ca-aa8d-7da11972c79d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "340e09fa-254b-4bfe-9da2-77f03706307d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "010a088e-e0d2-4d0c-a6fa-bdcfcc359b00",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/jobtemplateannotation.json",
               "response": {
                  "jsondocId": "3c7cd3cb-2769-401d-9966-fb0849878c90",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job template annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Processing | job template annotation services",
         "description": "Methods for managing a link between a job template and an annotation (roi or other type)"
      },
      {
         "jsondocId": "99ada8bc-42a8-4b95-a0e6-27b1ece90b4c",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "a5dbce79-cc81-4fb3-8d2a-006b5890c459",
                  "name": "id",
                  "format": "",
                  "description": "The template id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a job template",
               "methodName": "show",
               "jsondocId": "b53ea684-9ff2-4f87-8f21-70247ec756e1",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "6b49679b-97dd-4dbb-9c90-c74a6e8dd067",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c764ccb4-3e2b-4904-a2bc-a393ee097bcd",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "588838b8-f1eb-49f7-94fd-23f1b1d95b78",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e5d9187b-b349-437f-adde-5802d96c3576",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/jobtemplate/{id}.json",
               "response": {
                  "jsondocId": "e241d22f-56c6-4bb4-b694-eef70298ad56",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job template"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new job template",
               "methodName": "add",
               "jsondocId": "e87344a2-70fc-409a-87be-2a9eedcd3bec",
               "bodyobject": {
                  "jsondocId": "96ef4a89-e0e4-4129-8adb-e5ed0f9e7237",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Job template"
               },
               "apierrors": [
                  {
                     "jsondocId": "d3e94282-d220-40a8-9b3c-5fe5ce9ff650",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c7a0e6fa-7139-4061-b37c-1f28103a2921",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8002b108-5786-4a05-ace3-f6ead9f5b6ff",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f26f3e39-b20b-4576-b853-262f10665728",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "fdd63756-5ef3-4c1d-a741-086d5869747f",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/jobtemplate.json",
               "response": {
                  "jsondocId": "27cc8db3-a4ed-4208-afcb-0fb56f561abb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job template"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "1a2f64e9-9b2a-401a-b25d-7394190284eb",
                  "name": "id",
                  "format": "",
                  "description": "The template id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a job template",
               "methodName": "update",
               "jsondocId": "ab43596b-27c7-47c0-82bb-e8a6e2146c3c",
               "bodyobject": {
                  "jsondocId": "18f5f74a-71d6-4743-bad4-e37fb00e75cf",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Job template"
               },
               "apierrors": [
                  {
                     "jsondocId": "cb9a1608-5be4-4dfb-9323-00965f2e7dcb",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "1cd82da1-ee76-4136-9918-7bedbe0fec2d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "21fd40af-d067-453d-8a54-3b8608503b5d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "3d49d047-25af-4935-89fc-79435b45a3a2",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "c9b8fe16-dde7-4619-a922-023f2b0fe9f1",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/jobtemplate/{id}.json",
               "response": {
                  "jsondocId": "0732c5a7-53f6-4ea4-a97f-b2ff5d6db376",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job template"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "4a6ec7e3-801a-492b-8a06-42e903e3bcce",
                  "name": "id",
                  "format": "",
                  "description": "The template id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a job template",
               "methodName": "delete",
               "jsondocId": "a90cdce7-4139-4a2a-9fb1-b313054b1efc",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "e0db6731-70f3-4775-aff3-e443f6b9b76d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "22cce96f-54f6-48b6-81f4-3bc0eb6867cb",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "df0c118d-1b36-4b4b-bb02-5823353816b7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "523c3f65-122e-440d-abb6-56259d8c077c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/jobtemplate/{id}.json",
               "response": {
                  "jsondocId": "6675d6a4-a5e3-423b-8559-4e08a696ed64",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job template"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "0076dc5d-00c8-48b9-84c7-6830dd800622",
                  "name": "project",
                  "format": "",
                  "description": "The projecte id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "43d50f16-72c7-44bc-a3d7-eb2efd3875b7",
                     "name": "software",
                     "format": "",
                     "description": "(Optional) The software id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0a008f7d-1a30-4d93-818d-bf3f05f1c97d",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "82bf6af8-ea20-4f5f-bc2c-1f6def362416",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List template for the specific filter",
               "methodName": "list",
               "jsondocId": "bf60b26f-0318-4e1b-8a0b-18f2bc541f2e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "5117107b-93bd-4a88-aa93-a5edac007413",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "706ac1bc-b551-4a02-b9e7-248b1967cb7b",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "f5fb1433-f751-4646-9677-b9c4b28db577",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "1ad1e5a8-31f6-418c-884a-404fd365d65c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/jobtemplate.json",
               "response": {
                  "jsondocId": "0e2636c3-df35-4bb2-b637-050a5f6acb19",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Job template"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Processing | job template services",
         "description": "Methods for managing job template, a pre-filled job to quickly run"
      },
      {
         "jsondocId": "cc2ed308-8c2e-4886-91fa-a246e507f73f",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "9a850459-e584-49cf-afb2-3b8861a14e92",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a roi annotation",
               "methodName": "show",
               "jsondocId": "9ce09a2e-da35-4be9-bc34-15a31533098d",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1860d93e-764d-42bb-9909-ab4aabd6fee5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "2f33764c-b880-4e49-9c30-a82a3276c848",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "df1b70b1-d870-46d5-b5fd-88e4e1301f84",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "fc9467c3-c209-4f2c-9377-4a3a3e97123f",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/roiannotation/{id}.json",
               "response": {
                  "jsondocId": "a12509eb-1fa8-4693-87da-0fae22724698",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "ROI annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "c95512ab-5237-463f-af0b-2a4d2c85250e",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "a2da2b5b-d208-4b7f-bcad-1ccae05a65d1",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1b3daea4-09b4-4ad6-93a1-c58376ff09c4",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "aa2fe303-ebaa-45e7-b96d-fe5b41575a2a",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b4b036d3-5914-4368-9eab-7827c7bc8bf2",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f396a023-f48d-4469-8d7c-a0883938c21b",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4f36ecd0-297b-4e65-9f0c-1d5c2e159204",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "26d46059-59cb-4d9d-884d-46117ddacbbb",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5b4c3458-2228-41d4-bf0b-4c6badf6229c",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8ae3ed13-df11-484b-9905-f76338592792",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get an alpha mask of a roi annotation (image area framing annotation). Equivalent to crop with 'alphaMask' type.",
               "methodName": "cropAlphaMask",
               "jsondocId": "caf4a337-80c5-4907-b976-9dbb44636a76",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "9bb95e99-3ef2-485a-9f7d-8e0c2c4beb6a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "155602f8-7b1c-4d45-9fa7-c9895685328d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "42f88eb4-485f-44e9-ade1-0883b0add0f9",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "afa19e02-67b0-4c51-a907-7034e2072626",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/roiannotation/{id}/alphamask.png",
               "response": {
                  "jsondocId": "fad500bf-693b-4057-b188-0ac24a766019",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "6bfec4c8-d605-487a-adab-d24dddbb4a33",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "cfc99a58-4392-401a-abfb-4a409a4591b0",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9668d57b-20fc-48ac-9319-eacc7f18031d",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "882c935d-c882-4820-86bc-ffd37d203647",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2cb5ea06-8133-42e6-84d0-bbed4742580a",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9e59578d-8343-4978-9fca-1c2e5109cd93",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "575d9376-0342-4554-a3d3-63c894f34b7d",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b575a14b-da11-4cc4-baef-2c8a66abb2fb",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f1981929-f1cd-40b8-8cfe-7889571e1c8b",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7a7f20e6-4ee5-4091-acee-3421761903c1",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a binary mask of a roi annotation (image area framing annotation). Equivalent to crop with 'mask' type.",
               "methodName": "cropMask",
               "jsondocId": "c26f7295-e61c-4117-961e-896c743a8154",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "4a2ce4b1-64b7-487a-a6d7-0b267af78ed7",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8440a25f-59ac-4aa7-8676-826cb06532a4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4fc25742-f5e1-4918-9cbd-5fce5c3fc178",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "598722d5-7932-492f-95e6-9b63f842e545",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/roiannotation/{id}/mask.png",
               "response": {
                  "jsondocId": "34bd9173-5a53-45f7-8c03-ccc7407ea073",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "ef41054a-2087-426f-838a-7d052836bcdf",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "b3fd7616-3397-472b-998f-473a011a5f06",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "160b4ebf-f011-43ef-b36a-c94a2927dea1",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3a37f729-e81c-44b6-9028-9583fed76e4e",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7b3954cb-e927-4959-95d1-4a566e0f3940",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "47311e28-e508-467f-8d9d-da7f55e033b1",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b8abdaba-38f0-4daf-baf6-fbb508c53f39",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5af04ad4-83b8-40da-871f-ae135dbad8ce",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "022415b4-7749-4d13-9d3b-3b81dbc0dddf",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3a98afb8-d40a-4925-b938-0092a9e8e118",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a binary mask of a roi annotation (image area framing annotation). Equivalent to crop with 'mask' type.",
               "methodName": "cropMask",
               "jsondocId": "29b2c298-7db7-4f98-b0ed-d603f3ae0eb2",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "5006356d-e9e2-412a-a0d1-acd3501e9717",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "23a80cb3-5a06-4ac3-bceb-483b1c75e1f3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5e7a52e2-2d16-461a-a6a3-81d923c0416e",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "dddca139-37e8-4223-b9c3-8e3b29cffa04",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/roiannotation/{id}/mask.jpg",
               "response": {
                  "jsondocId": "3caf1993-2486-4d96-8a21-1ba6071e21e3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "c7d8fc70-0ae0-4e85-9699-ca8691aff3d0",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "02434b05-ccad-43a4-97cb-2e4cd9e4fea9",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "52fba23b-18ef-490e-864c-b0b7e5a04abb",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a7d743f5-f42f-4e57-bf3f-2be08dd0ccc9",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2d1ca873-6d85-46a9-9b1d-ddbdff12edf3",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6407371d-f441-4fa4-af23-ef7e5f0f0c3b",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d3560eff-2a84-431a-b590-9e1168fce14b",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "bdec46be-e4fa-4035-b064-1664efeb2007",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "63f31e06-ec81-4698-afe0-078ee223ecb1",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "13c580bd-acb3-460a-a012-df5b9ec309eb",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a binary mask of a roi annotation (image area framing annotation). Equivalent to crop with 'mask' type.",
               "methodName": "cropMask",
               "jsondocId": "c9094e74-e491-4642-a6c1-bb61d6dc9cae",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "6181e7da-e8f8-44bd-888d-fa0ee316a9b4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "79235dc8-cbc0-4811-9904-9d58dbf117b7",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "62926ecc-0618-4d55-a64b-87e197b7b422",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a6152608-f4b0-47f5-a690-6d3043e5fca0",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/roiannotation/{id}/mask.tiff",
               "response": {
                  "jsondocId": "05250cd5-4cc5-40a0-8dba-10d45f600868",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "2c26a5b6-6c4f-43fa-9551-75438da45d4a",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "ef01dbac-6168-4ffb-859c-df472c6dce78",
                     "name": "type",
                     "format": "",
                     "description": "Type of crop. Allowed values are 'crop' (default behavior if not set), 'draw' (the shape is drawn in the crop), 'mask' (annotation binary mask), 'alphaMask (part of crop outside annotation is transparent, requires png format)",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "daf2b244-b845-4a6e-99cc-8b29ed5c7e64",
                     "name": "draw",
                     "format": "",
                     "description": "Equivalent to set type='draw'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f3a5ef76-dfb2-4a3a-b98e-93faa0122e18",
                     "name": "mask",
                     "format": "",
                     "description": "Equivalent to set type='mask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "77cc4095-9ceb-40c4-945a-34d59103bda8",
                     "name": "alphaMask",
                     "format": "",
                     "description": "Equivalent to set type='alphaMask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5d6d008a-0afc-4924-8537-f504d3de44e8",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "83594077-3aa0-49eb-87f3-948085998b6f",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e7f6282d-12c2-4773-93be-d7739001058b",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "99cc7c3b-b35a-4dc4-946d-28b73605ec07",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b28f8835-9474-4226-bdc2-3b23514be7dc",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "680d7364-27c8-4ce0-89e7-92efd9ecaf9f",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "fd893459-90a9-43e3-a778-aaa6a96d31ab",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "59e78ee2-f8d2-4ec6-8fa8-ccad660ba8e3",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1b63eee0-7e77-478e-ae5a-91a85593d2a7",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a crop of a roi annotation (image area framing annotation)",
               "methodName": "crop",
               "jsondocId": "46cff29b-9dd2-4f95-be57-55ab07838968",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "5aa44e84-1772-4632-bfe3-f16434be1820",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "dd508404-133d-46ae-aa78-a515e8a0cf21",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "1fe9bb2b-b417-42de-899b-df60a254f8c9",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "fb4e1908-8524-4a6d-9168-d83606584240",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/roiannotation/{id}/crop.png",
               "response": {
                  "jsondocId": "3864ebc8-aee0-4d14-a8cd-6e8f4c9af95c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "d7fb5dce-c209-4dcb-b3ed-65f51950b42a",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "286cec82-0e80-4c2f-aa2e-77325eceb7f7",
                     "name": "type",
                     "format": "",
                     "description": "Type of crop. Allowed values are 'crop' (default behavior if not set), 'draw' (the shape is drawn in the crop), 'mask' (annotation binary mask), 'alphaMask (part of crop outside annotation is transparent, requires png format)",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e12d8459-f58b-4398-89a7-d086cab10f93",
                     "name": "draw",
                     "format": "",
                     "description": "Equivalent to set type='draw'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1c9fb040-01fb-4de4-a752-128dfcfd08dc",
                     "name": "mask",
                     "format": "",
                     "description": "Equivalent to set type='mask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "009950bb-b0fe-4ef0-89e4-68e06ec0a4d9",
                     "name": "alphaMask",
                     "format": "",
                     "description": "Equivalent to set type='alphaMask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "83611d8a-2660-4be3-8b77-e2d90804b7f0",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4f21f938-2c57-43a0-a937-71b52c119175",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "437c8d94-8c2d-45d0-b24d-f9baf1acfc42",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1622f4b7-2dc4-4ca1-918e-1637e6fd1326",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0abc2abe-1477-4f1a-ac34-98297e033a15",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0dfbbec1-bf48-4d35-8a2d-deee9634e63c",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "704a1cba-00b5-4d2e-85d6-ceed00973c70",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4cca6907-004c-41b9-8d27-3de6d536b2b4",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8ed1f0a6-fb9a-4db4-8025-8c3c826042f6",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a crop of a roi annotation (image area framing annotation)",
               "methodName": "crop",
               "jsondocId": "c7b30e23-9457-469a-b926-e666b4bd33c4",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "b3f27168-82d2-48ae-a458-99d94adf4a61",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "2953853e-ce64-4395-b432-c7b2e5bf5d01",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "1fb1136d-e7f7-4e47-83a1-8754b65001b1",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "8d03acef-4551-434d-8c94-fadfae6d822e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/roiannotation/{id}/crop.jpg",
               "response": {
                  "jsondocId": "f84f1e63-781c-4f15-bc71-c3d973d96832",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "3084d02d-59c1-4c3d-906e-a8a6dae1c6c4",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "027b7f3e-5a64-45b2-b498-959d3c850a42",
                     "name": "type",
                     "format": "",
                     "description": "Type of crop. Allowed values are 'crop' (default behavior if not set), 'draw' (the shape is drawn in the crop), 'mask' (annotation binary mask), 'alphaMask (part of crop outside annotation is transparent, requires png format)",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9ad3e366-9f8f-4c94-b6d4-caf81451f2f9",
                     "name": "draw",
                     "format": "",
                     "description": "Equivalent to set type='draw'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6a6a1b23-7a14-4c80-bafc-44ca1866ddb0",
                     "name": "mask",
                     "format": "",
                     "description": "Equivalent to set type='mask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "296b52ea-cd17-4f6e-aaa2-78009b68d2b6",
                     "name": "alphaMask",
                     "format": "",
                     "description": "Equivalent to set type='alphaMask'",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e699d331-9112-4e8d-bbb5-0438d88fbe3f",
                     "name": "maxSize",
                     "format": "",
                     "description": "Maximum crop size in width and height",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4e2b13f0-c3cc-4ce0-aa84-2748fe898628",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in which crop is extracted. Ignored if maxSize is set.",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "54cb52be-c6b0-4081-ae49-92beb2497fd5",
                     "name": "increaseArea",
                     "format": "",
                     "description": "Increase crop area by multiplying original crop size by this factor.",
                     "type": "double",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ae8e5d44-96a8-48ec-a3aa-5468a0144b1f",
                     "name": "complete",
                     "format": "",
                     "description": "Do not simplify the annotation shape.",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a73095cd-771e-4293-93b2-eb395108ec20",
                     "name": "colormap",
                     "format": "",
                     "description": "The absolute path of a colormap file",
                     "type": "String",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7a253c7c-2a92-4dc4-818b-ec8521efab29",
                     "name": "inverse",
                     "format": "",
                     "description": "True if colors have to be inversed",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4c9d1bec-5f03-435e-b069-576e5ba41e68",
                     "name": "contrast",
                     "format": "",
                     "description": "Multiply pixels by contrast",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "915b42cf-6972-49f2-8858-9d8f78a3ed29",
                     "name": "gamma",
                     "format": "",
                     "description": "Apply gamma correction",
                     "type": "float",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8b8c1c26-1831-4b23-b326-283ed57b6069",
                     "name": "bits",
                     "format": "",
                     "description": "Output bit depth per channel",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a crop of a roi annotation (image area framing annotation)",
               "methodName": "crop",
               "jsondocId": "d9dc2b33-ee48-4679-8da8-52df1cbac1dc",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "683207cb-66e2-4e69-917f-f9979df1b819",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a0633945-df17-4f4b-a5b9-81ad69500f0f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "dc1b266e-9851-4ce9-b0f3-3f1909ea2f8b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "175d2432-6b06-4441-b95f-b3bc0de3508c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/roiannotation/{id}/crop.tiff",
               "response": {
                  "jsondocId": "bdb1c851-b6c9-439c-b6e8-4d50a3a4610b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image (bytes)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add an annotation created by user",
               "methodName": "add",
               "jsondocId": "b907b065-5b46-47c6-aa30-94bbeb43e3ac",
               "bodyobject": {
                  "jsondocId": "fe4c1fa7-e3e1-4a21-b20d-3136636f236f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "ROI annotation"
               },
               "apierrors": [
                  {
                     "jsondocId": "724db567-72aa-4a5c-8563-a15f163eb377",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a8589a5b-233c-4d2c-9d6b-10acbe293f50",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "b950d318-986f-4dd7-b383-fc510e4b9354",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7a9e03fd-ec12-4a7e-8cc8-ba0281cb7535",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "786f9ade-14b8-4ae3-9fe1-3023822b331f",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/roiannotation.json",
               "response": {
                  "jsondocId": "d7b96ac3-028e-47f1-bc6d-e6a8afbb7ad4",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "ROI annotation"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "835639ce-39c3-4226-83d2-b2d7c7bdc154",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update an annotation",
               "methodName": "update",
               "jsondocId": "1738b305-7680-4fc0-a10f-668bbd5054fc",
               "bodyobject": {
                  "jsondocId": "accccdbd-6e2d-41be-91e5-622e9e111668",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "ROI annotation"
               },
               "apierrors": [
                  {
                     "jsondocId": "95707100-4c21-4a96-a935-26e0e6773ead",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "37322b5f-1b81-4956-a2fa-52e3ec37a07d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0ee85dfe-4778-4990-a675-9936f5c4c0c4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "88105c0e-ef72-4118-a521-7c75809f9b7a",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "4a1acef1-e324-4bf4-844b-8d767e5668bd",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/roiannotation/{id}.json",
               "response": {
                  "jsondocId": "f82fa4b0-d00b-4a29-a6d5-08d79157b907",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "ROI annotation"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "29ebe547-5900-4f8a-8385-873e6642c7df",
                  "name": "id",
                  "format": "",
                  "description": "The annotation id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an annotation",
               "methodName": "delete",
               "jsondocId": "543ccee8-c9b0-4fc3-8a0d-db66b7668aef",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "9cdc3a34-10eb-410f-8949-7c6ac7661215",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "bab65aab-045c-4c7d-a329-c7a59346636f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e7c84a06-6fac-4f56-93d8-6f8233b613fd",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "84023afb-205c-4978-9fe8-bf8ba8d82435",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/roiannotation/{id}.json",
               "response": {
                  "jsondocId": "3322ad24-e457-4fab-92bc-fdeaf9d55797",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "ROI annotation"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Processing | roi annotation services",
         "description": "Methods for managing an region of interest annotation"
      },
      {
         "jsondocId": "29e10dd8-67a9-4e79-a058-7ae10ff8dc89",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "2d03eb07-93f2-439e-8009-e783312db7d7",
                  "name": "id",
                  "format": "",
                  "description": "The software id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a software parameter info",
               "methodName": "show",
               "jsondocId": "ff634b4d-2f93-4184-ab46-e1e6186413f6",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d437d53e-ef7e-4fd6-a98b-8a175711f209",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "59a34fb3-a4ff-4652-9c3b-0bbdc6afd43f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "3a51b3fe-69ad-416d-99f2-2e54c529da34",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6c9de0e3-5bda-4bc3-ae4a-5f46b47bf747",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/softwareparameter/{id}.json",
               "response": {
                  "jsondocId": "ce5db86e-e17a-4eb4-bed6-2ec4979ce253",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software parameter"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "bbf5d8f4-a117-41ea-80ff-fec0f73698b4",
                  "name": "id",
                  "format": "",
                  "description": "The software id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "0e0ec4f5-c1fd-4078-91b6-2415b7567cc9",
                     "name": "withSetByServer",
                     "format": "",
                     "description": "(Optional) Include params set by server",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7b1e3196-c8ab-4711-9fec-908575d18b19",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "231d0ffd-2e3b-453f-abbc-3bc9e7b787e9",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all software parameters for a software",
               "methodName": "listBySoftware",
               "jsondocId": "e67a17c7-d183-4a94-bc97-042237930597",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "443d76de-c1fe-4472-ae66-63f7aaf48696",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c28840ef-04d5-4c38-ab04-ddf82a868085",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0faf9edc-faa0-4add-af19-534a8dc23765",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "cb9f29ad-f5ad-4531-bc88-9d2915db058a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/software/{id}/parameter.json",
               "response": {
                  "jsondocId": "6f3684e2-3503-4d58-85cf-058c084844a6",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software parameter"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new software parameter",
               "methodName": "add",
               "jsondocId": "ff8b7a3c-307a-4c7d-be80-9e7cbaf702f1",
               "bodyobject": {
                  "jsondocId": "6e2d4bef-a33a-4636-b108-c4264f8dc341",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Software parameter"
               },
               "apierrors": [
                  {
                     "jsondocId": "e83a3218-1b9b-45b8-9c94-5e0e561eff35",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b2437faf-0aee-48fb-b0ad-354a0259438e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "3eff10bf-213b-4df6-833a-97bb7f42fc05",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7085241f-cf7b-434b-8abd-9ea87caedd5b",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "9f9d5a27-5e08-4f69-87a6-b53442b2c92a",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/softwareparameter.json",
               "response": {
                  "jsondocId": "b4c609ac-063a-4b3b-a559-884e2efc6f2c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software parameter"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "305423c5-793f-4830-af4a-413ac69467be",
                  "name": "id",
                  "format": "",
                  "description": "The software parameter id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a software parameter",
               "methodName": "update",
               "jsondocId": "d60dd94f-262f-49de-a2c6-5807e1df51a0",
               "bodyobject": {
                  "jsondocId": "ab5891ed-1908-4a3d-beb9-20fe46c27a51",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Software parameter"
               },
               "apierrors": [
                  {
                     "jsondocId": "ebee5f6f-89ab-4ffe-99a1-dbdf94fc81cf",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "30e69197-4361-475f-a6c8-0350b0b4c920",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "644a4227-2359-4325-8981-48afdd2a3676",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "429843e0-fc3d-43b5-a28a-ce7260afe9f1",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "c5334215-5c1b-42ad-b686-ef36694571c4",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/softwareparameter/{id}.json",
               "response": {
                  "jsondocId": "b0ba20a4-a330-4592-954f-242175794788",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software parameter"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "60ee8d3a-a445-4a93-a53b-88f9ce3e7663",
                  "name": "id",
                  "format": "",
                  "description": "The software parameter id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a software parameter",
               "methodName": "delete",
               "jsondocId": "b6f16775-90dc-40f8-9f41-07635fa4eaf4",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c81b9ccd-de12-489a-834d-0d09b9132fb3",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e1488f92-b562-4965-8743-70f9bc90e08b",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "21cc9802-65b4-4e34-9282-bccf0ac5972f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ab6a7b89-5d23-439a-99a5-6978dd7d5479",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/softwareparameter/{id}.json",
               "response": {
                  "jsondocId": "85cc8c57-a179-4017-83cf-4e42378eeed6",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software parameter"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "eb7703e5-d5d6-4c27-aab6-3fb418ed7ea3",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "832a9205-f85d-4331-8ea8-a5313c811bfd",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all software parameter",
               "methodName": "list",
               "jsondocId": "8a944ae9-a167-4f02-b19c-47b44faac76f",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "575f25b1-ce71-4b53-832a-1c7a6254c79c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "4e4cb5a0-58f5-4864-a89b-16c1363f0e42",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0ad287e4-2692-453c-a007-6b402fcf9785",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c5943985-1690-4e1b-84a1-ce73d85d45a1",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/softwareparameter.json",
               "response": {
                  "jsondocId": "518f5209-11b5-489d-8d9e-ede0c9854b19",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software parameter"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Processing | software parameter services",
         "description": "Methods for software parameters, a software may have some parameter (thread number, project id,...). When a software is running, a job is created. Each software parameter will produced a job parameter with a specific value."
      },
      {
         "jsondocId": "41004a21-87dc-42d1-b152-1f4569c773b5",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "6d63b387-c25e-4f5f-9ac5-f5df3b7e4444",
                  "name": "id",
                  "format": "",
                  "description": "The software project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a software project link",
               "methodName": "show",
               "jsondocId": "560e3519-8193-482b-8b11-ec9fa96f5fdf",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c59feaa1-8156-4e34-8549-b13ec6fd9ec0",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "55bb7c97-2211-4da3-a6ab-9208978dfdcb",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "9d74aee3-ecaf-49fb-a3eb-f08710951c0c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ea75e77b-8d50-43d7-a7c2-b16103cb91aa",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/softwareproject/{id}.json",
               "response": {
                  "jsondocId": "ca02da73-0ae1-4e1a-9588-a78fd2c0304e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software project"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "b8c9532a-a012-477f-84f0-7873dc6a0a5f",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "8cf1d5b5-8481-4939-9a2c-99a3a774bb1a",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d0e39081-234f-4b45-bddc-35a300a4db41",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all software project links by project",
               "methodName": "listByProject",
               "jsondocId": "46f74a70-9882-41c6-b97c-e43e2b71d3c4",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "a3a396f7-5340-4dc2-9e16-8143bf1a6538",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e0f0b77c-65eb-47d7-bbbb-7076a7fcf4d8",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "11d80ebd-c78d-4924-9fc4-99f319251a39",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "eefcf8f1-cd8b-45af-a228-9965f334ce52",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/softwareproject.json",
               "response": {
                  "jsondocId": "89567cf7-36b2-48ba-a3b1-6c7296290539",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software project"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add an existing software to a project",
               "methodName": "add",
               "jsondocId": "b9101621-5899-4684-8aba-5d12f2a03139",
               "bodyobject": {
                  "jsondocId": "fbed1492-5ed8-4636-acb0-ba34afa1ac93",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Software project"
               },
               "apierrors": [
                  {
                     "jsondocId": "8a5a2e27-130c-4d90-8e9f-dd7a2640336b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9ab73c26-62eb-407f-a957-547f4bc773b2",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e7681d44-9d6f-42dd-a264-306024707316",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a30f722c-278c-4caf-b4b5-ec29904cefcc",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "71f7a0ee-b7ce-4efe-a2bc-5fa525d6bfa0",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/softwareproject.json",
               "response": {
                  "jsondocId": "bc46717b-d295-46b0-9352-d162f41f38fa",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software project"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "0e98b65e-cf84-40a9-8b5a-cef2c0171445",
                  "name": "id",
                  "format": "",
                  "description": "The software project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Remove the software from the project",
               "methodName": "delete",
               "jsondocId": "43095c2b-18a0-416e-88de-c3a053c48755",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "2646f352-9706-45c0-8516-4a43bd50b370",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "0cc41d2d-d2ed-49bb-a75d-8ad093057848",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "21a72f28-06c0-4ade-a5bc-97712378c175",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "31362484-0de5-4b43-9a8d-83b4d01492cd",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/softwareproject/{id}.json",
               "response": {
                  "jsondocId": "e974d81c-c7dd-49f6-8c25-cba397aebe7a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software project"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "57439117-4c28-4903-8cbd-fba9d4bf8970",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d159b0ef-30fe-4bb2-b308-2842b1c5dd71",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all software project links",
               "methodName": "list",
               "jsondocId": "216c719b-90e2-4972-b81b-28564700c733",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "a178d173-9759-4b10-a605-f9bb4a9afadc",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "746ddd7f-aa06-4099-a135-61b8059b07da",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "b71ad50b-2a02-4058-af77-7eeaa7cdb776",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "09b02e90-3398-4dca-94ce-77bbb630ab59",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/softwareproject.json",
               "response": {
                  "jsondocId": "fd9ad763-8ae5-455b-8f68-961af1b716c6",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software project"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Processing | software project services",
         "description": "Methods for managing software, application that can be launch (job)"
      },
      {
         "jsondocId": "be172d57-8f2b-47b7-b7ef-561864d5f188",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "13e00670-77b4-42a4-a859-51a651983b61",
                  "name": "id",
                  "format": "",
                  "description": "The software id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a specific software",
               "methodName": "show",
               "jsondocId": "630c17f7-15ed-4ae6-9f73-640b06142f62",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "72d72e3a-ee16-43cd-be6e-ab5dec7877ad",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "0ee12b89-5807-4d5d-827c-d8f9943b45fb",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a4f623fd-93e5-43e0-bf2e-5ea1b5560db4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "89d6e7e9-15d8-43ba-92cf-e01020d6a91b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/software/{id}.json",
               "response": {
                  "jsondocId": "74d138ee-c46e-4563-927a-7d640fc04582",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "e84330ee-bb20-4933-9a7c-5c9c4c556a01",
                  "name": "id",
                  "format": "",
                  "description": "The software user repository id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "98d016f5-7ff4-4668-be94-e548b091cc72",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "063e2324-4cac-4c7f-84f1-d90ba1c9c45f",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all the software for a software use repository",
               "methodName": "listBySoftwareUserRepository",
               "jsondocId": "b815b395-6f83-4896-84a7-a5d91b44a309",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "412fa2dd-b0fc-4f19-ac37-c305d2be7341",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "46089038-86a3-4116-89f1-3537b04b006c",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d2900cd4-83b1-423c-9481-0be1f1e88126",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "fd47c7e3-3475-441f-981a-22bfb4f5309b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/software_user_repository/{id}/software.json",
               "response": {
                  "jsondocId": "1eb27aaf-869f-4eb3-90b0-c1afdb2113db",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "8d9e4e87-f9ef-4b1c-bbc0-0c958abd93e1",
                     "name": "idProject",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b957ed02-a758-4c5c-9173-d8c629368b34",
                     "name": "idSoftware",
                     "format": "",
                     "description": "The software id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "78d93263-f85a-40ed-acf0-7d820c068ad6",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7d9b6313-78b5-4691-b7c7-ec945580ff30",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "For a software and a project, get the stats (number of job, succes,...)",
               "methodName": "softwareInfoForProject",
               "jsondocId": "c53e7665-ba21-41a4-b80c-b2575cfab8c3",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "3f6cd781-5c21-4931-a989-b01555686192",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c6813254-df69-40ea-a796-5c7d85fd63e8",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "6a06496c-cfb6-43c7-a273-9a67b838b434",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6f6074bd-a7e2-4ba4-9582-a06230e3c7de",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{idProject}/software/{idSoftware}/stats.json",
               "response": {
                  "jsondocId": "f351f5ac-08c7-4970-bbf6-36ee53decfc0",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[numberOfJob:x,numberOfNotLaunch:x,numberOfInQueue:x,numberOfRunning:x,numberOfSuccess:x,numberOfFailed:x,numberOfIndeterminate:x,numberOfWait:x]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "1d67d460-f143-4aa0-b2b7-f5c62122bb29",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "e978364d-5cac-4b0c-baf1-7ae67835559e",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "54080b60-45df-4c79-8d32-f25cab181aa1",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all software available in a project",
               "methodName": "listByProject",
               "jsondocId": "a970737f-7967-4fa0-b7dd-6aecfcdf9b23",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1e636497-3e9d-48e7-bcfc-ca08ecfe25bb",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "fbccfe78-0206-4956-9662-fe5f9766f5ab",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a207a026-bb09-415b-9045-698721576d17",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "239beeea-befd-401a-8e24-dee1d42406d3",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/software.json",
               "response": {
                  "jsondocId": "910ced87-9485-4e96-8e1e-e01a695464a5",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new software to cytomine. We must add in other request: software parameters, software project link,...",
               "methodName": "add",
               "jsondocId": "d555b680-7646-4bc5-ae02-e407ea2a1c4f",
               "bodyobject": {
                  "jsondocId": "1783c05e-f1d9-4423-b228-618702636771",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Software"
               },
               "apierrors": [
                  {
                     "jsondocId": "23ede3ef-ea71-44dd-8059-4b8f7547af8f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "01f336c4-2df1-4b71-936d-0ba456891f6f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "508c81b3-6271-42a1-9145-5cc47bb1eafa",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f192ee4b-2af4-411d-9330-68ae98096a0a",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "ee156500-2daf-4f48-8d48-8fd4994c65c9",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/software.json",
               "response": {
                  "jsondocId": "0c3200f5-4189-47b6-a79a-f3efa5b7ccea",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "785af536-41f9-4573-a228-d89526a0b1a0",
                  "name": "id",
                  "format": "",
                  "description": "The software id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "54674a5a-c6a6-4b92-a609-b0b3b6f8d386",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "924fd6f4-3a18-4558-b98a-a788eb1e7afa",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "PUT",
               "description": "Update a software.",
               "methodName": "update",
               "jsondocId": "e84de0eb-de1a-4f84-a478-c60fac150847",
               "bodyobject": {
                  "jsondocId": "dd63bd46-0625-47f5-af3a-86cb458fff56",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Software"
               },
               "apierrors": [
                  {
                     "jsondocId": "20b03449-91f6-416a-a527-52992cc68aa2",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "026dfa7a-39be-4344-89ec-2ebde6d4a79d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "116655b1-42b8-4270-a33c-030105739643",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d715f4e9-0ed1-40c2-af04-b01103879f4d",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "89208f2b-7d08-4803-a62a-89312ec05b39",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/software/{id}.json",
               "response": {
                  "jsondocId": "2a928d53-ceab-4c4c-a384-3c559cfca0b9",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "7b835bff-a0fd-409d-a768-b911046eb274",
                  "name": "id",
                  "format": "",
                  "description": "The software id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "74acfb17-630a-469e-b118-9d35f0d10626",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "eb5e978e-33fc-4f22-9164-c864710be828",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "DELETE",
               "description": "Delete a software.",
               "methodName": "delete",
               "jsondocId": "7611fa53-66a1-412d-90f2-0abfe60fc7d4",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "cbf20ffc-28e5-4e43-bd3b-94d14795bb13",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "89b94d83-1e9d-468e-9804-39721cede715",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "2c19e86a-ffdb-4be6-ae81-b2c233166278",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "efd1c57d-ec56-4c9e-b335-f4ba6716e63c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/software/{id}.json",
               "response": {
                  "jsondocId": "c68b3806-7ad5-4ccb-bd0c-6e64b2f1b8f8",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "db26685b-6a96-47c5-aa5a-6abdb4b02375",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "90a7ca16-e838-4797-bb81-4bb43ec490d7",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all software available in cytomine",
               "methodName": "list",
               "jsondocId": "07079271-53ad-4828-a5d8-a0ae83d27db2",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "9b5ddd65-7a05-4d6b-b57b-af24c7ade445",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "4e0ae699-f516-4c41-a615-56e24fee9a04",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d409d87e-5d9e-43f7-b080-2eea7f1c9819",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "73fd9ee0-9de9-4754-a3b7-27f949356719",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/software.json",
               "response": {
                  "jsondocId": "dc0ec175-eb5d-4d2c-a5ab-c8bf47162f81",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Processing | software services",
         "description": "Methods for managing software, application that can be launch (job)"
      },
      {
         "jsondocId": "08ff0c6a-56c0-49b4-a4ba-f8342a4306e0",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "352c4328-642b-4326-9d7f-c747114018dd",
                  "name": "id",
                  "format": "",
                  "description": "The discipline id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a discipline",
               "methodName": "show",
               "jsondocId": "23165a50-a23b-44d6-bf1f-9b9e216b396a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "bf635192-ba42-4c93-a381-e96ee867df42",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "1885f150-567d-4063-a859-ead83ed37e17",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "336ca78f-e6be-48b5-9b8b-06e9b685addd",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e5110f7b-08dd-4c1a-b576-f62a192189c0",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/discipline/{id}.json",
               "response": {
                  "jsondocId": "b629fe35-05e2-4a28-8c99-8b6af167d075",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Discipline"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new discipline",
               "methodName": "add",
               "jsondocId": "1430f365-9b20-45c3-8336-7a17e846a927",
               "bodyobject": {
                  "jsondocId": "2eee530c-b55e-4141-89f2-48b6336a678a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Discipline"
               },
               "apierrors": [
                  {
                     "jsondocId": "51afd3b4-3027-4cac-a9d5-d68ac3ca5aa1",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "03f3abd8-873b-4786-a6df-2261b1471593",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "31ea415b-2e8f-40c0-8982-b04a65787952",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "67d96f73-4df5-4d76-9af8-e8b1cacce04d",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "b069a657-8e25-415a-81bf-b5797cc12027",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/discipline.json",
               "response": {
                  "jsondocId": "b69b99f2-1150-4f70-b86c-671b863ad47f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Discipline"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "10f85794-c3a7-45b4-a594-0e320e9582cf",
                  "name": "id",
                  "format": "",
                  "description": "",
                  "type": "int",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a discipline",
               "methodName": "update",
               "jsondocId": "81a5e09c-d762-42c1-834b-e31a4e19580b",
               "bodyobject": {
                  "jsondocId": "4cbc4242-41ae-410e-97d3-d9027eedbcd4",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Discipline"
               },
               "apierrors": [
                  {
                     "jsondocId": "e1a955da-52dc-47ee-8f28-260c50bcd560",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "32d868b7-0252-491f-8557-8cad051eb3f7",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "2ac99184-5848-402f-ab66-bb2d3bb8b592",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "1655af85-91ba-4eda-a41e-8291c17dfbb2",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "09aee02a-abba-4f01-a263-902f2e72b04a",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/discipline/{id}.json",
               "response": {
                  "jsondocId": "8c01e34e-561f-4326-8ea9-e865c66cda06",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Discipline"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "594cac74-3052-43c3-9041-eeb1205f1b50",
                  "name": "id",
                  "format": "",
                  "description": "",
                  "type": "int",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a discipline",
               "methodName": "delete",
               "jsondocId": "8c887db5-b7d1-47a6-8213-c56740c86665",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d51f5377-6124-4649-974e-28a23494ff7a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e1e1e27a-035a-4301-b6b2-e6ea8a065726",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "bca55dc3-c94e-46c7-997d-80fa5dbd40f5",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "5861283d-e368-4aaf-a054-aee75eec5b2e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/discipline/{id}.json",
               "response": {
                  "jsondocId": "b5af2a23-5b6f-4281-beec-cdf300ce5351",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Discipline"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "3189584d-02fa-47be-b68b-c2a7bb1a5a51",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0d4df89a-61b8-4bb0-a1a9-b9ac49a6799a",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get discipline listing, according to your access",
               "methodName": "list",
               "jsondocId": "c992521e-879e-4d27-888c-dc5e2579845f",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "e16bb1cd-d727-4940-b9d4-842bb7bc4967",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "1ff509b9-5d13-4a95-bff0-8bacc4f13cbc",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7049ed44-a025-46f3-93f9-40776bd0111f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "670f252d-b03b-4b1b-b338-d03065a27bd8",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/discipline.json",
               "response": {
                  "jsondocId": "51e055e4-51ee-4bff-b285-2841923b83dd",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Discipline"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Project | discipline services",
         "description": "Methods for managing discipline"
      },
      {
         "jsondocId": "2bb56280-dd83-47bc-b857-dba7ee1c852f",
         "methods": [
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "402a3960-977e-4436-b674-62b0b909d8f7",
                     "name": "id",
                     "format": "",
                     "description": "The default layer id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "fe951b2a-8d05-4e08-af15-7c99d334d8fd",
                     "name": "idProject",
                     "format": "",
                     "description": "The id of project",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a default layer",
               "methodName": "show",
               "jsondocId": "da2a265c-23b4-44c0-b57e-616d7a4d5f9e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "50d18283-167c-4555-b2b0-ced01abf5cff",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "991874ee-9e4b-4d0c-b732-0ba6be2ad44f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8eea8222-1826-419c-b97b-524e79832ca8",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b2d2198d-a391-490f-830b-01fffc69ba20",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{idProject}/defaultlayer/{id}.json",
               "response": {
                  "jsondocId": "729c97b5-8ba8-4fcb-ba6f-321944418dde",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project default layer"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "7cea4fcd-9ad8-4347-982a-39132f546288",
                  "name": "idProject",
                  "format": "",
                  "description": "The id of project",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "fae34848-9b3c-4709-b729-780ca8d8c56b",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a05b07ab-da5e-454a-b9ca-2dbcd07bde5d",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all default layers of a project",
               "methodName": "listByProject",
               "jsondocId": "1046a046-a3cf-4b28-bedd-1fdbeeaa855f",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "17030f9d-76ba-434c-94bf-f19689f1f1c0",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "5cb69887-5210-4129-b388-40513f0bb580",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "66527ba0-3f5a-475e-bb6f-30d461c50377",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "373a1163-7f62-4077-8bd7-aac13d767cc3",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{idProject}/defaultlayer.json",
               "response": {
                  "jsondocId": "b1b6db30-4297-4728-82c7-ddd38fb18563",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project default layer"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "40d0e301-a878-48a1-8891-73ba8d124521",
                  "name": "idProject",
                  "format": "",
                  "description": "The id of project",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a default layer",
               "methodName": "add",
               "jsondocId": "86bf386a-cad4-4cd7-a0a1-79757125e723",
               "bodyobject": {
                  "jsondocId": "be2c34b7-643f-4180-a9bf-47e69ac38ccc",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Project default layer"
               },
               "apierrors": [
                  {
                     "jsondocId": "ac2d7387-a177-4c6f-90fe-439bf004b818",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "742ca682-d016-4099-9b0d-bc7e14690e26",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "83164a79-76fe-4439-91bc-95b7d5ad58a2",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "0f0e55d5-ec66-46ec-8a4d-b6e04164ee90",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "f4576367-c4d7-4463-ae97-4f139887aa04",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/project/{idProject}/defaultlayer.json",
               "response": {
                  "jsondocId": "7b24a06c-7298-44b2-8e78-2e325c672538",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project default layer"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "326f4633-8300-48c1-ad9c-a29ba462d574",
                     "name": "id",
                     "format": "",
                     "description": "The default layer id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "cbb3b957-2e02-4d27-87a4-4aca5386c260",
                     "name": "idProject",
                     "format": "",
                     "description": "The id of project",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a default layer",
               "methodName": "update",
               "jsondocId": "6cde5280-6107-4cd9-9562-4fe5581e9102",
               "bodyobject": {
                  "jsondocId": "fdd499ed-53f6-4366-b062-e9c0b94e6cf9",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Project default layer"
               },
               "apierrors": [
                  {
                     "jsondocId": "77192677-743a-4858-a7d1-4337aed4b1c3",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "dcf2a795-cb3a-4e94-9033-d5edfe930068",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "34eb10cb-0cb9-4a43-b3cc-bd16fd85e343",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "99377640-2c44-4164-9c39-a908af5b93ac",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "95da744f-a7c9-4dd0-8eda-56e61b33f69b",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/project/{idProject}/defaultlayer/{id}.json",
               "response": {
                  "jsondocId": "92bf7f3b-1b19-426f-b5f8-4fcd0f3084e3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project default layer"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "fb749a84-67fb-4012-bd84-5da0400bc55d",
                     "name": "id",
                     "format": "",
                     "description": "The default layer id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "76e9c948-90f4-4036-b9a1-42568352fa75",
                     "name": "idProject",
                     "format": "",
                     "description": "The id of project",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [{
                  "jsondocId": "64298d27-7a09-4cbd-baf0-9e2aa04bd222",
                  "name": "task",
                  "format": "",
                  "description": "(Optional, default:null) The id of the task to update during process",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "verb": "DELETE",
               "description": "Delete an default layer",
               "methodName": "delete",
               "jsondocId": "54ccc0df-1045-41eb-8c19-6e4224b67332",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "7937c788-56af-414c-a8e3-f3c77cee43ff",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7d2403ec-14a6-47aa-94e9-d2e06a306f83",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7f68172b-ad0e-4e09-b756-e848eddb8cdb",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "575b3065-72b9-49ae-925d-dbbaf051aa29",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{idProject}/defaultlayer/{id}.json",
               "response": {
                  "jsondocId": "8e18a143-cb87-4faa-8983-70ce22849883",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project default layer"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Project | project default layer services",
         "description": "Controller for project default layer"
      },
      {
         "jsondocId": "b0577fd3-ca2e-415e-ba32-ec682149a945",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "4a4c204d-655f-4eb1-b385-34d5be536bca",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a project",
               "methodName": "show",
               "jsondocId": "e2bd5cb9-56d4-449b-94ef-17c90a44bf85",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "dd176339-01ef-4692-8380-5eb6ad57ff2f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8e71b82b-6871-4c26-b51c-7eba8d7c6205",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8d73f47f-09f9-423e-8da7-0d5a0896b97e",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "68f1f979-bbc4-43c7-8c6b-aaaba6a8effa",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}.json",
               "response": {
                  "jsondocId": "fe6e7d3f-02d1-41b7-aea4-042c4e072b9e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "aacd2cbd-e2f0-478d-800e-b3c0b15afa42",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "46c3af96-c41a-4db0-91eb-e6bf83ea97c6",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get the last opened projects for the current user",
               "methodName": "listLastOpened",
               "jsondocId": "28ef5dd4-4948-4e0a-8a3c-b410494a6d3c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "e4ebbddb-7ec5-41c1-b142-fabd829a3c69",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "26134f80-16a2-413a-a4b2-ba439bf1e01c",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "bf4dd90a-ee8c-4f37-84c4-04015a548391",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "eabb55db-7eb7-44d9-bd2e-fa87354f4a77",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/method/lastopened.json",
               "response": {
                  "jsondocId": "d3dad40c-b46c-4310-885c-06a9420d54ea",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "ea5910e2-3ed4-40b7-82ec-4d8344e3e460",
                  "name": "id",
                  "format": "",
                  "description": "The project id (if null: all projects)",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "a7ac38d1-b88e-44a1-aa76-7bb1438a3b92",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a3616910-2bc6-4f1f-add2-6a441076d48a",
                     "name": "startDate",
                     "format": "",
                     "description": "Will return actions created after this date. (Optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "caad80c5-c5c4-4fe3-91e7-2a7902d96cd3",
                     "name": "endDate",
                     "format": "",
                     "description": "Will return actions created before this date. (Optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4ca13193-1379-4230-b28e-bbc4bae2e392",
                     "name": "fullData",
                     "format": "",
                     "description": "Flag to include the full JSON of the data field on each command history. Not recommended for long listing.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "492bf08a-6f0b-445b-9ac8-2315a2a06dcc",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2fa88701-4cdc-4868-81d7-03b0ac4836fa",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get the last action for a user in a project or in all projects available for the current user",
               "methodName": "listCommandHistory",
               "jsondocId": "fc739272-7e74-48bf-b6b5-6538c982cbf5",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "07b2fba2-9d06-4c31-9e78-1924cc53a852",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f29c98f1-3490-4542-bda4-c1fe0b6e708c",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "05f5fb77-3215-4de5-91cd-e4d4b387b63b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "432d9257-751a-4ed4-b64d-ed9ea68fce6f",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/commandhistory.json",
               "response": {
                  "jsondocId": "eee2fb8d-4037-4136-bf85-c203aa29fa0b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "commandHistory"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "2666fa9e-69d4-4147-9bfd-aa9d1f621984",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [{
                  "jsondocId": "1222436c-a5d6-421a-bad4-082f14eb8187",
                  "name": "json",
                  "format": "",
                  "description": "The user name and email of the invited user",
                  "type": "string",
                  "required": "true",
                  "allowedvalues": []
               }],
               "verb": "POST",
               "description": "Invite a not yer existing user to the project",
               "methodName": "inviteNewUser",
               "jsondocId": "73c1b71c-9a02-4f2f-81fe-582eddd5f78a",
               "bodyobject": {
                  "jsondocId": "6e887a1a-add8-452c-970c-991993d71fcb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Project"
               },
               "apierrors": [
                  {
                     "jsondocId": "b1067b58-3c1a-4296-a2e8-8f7d126c440c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "95607ae3-1f5e-4816-9a89-21c680cf9145",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ceb03c5d-4ad2-4d5b-ac41-d31ed65d58cb",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c1a538e1-d559-4c0d-a64b-89014cbb2cea",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "44dc235a-94e8-4d65-8efc-9b3f8b37002f",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/project/{id}/invitation.json",
               "response": {
                  "jsondocId": "df593d92-2268-43ec-a700-54da09c2cde8",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "fb6ff777-b7da-409e-82da-9738f51f121e",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "8cde6d29-0652-4e28-a6ff-01406e45c047",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "fb7f4404-9f71-44e8-bed9-f2265bb378f7",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all retrieval-project for a specific project. The suggested term can use data from other project (with same ontology).",
               "methodName": "listRetrieval",
               "jsondocId": "53141cc1-6ca1-4f4e-83f3-33a0ae25c062",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "438576c8-d24c-409a-b2db-9f818bb034ba",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b5de15fb-04d9-4f8b-8549-0563aedd24fd",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "b4c1d567-6599-4493-843f-d65b4e8c3b07",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "924b33da-ff38-41c3-a053-4eb3e47cf3f7",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/retrieval/{id}/project.json",
               "response": {
                  "jsondocId": "ff1dda68-fbbf-40d0-be1d-2aad0099d4c1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "ba2babc6-ce28-4279-b014-cae46be273fc",
                  "name": "id",
                  "format": "",
                  "description": "The user id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "87b3c3de-a2df-4373-859d-ea1d0a30e0f1",
                     "name": "creator",
                     "format": "",
                     "description": "filter by creator",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f270b490-233a-4a9f-9f09-e12e64ef8c36",
                     "name": "admin",
                     "format": "",
                     "description": "filter by admin",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f981a480-c70e-4e8e-9528-483df3153c87",
                     "name": "user",
                     "format": "",
                     "description": "filter by user",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2f873795-be2e-430b-8098-c544e93b01a1",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3b71d7d2-4a19-43b9-ac42-170b8b7b8dc2",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get projects available for the current user and available for a specific user in a specific role (user, admin, creator). ",
               "methodName": "listLightByUser",
               "jsondocId": "af7de3a7-cdd5-4543-a65e-e68f1b083ba9",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d698f107-6ec7-45d1-a3cd-f79c86dc987e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6f8ce55c-7e02-42ca-80b2-529eefb15160",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "31b9b48d-dc3e-4a15-b5a0-02446f326755",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "cd4d20da-a1dd-4d3b-b0f1-741f6ef1b6ee",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{id}/project/light.json",
               "response": {
                  "jsondocId": "e6e9b928-c698-48b2-9900-1262238c6aac",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "project (light)"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "3e207031-c367-405e-8f7c-58c46706677a",
                  "name": "id",
                  "format": "",
                  "description": "The user id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "b6b93b22-08a1-41ad-b27a-9a9245bbcd11",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ec1820a8-4457-438c-a798-9d5c883c5c07",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get projects available for the current user and available for a specific user",
               "methodName": "listByUser",
               "jsondocId": "fbb7332c-f322-435e-b51e-0884ff2cb32a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "b3d4cab1-9c9d-4687-8b79-1be047ae1c17",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "5413d206-640c-4414-a9bc-fab880f1bbb1",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ec8445fa-14a7-4e56-bb85-6f53d5d51eb6",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "476c46f0-942d-47d1-b524-0301aca12f1c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{id}/project.json",
               "response": {
                  "jsondocId": "9ccddb60-b026-412c-9ab6-ed81664a7c00",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "87fc6f1b-c07a-40a9-8650-557c5549ad9a",
                  "name": "id",
                  "format": "",
                  "description": "The software id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "6fe52be1-d6ae-43bd-8ab6-98ed99256773",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9c3be212-381d-4418-bcc6-20f8f6d94b5e",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get projects available for the current user that can use a specific software",
               "methodName": "listBySoftware",
               "jsondocId": "7d26fbdb-a936-49fc-bfe6-e7d2ac557cef",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c452c47f-5b8c-48b5-9e44-f84fd81ef284",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "54bee7e0-e7fc-4ab2-ac66-f4687bf9f4a9",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ed3ef752-c4ee-4fa2-843c-7665f1bd7846",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "aa1cbf93-369e-419d-803c-ffa045adc150",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/software/{id}/project.json",
               "response": {
                  "jsondocId": "3ab62cd7-ccc6-41a1-818a-cf22c0bb8e1e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "9774b4c9-e204-42e6-b91f-7b34b705631d",
                  "name": "id",
                  "format": "",
                  "description": "The ontology id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "eb34101d-9385-46d4-b5b4-bf95480039e1",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f9fce4f1-449b-4984-b6e7-048bec16a650",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get projects available for the current user that can use a specific ontology",
               "methodName": "listByOntology",
               "jsondocId": "efa4c725-8fa5-4ad8-a79f-13c07dc32b82",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "6162b9f3-1b90-49a9-aac7-e4daf05f085f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e86f9964-8826-4650-aa03-29a1f5dfe9b4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "b387010e-0296-43b0-aa0c-f49a72315142",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d21eb8ba-b90b-4aa2-a8f4-79b91ac22ce0",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/ontology/{id}/project.json",
               "response": {
                  "jsondocId": "3dcd05cf-50e7-494f-8b74-8de8d6461476",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "3df23afb-605b-4613-bbfe-2b029ce1c84e",
                     "name": "id",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "365ca8dd-9bee-47be-8931-245c189b847d",
                     "name": "max",
                     "format": "",
                     "description": "The maximum number of actions to return",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "b873db50-ee65-403b-b9d7-c09d9c5b78e8",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "86a6edde-d392-45b4-b794-38deabaf64ac",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get the last action for a project",
               "methodName": "lastAction",
               "jsondocId": "0a879752-8e3f-41a9-8b87-c289e055c652",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "36213cb8-ecbf-4e77-b9d5-1f9e3862a84f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7b75dc09-0bc3-4567-99aa-9de062cb3755",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "35f39b70-684b-415c-821e-82789636cca9",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "fad29b15-6995-4f6e-af2f-0ba9c5dab2f0",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/last/{max}.json",
               "response": {
                  "jsondocId": "a5de3738-73c0-450c-99ee-2029ded35269",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "command history"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "GET",
               "description": "Count the number of project visits",
               "methodName": "countByUser",
               "jsondocId": "594ba5c2-5461-42d2-b68b-30362d855d92",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "51461fa8-b5cc-4ffb-b710-56ba8a016555",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c96921f2-c8ac-47e7-8128-5d4fbde77934",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a76c0e15-5fb2-4034-ad26-904226c2f4dd",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "5c7e9cee-8d9d-491e-bd4d-45bf68d19230",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/rest project/countByUser.json",
               "response": {
                  "jsondocId": "d960417e-4b7d-4476-a67a-2a18babe570d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[total:x]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new project",
               "methodName": "add",
               "jsondocId": "71f177df-cbc1-4b4c-8302-fac0730bcdad",
               "bodyobject": {
                  "jsondocId": "33856ed8-0265-44ee-8ec0-b40eae4a03c1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Project"
               },
               "apierrors": [
                  {
                     "jsondocId": "5d425350-de3e-437c-a4f0-24235c0959c6",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f57da407-cd9a-4601-acfc-387c30fef062",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "895f21ad-ea9c-4028-a713-2454b3f36507",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "4398dc4d-c23b-452f-aa6a-f3b73e2cbfeb",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "b72ca3eb-c1d5-4f87-81d9-f0273df7ed97",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/project.json",
               "response": {
                  "jsondocId": "92f14692-289e-4643-b09f-2347b86e1154",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "998828c7-6a2c-4d58-a6ae-d311ef83b9ca",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "int",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a project",
               "methodName": "update",
               "jsondocId": "5866b1ca-0e42-43bc-a162-7375bbbf80fb",
               "bodyobject": {
                  "jsondocId": "a7394aca-72a4-4a9c-b2a0-3627884e3841",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Project"
               },
               "apierrors": [
                  {
                     "jsondocId": "3f049809-661a-4e43-823d-239b8df6220c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e8d9ba3f-fe98-40ac-a56d-3a1e07fa54a6",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "bff0b8e1-29c4-4f5d-932c-2c2773ca681f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "52a1751e-61e9-4d24-9470-acc79d6cc83e",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "4540d41c-ef79-4895-9b9b-a3a5a1996b17",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/project/{id}.json",
               "response": {
                  "jsondocId": "eedf9bbc-4897-4e93-819c-f63bf481b7ec",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "af5d34b8-0c3d-4b12-929e-9b5dc29019f5",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a project",
               "methodName": "delete",
               "jsondocId": "e416c669-62d0-4b04-bc80-c44ca1b043f4",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "9ed37a19-57db-4969-b697-3a354435992d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d0618eac-7c86-4490-b420-6733d9131328",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "18f23b23-ecf6-4973-9de7-4e9519ffec1d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "78409490-861c-45a9-aa2e-3ad4ac7b2301",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}.json",
               "response": {
                  "jsondocId": "76e8ef9f-7fb6-4018-8ca5-344f4754ae16",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "83648f97-df0a-4c36-b47a-00aefb4f3123",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3fbf87cf-5aca-4250-b306-2dd20c30d1c7",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get project listing, according to your access",
               "methodName": "list",
               "jsondocId": "1d442d10-0af9-4cc7-8231-73ebc80fa17a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "fffd4263-1936-48ee-8bc9-a3ecfbf794fe",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6ca5c9b4-f2fe-412b-a6e5-13bdab546765",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "feed7072-cf0b-4aac-805f-ec5b215de890",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "43b28069-6ff8-42c5-b63a-93b88033449f",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project.json",
               "response": {
                  "jsondocId": "3678440b-331c-4532-b258-a13732ecb75e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Project | project services",
         "description": "Methods for managing projects"
      },
      {
         "jsondocId": "494ebc32-f084-41ad-9782-2fd55437204d",
         "methods": [
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "0ecc92ee-2fce-4e4e-b761-0c3a4d5518fc",
                     "name": "id",
                     "format": "",
                     "description": "The project_representative_user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "34599b52-2fc1-4e0c-b328-38a29fc26098",
                     "name": "idProject",
                     "format": "",
                     "description": "The id of project",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a project_representative_user",
               "methodName": "show",
               "jsondocId": "b1a5f22a-f61e-4f02-9fd4-349213037b58",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c858257c-16ea-42d1-aa0c-446f0fc9f2f2",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "16e105c5-3837-4f4a-b8ff-260e0a207d45",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "20af4ff9-d22a-48f3-bd7c-3942fba5d6e9",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "10552a5a-714d-4909-8236-8943b7b50cfa",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{idProject}/representative/{id}.json",
               "response": {
                  "jsondocId": "41b19a61-3f15-484d-8226-b24ce572ea96",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project representative user"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "2ebabb56-92a9-4c26-9cbe-f2fc1946f173",
                  "name": "idProject",
                  "format": "",
                  "description": "The id of project",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "ee5da0c8-b45b-47c8-ad39-9f62b4bc1cba",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "bcf7cd0f-d6d9-4d5d-9945-b9a1f9fa1160",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all representative user of a project",
               "methodName": "listByProject",
               "jsondocId": "08e20fe0-98f8-4eea-a86b-9d048d4f8bbb",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "40001825-71b3-400d-8d93-332cc0e45e04",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d8b9dcf2-38a5-4594-b544-805b58bf1552",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7d5a5dee-6117-4bde-afd1-e46a32dc0e96",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6fc558f4-cc9b-45e0-9120-2f691944837e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{idProject}/representative.json",
               "response": {
                  "jsondocId": "c7973f11-8637-48bc-8a67-8d9b72381c4d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project representative user"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "92ca4ed0-6712-40d1-a410-14c8f842fc45",
                  "name": "idProject",
                  "format": "",
                  "description": "The id of project",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a project_representative_user",
               "methodName": "add",
               "jsondocId": "645480dd-e704-43de-ba08-35197a00db03",
               "bodyobject": {
                  "jsondocId": "2d377a76-3cee-4239-b58d-5cd73d6a3beb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Project representative user"
               },
               "apierrors": [
                  {
                     "jsondocId": "09ba281d-2a75-4041-8666-d8b73fc0b9a6",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f42d0c65-4af6-4ae6-a006-5f1f5c3236a1",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ffa42460-8fbd-420d-901b-9a73f238c4ab",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c4b719ce-6578-46ff-b584-b0acb3585327",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "32da2d23-c57f-48a6-b9e2-1dfacc62bde3",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/project/{idProject}/representative.json",
               "response": {
                  "jsondocId": "83e3458a-1bda-4977-923b-e15280fbf06c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project representative user"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "733ee56f-b7a8-42ca-bdb9-380aa1c10c5f",
                     "name": "id",
                     "format": "",
                     "description": "The project_representative_user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "46abdba6-c717-4029-8803-383d86493f61",
                     "name": "idProject",
                     "format": "",
                     "description": "The project id relative to the representative",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "016f8a1f-6f89-4463-b1bc-d1a859276f17",
                     "name": "idUser",
                     "format": "",
                     "description": "An user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "71e9c452-fafb-46df-9d77-4adf28ceed64",
                     "name": "task",
                     "format": "",
                     "description": "(Optional, default:null) The id of the task to update during process",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "DELETE",
               "description": "Delete a project_representative_user",
               "methodName": "delete",
               "jsondocId": "7d9a8fb0-1ec0-4552-a19e-eb844971727b",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "4458426b-1450-459b-9777-dc626e3ef60d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "4b5e7854-ab5c-4ae9-9ab0-296471ae9435",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "695e2f84-82b6-485b-af14-eb9412659901",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e91acfcb-4fa1-497c-8413-b1ef9d39b888",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{idProject}/representative/{id}.json",
               "response": {
                  "jsondocId": "d402fd9f-2881-4a95-926a-0dffe648e32e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Project representative user"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Project | representative user services",
         "description": "Controller for project representative user"
      },
      {
         "jsondocId": "1b362cbc-9227-4860-8f36-49438eaea8a0",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "864ebc06-e890-41c1-a3e1-d3d68151c587",
                  "name": "id",
                  "format": "",
                  "description": "The filter id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a filter",
               "methodName": "show",
               "jsondocId": "d135806b-2bf5-4e4c-9579-241cd2340d70",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "5602495a-b22f-4c6c-8e46-62913ccaf3e4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "0f096129-8667-4e10-8166-a819ca291d42",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0f1695f4-a083-43a8-81ac-d17ba4e8d531",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ac000f2f-2be3-4448-8da1-4af26455bbae",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/searchenginefilter/{id}.json",
               "response": {
                  "jsondocId": "091d6676-ac39-4b0d-ba9b-8853974d3b2e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Search engine filter"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add an filter",
               "methodName": "add",
               "jsondocId": "10affd04-429b-4b61-9ab5-df6733595e3d",
               "bodyobject": {
                  "jsondocId": "560434c1-1f7a-4033-b383-69820a6d60b4",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Search engine filter"
               },
               "apierrors": [
                  {
                     "jsondocId": "d708a1a9-0c67-4188-88b9-5290cf1f79d5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e748fb3e-c1ef-4a0f-97f4-577d8723f742",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "236e1304-ee58-4a4b-9184-0cca27ada8b4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "27bf824f-33dd-4950-83ec-13375c33255e",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "222a3b0b-ca68-4235-94d1-26c7fa5b2d7b",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/searchenginefilter.json",
               "response": {
                  "jsondocId": "976d6dab-e52d-4ff7-be3d-2a0175683dd4",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Search engine filter"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "8490253c-56d1-479d-aa5e-2b9b899b9c0d",
                     "name": "id",
                     "format": "",
                     "description": "The filter id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5e339baa-3bc6-45b9-ba19-c1cefb7812e3",
                     "name": "task",
                     "format": "",
                     "description": "(Optional, default:null) The id of the task to update during process",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an filter",
               "methodName": "delete",
               "jsondocId": "c7e7fa72-cfd6-441d-827c-2006d7908c4d",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "cb114d07-c2d6-4780-8833-0838b9274976",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b8eaf26e-e014-459f-a9c1-80dadb51e9fa",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "6d39f6f7-77ad-4914-855f-d0eba8113e56",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "205bb9ab-666b-4aa7-bf93-f474a8ea9d6d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/searchenginefilter/{id}.json",
               "response": {
                  "jsondocId": "470ddcd8-1394-45bd-a113-420ffd6ba05b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Search engine filter"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "778dca69-6924-44ec-8d91-f2497428ecf7",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7e591bcf-c035-4f72-8c50-d3b38694198e",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all filters",
               "methodName": "list",
               "jsondocId": "7939fe57-2e90-47b4-8fce-98cb601c603e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "f2fadb82-42d9-4dcf-8b24-7a2bcfbbc1d5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "686ec30b-9dca-458a-b383-fbd22ffd583a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ecaf54bd-d3d4-47f7-915a-1c07d37d2c2c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7a798f55-b728-4de2-bc61-b241db4bfbe3",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/searchenginefilter.json",
               "response": {
                  "jsondocId": "3433cf02-c20c-4f33-a123-7f6a70530b8c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Search engine filter"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Search | search engine filter services",
         "description": "Methods for managing filter of the search engine"
      },
      {
         "jsondocId": "37796bf0-df6d-4833-b7c0-4c4992e770ad",
         "methods": [
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "1b0e1c7c-a9cd-47e4-9146-44eda0079833",
                     "name": "id",
                     "format": "",
                     "description": "The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "defb82e7-b0ea-40e4-aa0c-fd363b636f0a",
                     "name": "className",
                     "format": "",
                     "description": "The domain class name",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "d9079d54-198a-408b-b6a4-5d03fdef0164",
                     "name": "maxSize",
                     "format": "",
                     "description": "(Optional) Max size of the image (default: 256)",
                     "type": "int",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "718096a2-2037-42fa-8ec2-4147346e7a5e",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "02afbda0-60c2-4439-bfcc-40919770730c",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a preview image for a domain. For image = thumb, for annotation = crop, for project = the last image...",
               "methodName": "redirectToImageURL",
               "jsondocId": "067d5337-0b62-4342-970b-ffdbfa708b21",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "687e2886-9cfe-4269-ba3a-56098c48751f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "02454212-bbd8-4085-bcb3-1f29b5de4bc0",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "fe5d6fc2-c23e-4bf8-ae44-067fa1596677",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "acdf8c51-5737-4f3f-ad97-21137f615300",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/image/{className}/{id}.json",
               "response": {
                  "jsondocId": "4ea09b14-fded-46fe-93a7-bf52e0575e72",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[search_engine_step2]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "dbd9a73f-1540-40d7-afc5-31b135fa5a60",
                     "name": "ids",
                     "format": "",
                     "description": "Search only on these domain ids",
                     "type": "List<Long>",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "da8cff83-3ca9-450f-915d-581478eefb71",
                     "name": "expr",
                     "format": "",
                     "description": "List of words to search (AND search). Max 5 words and each words must have at least 3 characters.",
                     "type": "List<string>",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "50115ef6-8e1e-484a-b50f-f756b939fa49",
                     "name": "projects",
                     "format": "",
                     "description": "(Optional) Search only on domain from these projects",
                     "type": "List<Long>",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1fd90cf6-9f8e-4a4e-8819-4e611afd8e36",
                     "name": "domain",
                     "format": "",
                     "description": "(Optional) Search only a king of domain groups (only project, only image,...)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f1de32ac-3330-4d54-82fe-d6bfa87d0cdd",
                     "name": "types",
                     "format": "",
                     "description": "(Optional) Search only on some attributes (only on domain itself, only on properties,...)",
                     "type": "List<string>",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3e15802d-ef24-4861-a1d3-a0e52dab2eb0",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "744bf0d0-d9c5-481b-bdb1-abf6aab38c3a",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Search for words and filters in Cytomine resources. This provides more data for a subset of results",
               "methodName": "result",
               "jsondocId": "96ec0339-0107-4627-b8ca-48ea8936811e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "d8fe6226-6d45-42c8-92cd-91ee320d02cf",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8ba1d193-a815-4274-bc64-938515ac38b8",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "f4da1147-56d5-419c-a598-1a2c216ac2c2",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "40e870e3-9e00-402f-ab94-0c38600c2f2a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/search-result.json",
               "response": {
                  "jsondocId": "55adb4e7-568c-4975-936e-6e02be46d7cd",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[search_engine_step2]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "f6f09141-ef1a-41c9-a771-d4cfbf257088",
                     "name": "expr",
                     "format": "",
                     "description": "List of words to search (AND search). Max 5 words and each words must have at least 3 characters.",
                     "type": "List<string>",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1f9ee870-8c96-4210-a4f3-73423bbb45b2",
                     "name": "projects",
                     "format": "",
                     "description": "(Optional) Search only on domain from these projects",
                     "type": "List<Long>",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e8a6baf9-5584-4261-aa06-4b4d0f1e1c3c",
                     "name": "domain",
                     "format": "",
                     "description": "(Optional) Search only a king of domain groups (only project, only image,...)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ebecc28a-3fa1-4838-bd19-d4d08ecb6c1a",
                     "name": "types",
                     "format": "",
                     "description": "(Optional) Search only on some attributes (only on domain itself, only on properties,...)",
                     "type": "List<string>",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0d5ef9fc-81f0-4f71-825a-b3da6d4aa358",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "dcf39e3a-2c49-4c60-9595-d41db659d78f",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Search for words and filters in Cytomine resources. This only retrieve id/class of matching domains.",
               "methodName": "search",
               "jsondocId": "39cc5153-aaec-40dd-b4aa-751cb28da536",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "db7f50f0-c93b-472a-bf5c-2acafd476a28",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "086c707f-324c-45a7-918e-5ce5d790c1b3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a8e7263b-52ed-48eb-9ff3-40e07ac21e52",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c3cb559f-65cd-4348-9484-851e6ec9791f",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/search-engine.json",
               "response": {
                  "jsondocId": "e4b59268-fe70-4578-a7e1-a07489517304",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[search_engine_step1]"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Search | search engine services",
         "description": "Methods for searching domain (v2)"
      },
      {
         "jsondocId": "2e98973e-a466-49a9-8cbd-972339d9352d",
         "methods": [{
            "headers": [],
            "pathparameters": [],
            "queryparameters": [
               {
                  "jsondocId": "af648b1e-748c-4b5b-8fe8-a394fc7d8d26",
                  "name": "keywords",
                  "format": "",
                  "description": "(Optional) List of keywords. If null, take all domain.",
                  "type": "list",
                  "required": "true",
                  "allowedvalues": []
               },
               {
                  "jsondocId": "7a34ca4f-e899-42a6-b1c4-77b36298e3a5",
                  "name": "operator",
                  "format": "",
                  "description": "(Optional) Operator between keyword (OR or AND). If null, take OR.",
                  "type": "string",
                  "required": "true",
                  "allowedvalues": []
               },
               {
                  "jsondocId": "d355550f-0684-429b-8118-a6c8fb5947ec",
                  "name": "filter",
                  "format": "",
                  "description": "(Optional) Domain type (PROJECT, IMAGE, ANNOTATION or ALL). If null, get all domain type",
                  "type": "string",
                  "required": "true",
                  "allowedvalues": []
               },
               {
                  "jsondocId": "4f40554a-fdd8-4586-8ddb-47817fca29e8",
                  "name": "projects",
                  "format": "",
                  "description": "(Optional) Look only on domain from the project list id. If null, look into all project (available for the current user)",
                  "type": "string",
                  "required": "true",
                  "allowedvalues": []
               }
            ],
            "verb": "GET",
            "description": "Search for domain with a keywords list. The search will into properties value and description domain.",
            "methodName": "listResponse",
            "jsondocId": "a63d5d3b-903c-4bad-981e-7d2f0e1257ef",
            "bodyobject": null,
            "apierrors": [
               {
                  "jsondocId": "52ebdc6d-4680-428f-8586-4507dc2d8fdf",
                  "code": "400",
                  "description": "Bad Request: missing parameters or bad message format"
               },
               {
                  "jsondocId": "ad0fb097-0434-4875-acdc-5d6f7186da31",
                  "code": "401",
                  "description": "Unauthorized: must be auth"
               },
               {
                  "jsondocId": "35164485-00f5-4218-84fb-a32598c4d619",
                  "code": "403",
                  "description": "Forbidden: role error"
               },
               {
                  "jsondocId": "a5d88aaf-a512-4f80-ab8e-73abff9e127b",
                  "code": "404",
                  "description": "Object not found"
               }
            ],
            "path": "/search/list.json",
            "response": {
               "jsondocId": "abab78d1-14fb-43a3-9b06-53218425c1e8",
               "mapValueObject": "",
               "mapKeyObject": "",
               "object": "[search]"
            },
            "produces": ["application/json"],
            "consumes": []
         }],
         "name": "Search | search services",
         "description": "Methods for searching domain"
      },
      {
         "jsondocId": "d9ed406d-af68-4812-8828-b31c53b7b46e",
         "methods": [
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "a71dfef6-e135-49e5-afd7-d024396a5109",
                     "name": "domainClassName",
                     "format": "",
                     "description": "The domain class",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d203fbce-eede-40cb-974c-153636769eef",
                     "name": "domainIdent",
                     "format": "",
                     "description": "The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "875ed57f-7cb9-4636-834b-c14aa8414e6d",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "1d8bea8d-e3ac-449c-a534-d412cb475909",
                     "name": "auth",
                     "format": "",
                     "description": "(Optional, default READ) The permission (READ, WRITE, DELETE or PERMISSION)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "dba7bbef-ba54-46b3-afb9-7212aed32aac",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1f320ed2-55f9-4289-9595-f56deb9ee1c8",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Add a new permission for a user on a domain",
               "methodName": "add",
               "jsondocId": "258eeab1-ca0a-40cc-9a0a-3fb6960b8add",
               "bodyobject": {
                  "jsondocId": "a3b86bed-7db9-44c6-a7c3-30f6b63af2cd",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "a c l"
               },
               "apierrors": [
                  {
                     "jsondocId": "7e4c3e86-6355-4511-994e-c6c37122a2da",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c15f8764-217d-4a78-80ee-4f881ac1d958",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e3ad8ccf-4739-45b1-a51d-44abf7e5d590",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7d2041d5-1297-45c3-b7df-8c92f5b0c7a0",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "6b19034e-f933-4ba4-917a-c17dd4685c3f",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/domain/{domainClassName}/{domainIdent}/user/{user}.json",
               "response": {
                  "jsondocId": "2216ff7c-d8e5-4489-a63f-877694f2cce5",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "List of all permission name (empty if user has no permission)"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "f72ef362-dacd-422e-8f0c-8d007b4c0dc5",
                     "name": "domainClassName",
                     "format": "",
                     "description": "The domain class",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1eb94274-82fa-404b-851a-59c0f89750f7",
                     "name": "domainIdent",
                     "format": "",
                     "description": "The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "042a73c9-5754-4439-bb45-e2271dfe158e",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "bc0061d1-7d89-4bca-bd7b-875f6316ff49",
                     "name": "auth",
                     "format": "",
                     "description": "(Optional, default READ)  The permission (READ, WRITE, DELETE or PERMISSION)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "854d9b6c-c400-4dc0-b6cd-23a484bdb568",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "070ccce1-250c-4736-a4c5-9b957adc0c06",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "DELETE",
               "description": "Delete a permission for a user on a domain",
               "methodName": "delete",
               "jsondocId": "1592c336-9efa-4835-aa98-4d9058a38683",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "6068764e-8ccf-4fa0-8d66-5cd99b58b7b2",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "55c79401-02f9-4d23-9e2d-38c50377afa8",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0d0d44f4-28e5-4035-b2f9-9932f122ed25",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "822bc99f-7d81-40f2-b02e-a50c9b1aff18",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/domain/{domainClassName}/{domainIdent}/user/{user}.json",
               "response": {
                  "jsondocId": "2f6ff50b-d42c-42af-a6a0-f41c2ba7032b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Delete a permission"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "886f99c9-16dd-4dc8-b28b-c309a0e82740",
                     "name": "domainClassName",
                     "format": "",
                     "description": "The domain class",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e78e6665-4f7e-4b7c-8548-df618ae1b118",
                     "name": "domainIdent",
                     "format": "",
                     "description": "The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2319db00-8934-48ce-8fe2-b1f3cc937d99",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "cc8cb8e9-aad1-4e03-b963-2afbadf45cad",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1c7e6461-eb22-4508-889b-347298b00fd1",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all ACL for a user and a class.",
               "methodName": "list",
               "jsondocId": "d4802c07-44ff-40a4-a399-47a955dcb198",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ea6934e5-ebc0-4567-9ca6-0c41f2435156",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6b47b6c7-ceb3-46e3-91f4-98994f3e1b5a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "04f736ee-b37a-422e-8a5c-02ae51329f2b",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "25342116-9528-4d32-be91-a0f485c9d0ba",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/domain/{domainClassName}/{domainIdent}/user/{user}.json",
               "response": {
                  "jsondocId": "7ef309ec-17a5-4333-abc9-f2abc95b2772",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "List of all permission name (empty if user has no permission)"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Security | acl services",
         "description": "Methods for managing ACL, a permission for an user on a specific domain instance"
      },
      {
         "jsondocId": "3166afda-ec93-49af-8b99-3b95825d4696",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "181c51c6-41f9-4e2e-abd4-c6399eb6e662",
                  "name": "id",
                  "format": "",
                  "description": "The group id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a group",
               "methodName": "show",
               "jsondocId": "69b449a3-e20f-4f41-84de-1e7824de9a4e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "f57c14ab-c31d-484f-bde3-6ce8a1ea1d89",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "35739939-fcab-40d4-b36b-f62ebf7c3bcb",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "73283f8b-a2e1-4334-bb9a-2550bd43cabf",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a1599da3-3681-484a-b17a-e4d6461e18c3",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/group/{id}.json",
               "response": {
                  "jsondocId": "64640633-c356-4d5a-8a56-6dc7f97fd5f5",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Group"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Create a group from the LDAP",
               "methodName": "createFromLDAP",
               "jsondocId": "14b94ad1-9f74-4438-a333-b1f4d5dae17d",
               "bodyobject": {
                  "jsondocId": "7f73d18f-d663-430d-91f1-596dbf309713",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Group"
               },
               "apierrors": [
                  {
                     "jsondocId": "9c5d9560-2ac0-4d00-9ca8-aa8083d80696",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "1a1986fe-bf7e-43f8-b8c4-d880fd9f14e4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "b22d27c3-96b1-413a-a909-3075205e73a3",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a29c3c03-1e0e-4b0e-a96a-fdaa415336b2",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "bb4d13db-0dfa-42f1-9123-9105c84f40e3",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/ldap/group.json",
               "response": {
                  "jsondocId": "0a686271-480d-4183-a515-91f7351549e1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Group"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "d01a900f-5f3a-48d4-86f8-8bb7401b8104",
                  "name": "id",
                  "format": "",
                  "description": "The group id ",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Check if a group is in the LDAP",
               "methodName": "isInLDAP",
               "jsondocId": "4d854bd3-99f3-4f92-bcec-601423487a57",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "3a203e5c-a370-4761-a881-2c532cfb6432",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "4c27ce7e-7237-4994-9934-2da9c7839be9",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "dccb72ce-d586-4ae8-a79e-6c65d7c859e5",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e4f72af0-0188-4b29-9b5c-bd7aab80784e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/ldap/{id}/group.json",
               "response": {
                  "jsondocId": "b5c95a28-395f-4f19-88af-7b92cec90534",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Group"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "1edf5b52-4f01-4b64-b4c8-0eb4ed506d9c",
                  "name": "id",
                  "format": "",
                  "description": "The group id ",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Reset a group with the informations in the LDAP",
               "methodName": "resetFromLDAP",
               "jsondocId": "b22c1c87-fd09-443f-abee-50ba241c2b25",
               "bodyobject": {
                  "jsondocId": "ba633c2e-cc2d-4862-85fe-ac71792a7f78",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Group"
               },
               "apierrors": [
                  {
                     "jsondocId": "766f0623-967b-4437-ba12-2825e9ddebc9",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "46e4673f-4cf5-42dc-9079-94d84f775cd3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "69daa601-5136-43a7-8fc8-c5023a76b768",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d20c5104-efbf-4f9e-99b8-57f767a871cf",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "c09daa19-7d18-44b4-9607-2c81c69e7cb1",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/ldap/{id}/group.json",
               "response": {
                  "jsondocId": "202bc586-f3d1-442e-9397-f1d56f2f903e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Group"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new group",
               "methodName": "add",
               "jsondocId": "e723b290-deea-486e-b674-3f66bbedb484",
               "bodyobject": {
                  "jsondocId": "780f6349-f94d-4cb7-8a3a-5849fef75a61",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Group"
               },
               "apierrors": [
                  {
                     "jsondocId": "5f6639d7-e39f-454a-a4f9-c9689beb9224",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "1cd97717-87f2-4dca-a358-f4e15ee2b475",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7b3f8968-2562-4b63-8d27-616663efa661",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b1cb01f1-be2e-4341-b75a-d3e514c7fc70",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "9b242071-ff51-449d-b6bb-0cd53ed6b6f6",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/group.json",
               "response": {
                  "jsondocId": "25562441-9451-457e-a7fa-1ea769734be6",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Group"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "cf3e6567-54d1-4632-a951-edf74baa3d2c",
                  "name": "id",
                  "format": "",
                  "description": "The group id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Edit a group",
               "methodName": "update",
               "jsondocId": "b1b1477c-a1dd-4f0e-bf7a-9700d7227105",
               "bodyobject": {
                  "jsondocId": "d560e99a-fb13-49b6-b618-ae0e08584d56",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Group"
               },
               "apierrors": [
                  {
                     "jsondocId": "ed954ec8-396a-47cf-96d5-9604f49909aa",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c948dd7b-20ac-4444-a97d-930d850feb5d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a5d2d065-650f-4ea5-a139-0fa95c9d9523",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "402f538b-5e54-4ced-a55c-a9d54d84addd",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "53f592ca-2da7-4dc9-97da-768d8e55cd26",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/group/{id}.json",
               "response": {
                  "jsondocId": "059bccf5-5419-4d36-9328-8e8d38952d5d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Group"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "45ea3ec3-5089-4904-8336-13f7b8b5c8af",
                  "name": "id",
                  "format": "",
                  "description": "The group id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a group",
               "methodName": "delete",
               "jsondocId": "c5ef5bf0-2a05-426a-ba71-d2c3d9aa76c6",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1c9f8492-6f29-4e4f-8bbe-c5829b282297",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c97b1620-4165-4a1f-b11c-46c7824a7519",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "2d88d70c-19c4-45d6-aa4c-79063edd29bb",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7f5e6ca2-a787-4523-956c-113bf4bcc9c7",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/group/{id}.json",
               "response": {
                  "jsondocId": "f0c747af-3e51-46a1-8409-283c1f174fc0",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Group"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "c659f8cc-45a6-4035-8e61-89df4084358d",
                     "name": "withUser",
                     "format": "",
                     "description": "(Optional) If set, each group will have the array of its users.",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "47d6c5fc-e5e4-45e2-a6dc-8c72dece59b9",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "65f639ca-168c-4ce8-8e93-c19fd5f092b0",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all group",
               "methodName": "list",
               "jsondocId": "dabbd4a1-cab4-4fc7-acbc-bf5416de7b9c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "52705095-b722-43c7-9d6c-832686ce6259",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8792a1eb-0518-4e88-8f6b-f3ff7ca665ba",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "48d55e9c-259b-4d58-8b62-6307ec792bae",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6714d321-a802-48b4-b480-25ee8d108a9c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/group.json",
               "response": {
                  "jsondocId": "60dd0157-f524-4702-aaa3-9de6d39e547c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Group"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Security | group services",
         "description": "Methods for managing user groups"
      },
      {
         "jsondocId": "7639e3ae-c826-45e0-8ef3-03b4dcedb17d",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "287de597-e7af-40ef-a50e-b96afea2cd1c",
                  "name": "id",
                  "format": "",
                  "description": "The role id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a role",
               "methodName": "show",
               "jsondocId": "4f8f1348-3c12-4277-ad8c-bb32b33255f3",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "bfa2d5d9-bff5-48b8-9195-42ae627b9a60",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8a25f593-0296-4b24-b213-2d1cff8b9ab0",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "6727d84a-2956-4eee-a7dc-66760400d6d4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f77b2d6c-be1f-450f-bdee-be5b01f2a678",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/role/{id}.json",
               "response": {
                  "jsondocId": "a9ad1bb9-6f87-47cc-ba78-6a917f760ec7",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Sec role"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "76e1e653-342d-41b8-a3e6-e9892517bd6e",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e80a4fac-2d92-41da-b547-21d50f1049b2",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all roles available on cytomine",
               "methodName": "list",
               "jsondocId": "7d9f1501-16d6-4e16-bcab-75f8b17ab061",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "0748b43e-e54d-4a00-9b3c-6fcad8ed1914",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "32f00e0a-44f9-45d8-a1c9-ce22d066a8f4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c26bfef5-10ec-43b3-b023-8e206e0404bf",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "5cc075f6-167e-4291-8bf2-086cb37d3f19",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/role.json",
               "response": {
                  "jsondocId": "0e4c2fea-bff2-4c4a-b53e-4e574208b554",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Sec role"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Security | sec role services",
         "description": "Methods for managing user role"
      },
      {
         "jsondocId": "a73ec5e0-9568-4460-bcf8-59f644021afd",
         "methods": [
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "484a8229-faf1-4d0e-823f-a76bc404abbd",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ad8772b1-482c-4f6b-bddf-ae3b1ab6659a",
                     "name": "role",
                     "format": "",
                     "description": "The role id",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a user role",
               "methodName": "show",
               "jsondocId": "25a7ecc6-9e76-43b4-94c4-4568d85f26dd",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "5e35d806-6dcb-4c8a-901f-6a4553316dd1",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "655d5512-e7a3-4f64-8127-d5078131cffd",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "9449d986-194e-492c-85a4-afd479c38268",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "26b8ca31-a002-495f-82d5-266491a5cf6d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{user}/role/{role}.json",
               "response": {
                  "jsondocId": "c25f0f21-3d19-4e3e-91b5-2b07f3df3f00",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Sec user sec role"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "f01e3e83-2a6d-448c-9122-1f43bc66c5c5",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4d64350d-b400-49c3-93a7-72c02c03701f",
                     "name": "role",
                     "format": "",
                     "description": "The role id",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Define a role for a user. If admin is defined, user will have admin,user,guest. If user is defined, user will have user,guest, etc. Role may be create or remove",
               "methodName": "define",
               "jsondocId": "45696182-601e-4563-b52d-ce4967751a7a",
               "bodyobject": {
                  "jsondocId": "e369b227-fb55-4dc5-8414-a6db968123ad",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Sec user sec role"
               },
               "apierrors": [
                  {
                     "jsondocId": "d8e9671a-352c-492c-82ab-2deb63d3312c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "02871b75-c2a0-44b8-b152-e150d884bf63",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "6980bf4b-e724-41d9-b4ef-64646e98dff8",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "aef0beef-2598-452f-8968-3d248ef07bb3",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "7e0e17e9-cdc2-432f-aed9-f43b1f42b089",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/user/{user}/role/{role}/define.json",
               "response": {
                  "jsondocId": "cf29a59c-83f3-4418-904f-7e16f91f560e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Sec user sec role"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "3dea64c6-a054-4ef9-9274-19890bd2e16f",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "44041e78-c952-472c-838d-61b7ad150d1e",
                     "name": "role",
                     "format": "",
                     "description": "The role id",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "POST",
               "description": "Get a user role",
               "methodName": "add",
               "jsondocId": "9fb44133-86fc-4ec4-b4fd-b38e1fa90a45",
               "bodyobject": {
                  "jsondocId": "0c05095a-7f83-4ed9-a0a2-5733aa234c1f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Sec user sec role"
               },
               "apierrors": [
                  {
                     "jsondocId": "06e7c101-32fd-4dab-b7c3-47c435a58f6d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9a099c81-86fe-4abb-9e3a-22ce42fcadcd",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5c66b0d1-d78b-4f79-be02-01575ebefad6",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d315042f-8891-4a56-95a8-9377b28f2144",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "21cd2dad-114f-4938-84a3-bf594b1e1863",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/user/{user}/role.json",
               "response": {
                  "jsondocId": "00169885-8ff1-4261-815c-af374703a0a2",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Sec user sec role"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "9acb1d66-e69c-4814-99c4-983338dc1623",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "722fadce-cff9-4598-b934-7816e51ef677",
                     "name": "role",
                     "format": "",
                     "description": "The role id",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a user role",
               "methodName": "delete",
               "jsondocId": "b298315c-6411-4835-a29c-b8be74bac501",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "389382ce-cefc-4657-8634-992e8257c5e3",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c4a2ad79-4af4-4494-aae1-50463983c81e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8c260bc1-1251-4e6a-abc4-9f3df85e428c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e2f4e8cb-f388-4aa3-891a-572e7ed2a05c",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{user}/role/{role}.json",
               "response": {
                  "jsondocId": "1938ce21-f81d-4457-8311-9f1a6b7eb15d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Sec user sec role"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "ff460913-198d-4f81-8013-aaabb38dc59d",
                  "name": "user",
                  "format": "",
                  "description": "The user id",
                  "type": "string",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "f429ebbb-bfbe-4e36-ab42-cb1cf66b35cf",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3be6e8eb-61b2-41fa-9103-14081c37f80d",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all roles for a user",
               "methodName": "list",
               "jsondocId": "401a6464-2ffb-4d49-90b8-058949e19413",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "72928f33-9908-479a-a8e7-eb0489bf3391",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "57350777-dc13-4f8a-ad8a-16b4bdeadfa3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "78f66729-8f6a-4450-9285-f9387fa937d8",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d30cde18-7e4b-4542-9efc-5daccc5ae56e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{user}/role.json",
               "response": {
                  "jsondocId": "755e7dc5-ce5e-4cdd-be0d-33b7f2d2bf60",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Sec user sec role"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Security | sec user sec role services",
         "description": "Methods for managing a user role"
      },
      {
         "jsondocId": "8e621479-15a4-4fe9-9ba4-3b1bb5105508",
         "methods": [
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "3c8da6f6-a198-4d82-a18e-ce90fceb4f99",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "97f14e60-ce05-40dd-bced-5f3de4970d93",
                     "name": "group",
                     "format": "",
                     "description": "The group id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a user-group relation",
               "methodName": "show",
               "jsondocId": "70856ade-a106-4e53-80f8-a471cb3dcac6",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ac3a4aac-210c-44f1-925c-108b80822ee8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ae9e699c-7249-464f-b106-b9d5e231cbd4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5b4e9fe4-7488-48a9-b3ea-52c4c667aae6",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "0bdfa020-c302-42b7-ad3c-2faa0307db83",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{user}/group/{group}.json",
               "response": {
                  "jsondocId": "8d4da1ba-9551-4168-8b36-68678d8b34e0",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User group"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "3261b4d6-7348-4620-8895-377ea19177b8",
                  "name": "user",
                  "format": "",
                  "description": "The user id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Get a user-group relation",
               "methodName": "add",
               "jsondocId": "1b1feee2-f2ef-4dad-83da-b923cec56fc1",
               "bodyobject": {
                  "jsondocId": "0928c014-fe07-48df-9289-a94002b2b467",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User group"
               },
               "apierrors": [
                  {
                     "jsondocId": "fb8cc4c0-192f-4b9e-82f3-458c86b31f21",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9b40d8da-7f15-40dc-a65b-e625ad43c02d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ba2c458a-6eab-43ad-91c5-b25db584b2a9",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "1c723857-4ddb-4cd1-9151-cc3e4ec40b67",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "07cafd96-f076-49c2-8bdc-97b8dd2123cd",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/user/{user}/group.json",
               "response": {
                  "jsondocId": "adcf7f90-905a-4056-a386-9a795e12fed7",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User group"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "8832a4d1-022f-4f4c-9b64-062bd145a8db",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "75ef7a53-f6ad-4f87-beb4-a38b9c03713a",
                     "name": "group",
                     "format": "",
                     "description": "The group id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Remove a user from a group",
               "methodName": "delete",
               "jsondocId": "83f4ff90-0ddf-4654-a78b-6a9049b25813",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "76e09f81-0d08-440f-a897-a1e703703b41",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "cf021518-e008-4001-9912-83d7b9376331",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "cdb1ae3a-2e8f-491d-a40c-13765d7c9752",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ab9b0bef-2274-407a-aeaa-4bf3bd57351a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{user}/group/{group}.json",
               "response": {
                  "jsondocId": "82e15f07-5a42-4c28-aed1-7f09944f41e4",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User group"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "4b71f38c-8185-4d5e-9660-c25d73c23d5d",
                  "name": "user",
                  "format": "",
                  "description": "The user id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "d47d1439-315b-4389-bc90-3361ff670292",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "fe7ca343-4035-4b6d-8010-b75d6c57aa62",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all user group for a user",
               "methodName": "list",
               "jsondocId": "c6d9d054-2a8b-46f2-9d7d-3b3ef84c1d7d",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "65d48470-40fa-45f8-96cb-7b6b8db9ed29",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "0e43f27b-720f-4e8b-b8b2-32a1a130ac99",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "96a59734-36e0-4e85-be5f-2e79bb7fcc6a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "9fffcc4d-d4ff-4121-9b24-cec3ea7c2254",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{user}/group.json",
               "response": {
                  "jsondocId": "1b260eb8-80e7-40e7-acc5-506e58f78ebf",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User group"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Security | user group services",
         "description": "Methods for managing a user in groups"
      },
      {
         "jsondocId": "6050c705-2176-4a5e-a2e5-9f7bbeabef06",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "26698783-f003-491c-b0c4-538b7ade8e82",
                  "name": "id",
                  "format": "",
                  "description": "The user job id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "bef83b49-ee40-4f5b-9845-1c8017accce0",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "85296635-3b11-45ac-b6ea-f6ee8086da19",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get a user job",
               "methodName": "showUserJob",
               "jsondocId": "83dd8b41-6273-4551-b66e-754e8e045fc2",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "468c7185-b7c3-424c-947f-eee1798b531f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7057280c-4d6e-40d0-9f10-6d8298cfc659",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "3eb05617-95fb-447c-83c6-4ee80c3dbb26",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ef266c3e-54b9-49f6-9dd7-a6ef7c7f0468",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/userJob/{id}.json",
               "response": {
                  "jsondocId": "36ebde00-33f8-405b-b289-4e26dfa49bef",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User job"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "bfec485c-4494-418a-b8fe-5cde859db0d0",
                     "name": "JSON POST DATA: parent",
                     "format": "",
                     "description": "The user id executing the software",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "aa140d44-782d-4e31-9684-4506fa05ca9d",
                     "name": "JSON POST DATA: job",
                     "format": "",
                     "description": "(Optional, if null, software/project params must be set)The job id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5414b605-a6a1-48a1-b8c9-7e359b935c56",
                     "name": "JSON POST DATA: software",
                     "format": "",
                     "description": "(Optional, if null job param must be set)The software of the job",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1f95d450-52eb-452c-abb3-fb8395640110",
                     "name": "JSON POST DATA: project",
                     "format": "",
                     "description": "(Optional, if null job param must be set) The project of the job",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "POST",
               "description": "Create a new user job for algo. If job param is null, a job will be create.",
               "methodName": "createUserJob",
               "jsondocId": "95b582c4-8e87-489f-bc71-5f10938082b9",
               "bodyobject": {
                  "jsondocId": "0c39a124-08c5-47d2-ae08-edff0ed16d47",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User job"
               },
               "apierrors": [
                  {
                     "jsondocId": "f6e29911-ed46-4e33-9bb4-420fcf8e7f0c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f77801c3-266a-41fa-b31b-145c605c94c1",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "3c13943c-41b9-463b-9170-d4dc212047a4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "9d289292-d125-4069-8d06-2e7480cc1b88",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "6ae23e0a-9a93-4ada-8172-cb1470b22971",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/userJob.json",
               "response": {
                  "jsondocId": "486f708a-059c-4a89-a63d-590f1d83b491",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[userJob: x]"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "bc158119-697d-45dc-93f9-eda00152133f",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "62cd9351-801a-41dc-87ab-a2c7f07c1d1b",
                     "name": "tree",
                     "format": "",
                     "description": "(Optional) Get a tree structure",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e8f99a86-1826-41d6-805c-0b57a7bac4ca",
                     "name": "image",
                     "format": "",
                     "description": "(Optional) Only get job having data on this image",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1f59c95f-5ca4-43c2-a42c-b9ff59fca578",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "eb1ad070-04da-4eb5-9a85-9fd8f38a3947",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List user job for a project (in list or tree format)",
               "methodName": "listUserJobByProject",
               "jsondocId": "7e5379b5-9b19-4382-977e-447e8ab6b557",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "752b55d0-67ca-4e6b-b04a-87f7afe33f87",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d56bfdb7-ae0c-4344-99f8-0012c68532a9",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "6c7e3f37-745a-4166-8d6a-67657e30447e",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "ec8eb3e5-a65a-48e6-99b8-2be62786597b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/userjob.json",
               "response": {
                  "jsondocId": "9180583c-f0d4-41af-85fb-e5490108a1c1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[userJob: x]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "e63fc27a-4044-4d35-99bf-87424deee7af",
                  "name": "id",
                  "format": "",
                  "description": "The userjob id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Edit a user job",
               "methodName": "update",
               "jsondocId": "2fff44e0-4dca-4fb9-85d5-ea768dc17633",
               "bodyobject": {
                  "jsondocId": "dbc9db78-dc3c-4e81-b68c-e9ee2d2134ee",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User job"
               },
               "apierrors": [
                  {
                     "jsondocId": "94884d93-4a9c-4272-8e35-2b39f0edb49c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7d90220b-6574-4737-accc-135e16f06018",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "2259cfd7-426d-4399-b3cc-2ccb8519fd57",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "80a3e19d-58ae-4954-a4ce-e4b2bf2b4440",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "8ed77c28-670e-4f3a-809e-95703154fd9c",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/userJob/{id}.json",
               "response": {
                  "jsondocId": "91f07b1d-2839-4079-834c-c0ffe28e5cd5",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User job"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            }
         ],
         "name": "Security | user job services",
         "description": "Methods for managing a user job, a user created for a software execution"
      },
      {
         "jsondocId": "cbe5bf65-65d8-4e7a-ac07-d77df6bf4f0b",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "9dde892d-5e39-4d59-b811-50a6c43f497a",
                  "name": "id",
                  "format": "",
                  "description": "The user id or the user username",
                  "type": "long/string",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a user",
               "methodName": "show",
               "jsondocId": "89a7151d-7e3e-4cd1-b427-8bf5bb82960c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "396c5e7f-8372-42c6-92e7-d88b20f9c2fb",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "49c65802-1e13-4cff-8da5-82d9b100f00f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ae71989c-23d4-41e1-9755-4c49fb0a96df",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c881afd1-0ba7-489d-9c9f-77eee1f542a8",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{id}.json",
               "response": {
                  "jsondocId": "66cd9123-130b-4380-93cd-22a239073b17",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "a00d0793-3163-4711-ab65-112749e8682b",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "a9aa646e-8b70-4617-a50a-b35b9af4ad7e",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b9834c9f-b62f-494f-988b-e7e0ebd116d9",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all project managers",
               "methodName": "showAdminByProject",
               "jsondocId": "4b7b674a-f808-4e8b-87d2-750132d3a9d7",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "6fb4762f-c0ca-4be9-8e3c-eb030dfeb9aa",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a7744f6d-f51d-469d-92ad-bae7d267974d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4b0c0063-1a94-472c-bafb-20dcbfc8f947",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "3bd77bc7-c66e-4e0e-b3b3-f1e9c76b039e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/admin.json",
               "response": {
                  "jsondocId": "69694ab7-7cf1-43a3-b246-c3db236091bb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "0e03153f-4d4d-4035-884b-e587c5975eaa",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "f71db5fb-a0c0-466e-be09-559872030c38",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b1ddd672-2345-470f-8636-29acae68792d",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all project representatives",
               "methodName": "showRepresentativeByProject",
               "jsondocId": "ca10419d-7ac4-411a-b457-d999880a97a7",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "49ad8e00-0f7d-4993-8fed-65b9d4fdc0b6",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d0ed66e2-8514-4686-a53d-c6778750133f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "66da1587-1ad6-42d5-955e-a7e8a74b5128",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "95a3ac3d-9505-4d25-8d88-789788d7458d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/users/representative.json",
               "response": {
                  "jsondocId": "70ed5da4-bc91-41ef-8548-dc9e3a67ae26",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "5422973f-f837-4a9c-a037-1714a30afc2e",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "3762545b-44b2-43e4-8de4-135cb17b0880",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "be44a8b7-d829-4992-92cb-cd5d9cc59e9c",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get project creator (Only 1 even if response is list)",
               "methodName": "showCreatorByProject",
               "jsondocId": "f4160412-12f6-4e5c-9e49-c5781466556b",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "a8bcf609-562f-4e9c-85bb-0ab57399bbe5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "40f1bfba-f533-4c48-b239-5475094918d9",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8fa907f6-6f53-4fad-bf15-38c6593256cf",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "9decc139-3e66-431c-b4fd-bceffde5ea34",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/creator.json",
               "response": {
                  "jsondocId": "7a05977f-19f2-4b44-915b-3cb46b5e06c4",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "ce850862-910e-4123-ae31-f6a71846de48",
                  "name": "id",
                  "format": "",
                  "description": "The ontology id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "da1b88c2-4965-4a6e-9cd4-deb553064e05",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "da87c052-f13e-4376-bf91-d64eac46bcd1",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get ontology creator (Only 1 even if response is list)",
               "methodName": "showCreatorByOntology",
               "jsondocId": "0452035c-6867-44a4-9fc0-101028ddd3d1",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "e8310a3e-a822-49f2-a871-86d71773dd23",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "2d4381e9-784e-4aa5-8f2f-ef2d84d4003a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "93891223-d6c7-4309-b26a-d42a27ee7fd7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "17a75fe5-38c2-47d1-a724-c5d7aa6e0b27",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/rest user/show/{id}.json",
               "response": {
                  "jsondocId": "587feb4b-6f88-4266-92d7-8643ac332ad2",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "bee35165-0d15-4928-b833-f863d79c934d",
                  "name": "id",
                  "format": "",
                  "description": "The ontology id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "19c60d21-fb06-4ef1-981e-cc6742a57fe3",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "94250f30-52f6-466b-9509-454cd6d983bd",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all ontology users. Online flag may be set to get only online users",
               "methodName": "showUserByOntology",
               "jsondocId": "a32bfcc4-0a5f-4261-9b83-aa5fcbff1dfb",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "72db89c3-e108-4963-89b2-890a9fe5b2eb",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "272d9bde-c698-47a1-8250-e24206ecb05a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "0c5f1857-3feb-402f-9792-3e428ea0d168",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "1fbcb46c-94b7-42a3-8969-26d74b3d214a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/ontology/{id}/user.json",
               "response": {
                  "jsondocId": "c5661189-eb02-46eb-8ff5-106149f618b8",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "81322afd-17e6-4bd6-8e44-59895e69ef44",
                     "name": "id",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "10a1becc-bd18-4782-9c14-4f59659f5bd6",
                     "name": "image",
                     "format": "",
                     "description": "(Optional) The image id, if set add userjob layers",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "cdba3a2e-ae56-437d-888e-45587d8243b5",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1b328048-b052-45d8-aa04-a62bbbde465c",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all user layers available for a project. If image param is set, add user job layers. The result depends on the current user and the project flag (hideUsersLayers,...).",
               "methodName": "showLayerByProject",
               "jsondocId": "ac767cd8-8617-4597-8587-ace7b3512148",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "5a56df82-1352-4d6a-8287-196e6c1654e7",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "af4541da-fc9a-4238-9e4b-6049f7646ec5",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "59b11e5b-4d98-4e98-b0d0-f465f7e82775",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d6cad20c-6c16-457f-b2dd-baa3a2d3d408",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/userlayer.json",
               "response": {
                  "jsondocId": "7e11162f-e453-4f6d-86ed-f52629b5fe30",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "37030cb3-9b95-456c-a0bd-56eca92d8c89",
                  "name": "id",
                  "format": "",
                  "description": "The storage id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "8c049870-05eb-407d-90c8-bd1d837cacd6",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "df188b1f-7f18-4083-bda6-694eb674b9de",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all storage users.",
               "methodName": "showUserByStorage",
               "jsondocId": "340d3487-f34e-42ce-afcc-a81b8e43d173",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "a7d1b2d3-cdfe-483b-87ce-9277c84f680b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "c1c436d9-3e83-4ab2-b562-1af540a9be31",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "09667b73-99cf-4f55-82ef-a76d3de9ac95",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6e9f5677-7056-43b0-ab93-0eca102faa3d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/storage/{id}/user.json",
               "response": {
                  "jsondocId": "7fb2c8a7-f95f-434d-8df7-c66fc1c887e3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get current user info",
               "methodName": "showCurrent",
               "jsondocId": "e411423a-c88b-4330-9c28-7997d6b8341c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ada1297d-51d2-4d38-bca9-a9ad32689606",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "eadbe64e-c936-49d1-8e03-334aa10a27e5",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "b1fd15f4-8101-440d-a048-e67b6996f73c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "50703e2c-9f2b-4780-99ba-5f3150cc580a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/current.json",
               "response": {
                  "jsondocId": "a7e3cfe2-40b9-4e7e-ad37-9535f6e842ec",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "ec4c08a2-7d53-43fa-9048-bc5b4cc2828e",
                  "name": "project",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "07b3a5fd-dc91-42f0-9c28-0a490258d0e2",
                     "name": "online",
                     "format": "",
                     "description": "(Optional, default false) Get only online users for this project",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c8c9172d-a10f-4358-9b6a-1eaa2e914cec",
                     "name": "showJob",
                     "format": "",
                     "description": "(Optional, default false) Also show the users job for this project",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "317af8d5-59af-42f0-896e-26cca60203ff",
                     "name": "withLastImage",
                     "format": "",
                     "description": "(Optional, default false) Show the last image seen by each user in this project",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "81fb86c1-9fec-40ad-82b7-e570dc45af53",
                     "name": "withLastConsultation",
                     "format": "",
                     "description": "(Optional, default false) Show the last consultation of this project by each user",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3d0cd503-743f-4a58-adc9-53f3130d9ec1",
                     "name": "withNumberConsultations",
                     "format": "",
                     "description": "(Optional, default false) Show the number of consultations of this project by each user",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7bc4aed2-e736-4ecc-a267-1fa6dfffde1f",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6d34facd-d271-4a02-be55-10587c933ccb",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all project users. Online flag may be set to get only online users",
               "methodName": "showByProject",
               "jsondocId": "8814de65-e531-40fa-89e1-bc33bbbce2b2",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "46914425-0129-4eab-8071-c6a5958b4403",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6e2a56a2-2536-46d1-a6a4-14089004a188",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "712b5ffa-d587-4583-8a71-b849bd5e1ce9",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b40b6c2c-bf25-4696-867d-1765f49aa628",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/user.json",
               "response": {
                  "jsondocId": "f2cef005-94f5-4cbe-9330-44b1d650b802",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "7b604b3f-1e75-4600-8e3b-e83db38cdf19",
                     "name": "id",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "524fa08a-f5df-4d6f-be18-ec964ae97596",
                     "name": "idUser",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add user in a project as simple 'user'",
               "methodName": "addUserToProject",
               "jsondocId": "25692068-c01e-4241-bed7-90793c5b14db",
               "bodyobject": {
                  "jsondocId": "59f8eaea-a3e2-4af4-b43e-1470675e0fb7",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User"
               },
               "apierrors": [
                  {
                     "jsondocId": "ad50f5c5-6baa-4547-8844-19d9346e1227",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "4d81561b-f266-4a41-bdb4-0969aa7d6627",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "39ef4508-11f6-45b7-903d-8bc81d158a2c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b6d89968-e25e-417d-ac5d-061772428ead",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "5e371faa-9ab0-4de0-9296-45711af9c4b5",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/project/{id}/user/{idUser}.json",
               "response": {
                  "jsondocId": "4231399f-be31-4959-aaff-b43f5a5191f1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "d0ebb854-443e-432b-8b2e-67e433fa7ede",
                  "name": "project",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [{
                  "jsondocId": "a53acf83-bee7-47f8-9dd6-675a2a68d969",
                  "name": "users",
                  "format": "",
                  "description": "The users ids",
                  "type": "array",
                  "required": "true",
                  "allowedvalues": []
               }],
               "verb": "POST",
               "description": "Add users in a project as simple 'user'",
               "methodName": "addUsersToProject",
               "jsondocId": "aba9b499-9687-4410-a3ff-00737ffcc52b",
               "bodyobject": {
                  "jsondocId": "bfb57fe4-ca6c-4fc5-b4ec-08cbdbae780d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User"
               },
               "apierrors": [
                  {
                     "jsondocId": "ed128524-8290-4d93-b7fb-8aab1c57e915",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "59b856cf-4250-4136-8910-58ed60f1752a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "f5ec9c3b-5eb8-4fa3-a63c-2f61f3e9b115",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "82743b6a-70c8-44bd-a33b-7d1e4785c27a",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "9acf47bd-18f6-4996-9921-ead56202427a",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/project/{project}/user.json",
               "response": {
                  "jsondocId": "048a65c5-028d-4a1d-9b50-74cd8e98e42c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "f544be1f-d88d-4709-9318-63bc7e3fa591",
                     "name": "id",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2872c7c7-bebc-48cf-9e12-53bed4b78f51",
                     "name": "idUser",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete user from a project as simple 'user'",
               "methodName": "deleteUserFromProject",
               "jsondocId": "b592dce4-fed5-4a0f-b65f-7afb7464cb71",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "823e594d-a2a1-4bae-9b1d-217ff1a0b12e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e6d42ae3-38f3-4af8-bc31-eafcc9897a2f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5d8dd915-90db-4964-a4b4-66df7de953b0",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f6ec540c-9d54-4891-bb60-e31da2116008",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/user/{idUser}.json",
               "response": {
                  "jsondocId": "eeaa89e4-c930-4b73-ac83-9901fea1d2ff",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "b5e9cac8-d2a4-428f-9659-b7f09ee8c868",
                  "name": "project",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [{
                  "jsondocId": "267aaebd-14e9-416c-87c1-36c4d27db34a",
                  "name": "users",
                  "format": "",
                  "description": "The users ids",
                  "type": "array",
                  "required": "true",
                  "allowedvalues": []
               }],
               "verb": "DELETE",
               "description": "Delete users from a project (also delete the manager role if the user was one)",
               "methodName": "deleteUsersFromProject",
               "jsondocId": "7e3a6bb9-eb3a-4c26-80f6-4c3ed99fced6",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "24bb3825-cc2f-4958-b75b-0eccc152de2d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "1acb3ed8-d6c4-46eb-80d0-1bbdb00173b7",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e3338477-9475-47b1-a5b4-c90621f5aad7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "25b3a4be-8ca8-44da-97c3-18880203d70b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/user.json",
               "response": {
                  "jsondocId": "63ee176b-d676-42a7-9f4d-149cbafb4c90",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "0b4766c7-a616-4376-8aa7-885d0afe22d9",
                     "name": "id",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1ab8d04a-5765-40e1-ad3e-b9f8ee6ae75d",
                     "name": "idUser",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add user in project manager list",
               "methodName": "addUserAdminToProject",
               "jsondocId": "ec53e763-6710-4450-b92c-af4db4232a8d",
               "bodyobject": {
                  "jsondocId": "0ef7d85b-a271-499e-9176-b3c99a411b1f",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User"
               },
               "apierrors": [
                  {
                     "jsondocId": "85bb224a-41d8-4be6-b532-e6b3baf11742",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "14cf72a4-c212-41db-a910-f14f2d7b7248",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "30a4d7b0-d23b-4761-8f11-56e1b8741e20",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "170718cd-c573-4226-a278-2d19aecc95d9",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "02f8472d-5b4e-4e6f-9cad-d070f7d12cf1",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/project/{id}/user/{idUser}/admin.json",
               "response": {
                  "jsondocId": "91ba06d5-c076-495b-bee2-6acc8d34b9bd",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "0e9af929-f3f0-42ec-80e0-17ccb6dc3e53",
                     "name": "id",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "cd1a80c3-38d5-41b3-9ed4-42afcb1455d3",
                     "name": "idUser",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete user from project manager list",
               "methodName": "deleteUserAdminFromProject",
               "jsondocId": "ce70d460-502e-43fc-bf3f-2933eb8f18cd",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "4bf28ff5-b754-4492-bc39-22b218370777",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "dee9f783-7db5-4757-a1f0-c93e6be1aa53",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c052e5a5-9f93-4fbd-b995-1062ba07a50a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "fda4a67c-e6a7-4ef0-a40d-e91f84e52c56",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/user/{idUser}/admin.json",
               "response": {
                  "jsondocId": "e3c4487d-544c-4fa3-8914-826275618f39",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "432451e4-2607-46bb-89b1-f471e6e656bb",
                     "name": "id",
                     "format": "",
                     "description": "The storage id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "bf6d07d9-b773-45f3-9c7b-8a3677221512",
                     "name": "idUser",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add user in a storage",
               "methodName": "addUserToStorage",
               "jsondocId": "97af9891-207c-4e9f-b2f1-6901813ee403",
               "bodyobject": {
                  "jsondocId": "e7eef01a-b53a-4772-ab9f-7f598f995c91",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User"
               },
               "apierrors": [
                  {
                     "jsondocId": "9b9f7b04-d3ec-4305-ae5a-d187f4018559",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9ce22c30-9021-4fa3-a728-80eeb7ee50fe",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e0d0885a-74a6-4b2d-8a97-ee81c49dbf0f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f9615bcf-3413-43db-866a-154fcfef3912",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "885caf69-7225-4f83-93be-8bc18e8bef3f",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/storage/{id}/user/{idUser}.json",
               "response": {
                  "jsondocId": "43eec09a-4f13-4bd9-8917-38804ef4992b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "dfe96d9a-7520-427d-8f61-9299202bbafd",
                     "name": "id",
                     "format": "",
                     "description": "The storage id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0d841910-4e92-45a4-be01-741bdd002ed1",
                     "name": "idUser",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete user from a storage",
               "methodName": "deleteUserFromStorage",
               "jsondocId": "6ae1088c-9df6-49d2-9711-479747dc0620",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "2b0be4ca-4310-40f4-8765-c4f0a2c3ea0d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a0b50bab-83ea-4e9d-84db-5fab19c0658a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "046b75bb-d6ed-40de-99ee-425eff0f6c5e",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c3b09552-b6a8-42d5-80c7-52ba7c59d376",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/storage/{id}/user/{idUser}.json",
               "response": {
                  "jsondocId": "3e0caf88-255e-427d-82fd-36c809c4b261",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "empty"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "5d4a1234-73d4-4b02-b473-3f60ca4c046d",
                  "name": "id",
                  "format": "",
                  "description": "The user id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [{
                  "jsondocId": "c77d09bd-e28c-4920-a410-1bc7d3ec5867",
                  "name": "password",
                  "format": "",
                  "description": "The new password",
                  "type": "string",
                  "required": "true",
                  "allowedvalues": []
               }],
               "verb": "PUT",
               "description": "Change a user password for a user",
               "methodName": "resetPassword",
               "jsondocId": "4f0001cf-800b-4890-9e6a-677b3b4489ca",
               "bodyobject": {
                  "jsondocId": "767b363b-3255-48a5-adc7-970bca207c6c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User"
               },
               "apierrors": [
                  {
                     "jsondocId": "e229febd-5611-4e98-a5a4-1253113e1cc8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a8e9eb83-fd2e-46bf-90fa-ee9c8eb64e1e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5ab4e8fd-bf10-450f-92b1-6626404e4fdf",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "37368e10-b265-4c4f-a750-4bd3c261e94a",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "237a5bf6-36b0-41f0-be96-d01414e196c3",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/user/{id}/password.json",
               "response": {
                  "jsondocId": "e4fe31ff-b1e0-4fd1-8c40-abf8f3327030",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [{
                  "jsondocId": "ac75579f-5f21-490a-8aee-d97d9ab077b1",
                  "name": "password",
                  "format": "",
                  "description": "The password",
                  "type": "string",
                  "required": "true",
                  "allowedvalues": []
               }],
               "verb": "POST",
               "description": "Check a user password for the current user",
               "methodName": "checkPassword",
               "jsondocId": "72900120-cbca-45f6-90af-46e386a4d19f",
               "bodyobject": {
                  "jsondocId": "049f956c-e7a1-4e0b-9ab2-8436bbf4394e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User"
               },
               "apierrors": [
                  {
                     "jsondocId": "c2998aad-9fba-4cb0-962e-ea40c11afa17",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "520d0a93-d9e7-4cd5-a871-1811a75dc961",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "07ae3869-4478-43d0-ae49-9757d8c6fa08",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "187ce9d3-c341-46b0-87de-d05147e87855",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "031fb798-ad9f-4340-a388-849cd6274a3d",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/user/security_check.json",
               "response": {
                  "jsondocId": "02ccb33a-237f-4e0e-b4fc-3dd3b1aea1b3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "ce6b8a58-d544-455a-b7bb-12338512e189",
                  "name": "id",
                  "format": "",
                  "description": "The user id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "35bc1e14-fee0-4faf-8b83-782745f72a47",
                     "name": "project",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4da8b340-f3ee-4e36-bfa5-bfeae39b898d",
                     "name": "offline",
                     "format": "",
                     "description": "(Optional, default false) Get online and offline user",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d32f3464-fabd-45cc-a8be-91b78b7d6407",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c1d2a798-64c7-461c-b6d6-25dfd4595794",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all user friend (other user that share same project) for a specific user",
               "methodName": "listFriends",
               "jsondocId": "7fd7e412-4c12-40c0-a17a-dea5b3182b32",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "b0cfc68e-51fb-48d3-b702-10e3b128df99",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d2512308-5fd2-40ef-a8e5-ed5608fb506f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "331535ba-8ba7-4992-9d56-e6ee5e1a6ba5",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "add63b2f-68fb-446a-82c9-0441905b581e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{id}/friends.json",
               "response": {
                  "jsondocId": "eada4300-dfbc-42be-a3e8-3eed9b9fd115",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "33df55b9-37aa-489f-8c34-e1a97803257a",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "5dbf7566-3176-441c-84b5-5db38c43c604",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "245851fd-bf91-4a05-a6b4-8253a9a8c9e2",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List people connected now to the same project and get their openned pictures",
               "methodName": "listOnlineFriendsWithPosition",
               "jsondocId": "8cd0ba44-c5f9-4537-9cfd-b04de6b37aa0",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "e9bd6112-ad8f-4f0d-8c92-1e8795168c59",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "93dafe50-706e-475f-b3b2-747225663056",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "bcf4a51d-abc3-4ed7-a358-718073c0ad71",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e291d21c-461e-462d-966a-1dce82a7a74b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/online/user.json",
               "response": {
                  "jsondocId": "556af13a-dab2-46e1-aea6-8b5aec49f609",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "List of [id: %idUser%,image: %idImage%, filename: %Image path%, originalFilename:%Image filename%, date: %Last position date%]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "9c18e425-8c9b-4e97-b132-188d818f134d",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "4ae1229d-c06b-4108-a016-18718a3024c6",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6b202a3d-5b94-431c-86af-d4ff3e4ad81d",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all the users of a project with their last activity (opened project & image)",
               "methodName": "listUsersWithLastActivity",
               "jsondocId": "20732671-f9a4-4d33-b4d5-273431b0d945",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ff87de12-b0a5-46be-970d-cd3b3f61749e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "168d5d52-5be6-4444-803b-47a8d02b9784",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "b2d6c1ed-b101-4166-841b-cfd9aa1e922a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "4b7aee7d-78bb-4c89-8a7d-6c77550ec669",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/usersActivity.json",
               "response": {
                  "jsondocId": "d984f127-ad76-4e56-83cb-855ecc01af1a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "89811bab-5b8e-4cb7-978e-be9d980579cf",
                     "name": "username",
                     "format": "",
                     "description": "The username in LDAP",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "a576fa21-5978-45fc-bc72-092e849c17d1",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e63120e5-7b09-493d-9a32-ead55a9d7321",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Add an user from the LDAP",
               "methodName": "addFromLDAP",
               "jsondocId": "ec5605e9-17f4-4ed2-9dd2-d1592720999e",
               "bodyobject": {
                  "jsondocId": "2b9311fd-eead-4a17-aff1-8257e46a2ebd",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User"
               },
               "apierrors": [
                  {
                     "jsondocId": "4cd898b4-1cdc-4acd-8d95-12842e436478",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "dafdf1fc-fc3b-4113-97af-e5e29c70c308",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4b39ac4d-378f-47b3-861b-52099bcd40ae",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c3240fb3-a06a-421a-b42e-6d0b12147b11",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "fd3d451c-6a0c-4e7d-8be5-2779f78cfd57",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/ldap/user.json",
               "response": {
                  "jsondocId": "f71a4b0b-0aa3-4e88-a91a-e7313c43536d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "8a8bed4f-a4af-4e5e-81c0-aa9767172493",
                  "name": "username",
                  "format": "",
                  "description": "The username in LDAP",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "2afd5075-8387-4972-924d-649d2a454183",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "eef22839-639b-4959-867a-fb8f5256303c",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Check if an user is in the LDAP",
               "methodName": "isInLdap",
               "jsondocId": "1397c9d7-9d8b-4297-95a8-ca83cefdfb94",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1ebe9d56-ab9f-4fbf-9aa2-d048da8ae763",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6360fdbc-b1f9-4c2c-9d8f-564c30bedce0",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7342a8c9-9e55-4549-92ce-af45345d1218",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "87e0459a-b8a6-4a23-b7cd-96def1fc724b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/ldap/{username}/user.json",
               "response": {
                  "jsondocId": "d132c43d-5a2f-468a-b686-95a38ba12fa7",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "a63ca7c0-9ec9-4907-9da6-e4e478fdfbc6",
                  "name": "id",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "c966edfc-9dee-428a-ba06-5ae3227444c9",
                     "name": "terms",
                     "format": "",
                     "description": "The annotation terms id (if empty: all terms)",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3c837d76-916e-41ea-aae4-8a9cba548308",
                     "name": "users",
                     "format": "",
                     "description": "The annotation users id (if empty: all users)",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "578c13c0-0415-43f8-88b3-754feecb769e",
                     "name": "images",
                     "format": "",
                     "description": "The annotation images id (if empty: all images)",
                     "type": "list",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "d22e3552-269b-491e-83a1-6b74089b29e1",
                     "name": "format",
                     "format": "",
                     "description": "The report format (pdf, xls,...)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Download a report (pdf, xls,...) with user listing from a specific project",
               "methodName": "downloadUserListingLightByProject",
               "jsondocId": "df02f220-3ce6-4f62-9a4a-c1fba485365e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "97ef369f-affc-4c6d-9e44-f56f3722b4ff",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6bd7c851-593d-4d7f-bf3a-c1a967c23f22",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "42a64f94-d392-441f-8834-822eb619aa95",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "5ea24975-4019-451f-bfdd-6eb7bec9975f",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{id}/user/download",
               "response": {
                  "jsondocId": "ba551204-4e41-4033-bd71-1773847e498a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "d356af9a-ad2f-4fee-8427-2c39c4de2c8f",
                     "name": "project",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2601b8f4-01b9-437f-973e-ecfe73ec64ed",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Return a resume of the activities of a user into a project",
               "methodName": "resumeUserActivity",
               "jsondocId": "08b0aa6b-2879-40b5-9f8c-0e2f9b8889ba",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ad5b08bc-9582-40e3-9cfb-c06fb2487fb4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "630b7f24-ab0f-4193-8018-37d2351d4609",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a5c33afa-2956-405b-8421-3b644457aa47",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "8dfda649-71f5-4bd7-ac9a-4c4478a7a45e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/resumeActivity/{user}.json",
               "response": {
                  "jsondocId": "3b04247c-2e23-4ae1-97b6-723650df6b6a",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "41defca2-787c-4a09-8a78-587d76a2fe7f",
                     "name": "method",
                     "format": "",
                     "description": "The request method action",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "36c19092-63a9-4396-bbbc-4ec953235a42",
                     "name": "content-MD5",
                     "format": "",
                     "description": "(Optional) The request MD5",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "64599456-d6a4-4297-af62-190467950985",
                     "name": "content-type",
                     "format": "",
                     "description": "(Optional) The request content type",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "264c3ea6-3b54-448c-a870-c0183753e327",
                     "name": "date",
                     "format": "",
                     "description": "(Optional) The request date",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3518ba13-120a-47af-a7b5-47d51011272b",
                     "name": "queryString",
                     "format": "",
                     "description": "(Optional) The request query string",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "94407502-8ad2-420e-8980-5aa50624c078",
                     "name": "forwardURI",
                     "format": "",
                     "description": "(Optional) The request forward URI",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Build a signature string based on params for the current user.",
               "methodName": "signature",
               "jsondocId": "63f8779a-17a5-4315-a2e0-54105c079de9",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "76b5fd64-69ad-43bc-8eab-ea8ab611b80d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "66f407d4-e631-4d4c-971b-ee5b056adb08",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5bcce579-73cf-4943-9d81-feb3dc905792",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "4b83d6bd-1135-4a65-a61e-0d8d40e74e51",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/signature.json",
               "response": {
                  "jsondocId": "caecd95f-79d7-492b-af70-cbb20d683bb4",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[signature:x, publicKey:x]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a user, by default the sec role 'USER' is set",
               "methodName": "add",
               "jsondocId": "b75f7120-7c28-419b-a77a-5626d694a6f0",
               "bodyobject": {
                  "jsondocId": "5fbe7700-e81d-4870-a908-8d4a44a9a36d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User"
               },
               "apierrors": [
                  {
                     "jsondocId": "5bd1afa8-6c39-4917-9f8f-878530b8161d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e6e97799-d57b-49e2-841f-6d50d573c368",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c2b3ecf6-3d83-40ed-b06c-6652969872c7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "376c2338-d76f-426c-8d8b-ba916b59ee21",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "0ee7b1c0-a1c9-4191-9182-5b5078f6b99e",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/user.json",
               "response": {
                  "jsondocId": "3bdd37d9-e1c5-48ce-b6f0-bb9ca54d8e46",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "62b7bd6e-7a2d-428c-b4f2-2bf06ccecac9",
                  "name": "id",
                  "format": "",
                  "description": "The user id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Lock an user",
               "methodName": "lock",
               "jsondocId": "6ae23087-f35e-4266-904f-4c9efabf4f02",
               "bodyobject": {
                  "jsondocId": "e215c005-e674-45be-b8e9-3313001f785d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User"
               },
               "apierrors": [
                  {
                     "jsondocId": "874691d8-d64b-4264-870d-6eacea458aa3",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f3daefcc-6545-4396-8d28-2d5a729582f6",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ebfebaed-a4bb-4b17-b18f-302257ae9e06",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "3acd69d5-cbd5-4653-b208-798be45168b1",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "096a3ee4-6b58-4a44-a7ca-0ae2535cf957",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/user/{id}/lock.json",
               "response": {
                  "jsondocId": "a7373410-f0b8-44b3-8990-a7d03ff45d8e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "7b4f5ad7-1d67-47ed-aaf1-c3d7dcd333f9",
                  "name": "id",
                  "format": "",
                  "description": "The user id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Edit a user",
               "methodName": "update",
               "jsondocId": "119afce3-029a-4158-a6ae-7cf163612341",
               "bodyobject": {
                  "jsondocId": "f2f2d5d0-6b74-4827-8a25-32ce2a812e92",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "User"
               },
               "apierrors": [
                  {
                     "jsondocId": "7bac454f-71d3-4b14-ad25-0b71a9a6e084",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "41a09b2e-901d-42ee-bda1-c5c92b5f59f2",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "68b63496-ca77-4abd-a012-17be6abc92c7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c4089ed3-ff24-4de6-9fab-8a103d6c16cf",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "8a989ae4-da06-480e-bf5f-d66c9c20e0b3",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/user/{id}.json",
               "response": {
                  "jsondocId": "ec450fc2-5725-42bd-b0fa-5738754760cd",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "c62f80fd-470c-440b-94b1-cb12774be0b0",
                  "name": "id",
                  "format": "",
                  "description": "The user id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a user",
               "methodName": "delete",
               "jsondocId": "cca9fd21-95ac-4042-9007-33069b0b827a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "8677ad9c-800b-4ba7-8fe3-e8152a64d03c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "08b838a9-782a-4d38-bb3e-b454ffe7f45d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "058a8d86-e042-48d1-b5c7-7ed3f0430c20",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "353d61fa-d20c-44ae-b53e-fa92d6d8e395",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{id}.json",
               "response": {
                  "jsondocId": "d07ad793-8831-493f-936c-c4b62081dafb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "f2f03c71-cb81-4e76-b1ac-665c59ad64a4",
                     "name": "publicKey",
                     "format": "",
                     "description": "(Optional) If set, get only user with the public key in param",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6f10d145-79cc-4110-9717-19e2d7ea1a2f",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "58784da3-7bec-4bad-a6e2-94c1ae61eabe",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Render and returns all Users",
               "methodName": "list",
               "jsondocId": "5412d77f-a572-46d5-aae3-7405b7e949d4",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "5651d921-41c8-4020-9f01-b233fd95c8d8",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6b553aff-80f7-42e1-983a-a9c89af09da7",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "93016b7f-88a9-4c90-b426-11de11a554e8",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "cdd69bcb-4a1c-4b21-b0a3-67c6dfc1a9ce",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user.json",
               "response": {
                  "jsondocId": "f151b7ba-c145-4eca-aed7-291e4dbcd17e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "e3f0bae1-02ed-4129-80b6-655b43b0b11a",
                     "name": "id",
                     "format": "",
                     "description": "(Optional) The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "02f211af-072a-40a1-a015-94d31d5c34f2",
                     "name": "publicKey",
                     "format": "",
                     "description": "(Optional) The user key",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get the public and private key for a user. Request only available for Admin or if user is the current user",
               "methodName": "keys",
               "jsondocId": "fc985a3d-341f-47f8-8709-c241a9ad6ed7",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "72d63ef7-12a5-4bbb-8fb3-a455258fd710",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a4f4cfc7-54fd-40bd-9a76-b6dd8a9d7ea4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "47bffa94-98fe-44d2-90e1-70814bd6767c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f6177473-bcb9-4b60-9041-f8d651752ac6",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/userkey/{publicKey}/keys.json",
               "response": {
                  "jsondocId": "1d35a251-2e20-45b5-bffb-f6d95f6895e7",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "[publicKey:x, privateKey:x]"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "f801f146-71d7-4c12-bbcb-e2825872a8b1",
                  "name": "id",
                  "format": "",
                  "description": "The user id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Unlock an user",
               "methodName": "unlock",
               "jsondocId": "4ebe7c10-1ea1-4fb8-80fa-1a8375ad0125",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "fd32166e-0170-44bb-a27f-62dd210cfe47",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "68927acf-5e9d-4bae-8805-85356186446f",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ec865c8a-846c-47ee-9718-92ea6ae52760",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6a1643a3-8230-4b12-bad4-4481dd72e696",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/user/{id}/lock.json",
               "response": {
                  "jsondocId": "b0222da3-cca1-4ef4-8358-9d5bce64102d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "User"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Security | user services",
         "description": "Methods for managing a user"
      },
      {
         "jsondocId": "993aee5d-94bf-4d05-9ba7-967924da2e27",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "8c53943a-120a-472a-81da-f7ae6d42d70a",
                  "name": "project",
                  "format": "",
                  "description": "The identifier of the project",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "73fcdb10-8014-4366-92fc-1d7383c09f2c",
                     "name": "startDate",
                     "format": "",
                     "description": "Only actions after this date will be counted (optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9f48de14-f892-43c9-88d9-ca324ce5c68f",
                     "name": "endDate",
                     "format": "",
                     "description": "Only actions before this date will be counted (optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0e5d3842-40fe-4751-9330-50ee79047041",
                     "name": "type",
                     "format": "",
                     "description": "(Optional) If specified, only annotation action of this type will be taken into account",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get the number of annotation actions in the specified project",
               "methodName": "countByProject",
               "jsondocId": "d1bc8132-d2f1-4b2e-b36a-97343b479694",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "6f3fe0c5-8a3a-4f20-8234-7fed5184c6a6",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "31328f7f-688e-424d-8f3f-b54718a34f05",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ef2a22a3-6e11-492e-ba98-88d60e6cf970",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "9e832777-b7ee-4eab-9eed-8f171a6e76f7",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/annotationaction/count.json",
               "response": {
                  "jsondocId": "1a653de8-9034-4ff4-b642-002fbc2ffdc7",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Annotation action"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "c14f4097-6032-4848-a4f9-cb863f69c276",
                     "name": "annotationIdent",
                     "format": "",
                     "description": "The annotation id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "8228dde9-b0a6-40bc-9777-18ae03d2e9a9",
                     "name": "action",
                     "format": "",
                     "description": "The action",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Record an action performed by a user on an annotation.",
               "methodName": "add",
               "jsondocId": "d77f2a61-3fdd-4332-9a72-59f67959639c",
               "bodyobject": {
                  "jsondocId": "59e0caac-2f68-4317-9160-2f0784264cf1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Annotation action"
               },
               "apierrors": [
                  {
                     "jsondocId": "77fa1ddb-64da-48ac-a537-1899dafbf23a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "69a56864-c2ee-458c-9e97-bebfe1c5304e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "235dd698-b83a-414f-83f6-6c59242ad4bc",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "0ce8f3db-fbf2-484d-a117-c50c6254585a",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "3e0b65f0-28a3-4037-80a1-5edd5e94e598",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/annotationaction.json",
               "response": {
                  "jsondocId": "013f672c-32fd-416a-bd69-a0a93e56bb91",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Annotation action"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "ee4bfbfd-dae3-4b1e-b5f9-8477c4649bf9",
                  "name": "image",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "93eafea3-1cd1-469b-a22c-6846dd08be33",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "24e5d6e7-54a6-49c6-a150-6d6918a044e6",
                     "name": "afterThan",
                     "format": "",
                     "description": "A date. Will select all the entries created after this date",
                     "type": "long",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e1f59b39-3321-4c61-a683-2dea109b63be",
                     "name": "beforeThan",
                     "format": "",
                     "description": "A date. Will select all the entries created before this date",
                     "type": "long",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Summarize the annotation actions entries.",
               "methodName": "list",
               "jsondocId": "4787ac0d-f8ab-41a5-a35d-2aff56e3af14",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "02234bee-4422-4dec-9b29-d518c62ae7aa",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "133adfcf-2202-4765-a02c-6dfd6ebf166d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "31655b5b-39c1-4ea7-8000-d26ad81f7a5c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6a5b3a6c-43dc-4cd1-acc3-77fd4daa0cc6",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{image}/annotationactions.json",
               "response": {
                  "jsondocId": "aac9888c-2b7e-4dc0-adbf-9ece83df157b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Annotation action"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Social | annotation action services",
         "description": "Methods to manage actions performed on annotations"
      },
      {
         "jsondocId": "ff9babf3-e7c2-4f16-ba7a-9c4bd9e0d64b",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "81ff8f8f-ac7a-432c-a625-6777dbc1c3eb",
                  "name": "project",
                  "format": "",
                  "description": "The identifier of the project",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "79533277-3f51-4e28-b411-bc89225b4b54",
                     "name": "startDate",
                     "format": "",
                     "description": "Only image consultations after this date will be counted (optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c37d6ae0-10ad-4c4e-ad67-8302787dfc45",
                     "name": "endDate",
                     "format": "",
                     "description": "Only image consultations before this date will be counted (optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get the number of image consultations in the specified project",
               "methodName": "countByProject",
               "jsondocId": "257ca4ef-b764-4dc8-bd88-24004481b686",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "b3a3278b-c921-46ba-a02b-733efa59cb2f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "50a55f17-e7d0-45c2-92de-578269cd7677",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d819bef2-e6b4-46cf-90ee-afc38f617b9f",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "492977b5-5ef2-4a28-a9bf-62724d5c4ccd",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/imageconsultation/count.json",
               "response": {
                  "jsondocId": "5a676e39-65c8-4c6b-bc78-43d8f4c71880",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image consultation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "665a0e5a-db65-4964-ab32-890fe579a63f",
                  "name": "project",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "List the last consulted image by each user for a given project",
               "methodName": "lastImageOfUsersByProject",
               "jsondocId": "e43b3247-4c2d-45cd-9d9b-3a5f7ff25e1c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "e2c37508-7ee8-4d85-8d54-894226de10bd",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "db78e8f4-0649-48ff-8e04-5044b42d18f4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "582acebf-f73a-40fb-bb73-ce7e2d69cc5d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "3dba0cd0-c915-43b9-90ee-4932b4795191",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/lastImages.json",
               "response": {
                  "jsondocId": "f3a49501-faad-4157-bcce-1fa27c72bd89",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image consultation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "a0557ac1-84eb-4f91-ba31-12f9cbba9a83",
                     "name": "project",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f5d0ef5f-21c1-4469-a576-6c1c107debb6",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get the last consultations of an user into a project",
               "methodName": "listImageConsultationByProjectAndUser",
               "jsondocId": "18002b47-a934-4529-94bf-bf58dc05484c",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "bca8b115-7ac1-469a-804e-2182e25f742e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "456dd828-5b93-4308-a866-4061e6eda9d8",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "1d665039-3f8c-4d6c-8dda-503ef299c3b2",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "62615d60-f2cf-4e41-b5a2-f6cb7af3b9a1",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/user/{user}/imageconsultation.json",
               "response": {
                  "jsondocId": "8ee2ad46-53c4-4174-b43b-b6e5e340bcbf",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image consultation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "4ce9ed03-3950-41b7-8f95-42eee53b361e",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "0787bb9a-36a4-4190-9cb6-0346a00150e6",
                     "name": "project",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3988d87d-69a7-4835-8404-1490ec1515ee",
                     "name": "export",
                     "format": "",
                     "description": "The export format (supported: csv). Otherwise, return a json",
                     "type": "string",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Summarize the consulted images for a given user and a given project",
               "methodName": "resumeByUserAndProject",
               "jsondocId": "8bbbc00a-455a-4fb3-ac98-f4bc398e027a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "fbd6e87a-b6d3-4bad-8a64-594eafe21ff5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "e04cdce0-f294-42d7-b560-63aae7f27b12",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a7111903-34ff-4f76-b071-6e00bd93d4f8",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e77c2414-89e7-48cf-b5e2-c76167052b90",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageconsultation/resume.json",
               "response": {
                  "jsondocId": "b70e8d74-dd50-4e25-950d-7afb78b7d57c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image consultation"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "dcfd9397-ba73-4907-b124-9fd363a358b0",
                  "name": "id",
                  "format": "",
                  "description": "The image instance id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new image consultation record",
               "methodName": "add",
               "jsondocId": "e8a189ce-fccd-4ae6-b6cb-13d6b83b15cf",
               "bodyobject": {
                  "jsondocId": "f3a200fd-30ba-45d3-bb52-85d6275d85e4",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "image consultation"
               },
               "apierrors": [
                  {
                     "jsondocId": "99f1eaad-4dcc-43f8-8351-c16e5a8fd051",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "2e472a05-de3d-43d6-a44d-1c9282f85dcd",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "d7fef139-5655-4d63-beec-bea896346ce9",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "7bb3af86-0b05-45be-905f-22e033766b70",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "7488df55-262b-4f6e-9cd5-23871c03cd3a",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/imageinstance/{id}/consultation.json",
               "response": {
                  "jsondocId": "c1af327f-986c-42de-90f4-3ee56ab7c5c1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "image consultation"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            }
         ],
         "name": "Social | image consultation services",
         "description": "Methods to manage the consultation records of an image by a user"
      },
      {
         "jsondocId": "92173f5a-fa61-4fa1-984a-1fc37446c904",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "f54929e9-f881-4079-bfa1-33d666fd60eb",
                  "name": "project",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "89d26483-ca96-4e7c-92ae-ad4bf272bfa4",
                     "name": "afterThan",
                     "format": "",
                     "description": "The date when counting starts",
                     "type": "date",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "99ae3ec0-ec6d-485a-8a3a-6e93cfed9dd2",
                     "name": "period",
                     "format": "",
                     "description": "The period of connections (hour : by hours, day : by days, week : by weeks)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get the number of connections to all projects",
               "methodName": "countByProject",
               "jsondocId": "214689e0-f42b-42b6-9790-1c64d8266847",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "e1299965-26aa-4c6b-aad0-7328ae13592f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "beff3f38-2f5b-478f-908f-306c6b451b64",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "33129753-16cf-4018-a709-8e8d4850872a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "aebf28b3-d87e-4b51-ae34-7aa4d214b0ca",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/userconnection/count.json",
               "response": {
                  "jsondocId": "dfb8e207-322a-4bce-83d6-7d3137d5929e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "project connection"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "b349d05d-a14d-40cb-8396-82c62668596a",
                  "name": "project",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "2b8557bd-d0b7-4ac9-b9c9-5ce30882c420",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "46b85e4f-658e-40de-8b59-94790b234020",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List the last user connections in a project",
               "methodName": "lastConnectionInProject",
               "jsondocId": "6eb85e0a-0fce-4a6b-bb18-49537c0320b1",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "f9277ab2-801e-4e4b-998b-22805f67d7f6",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "24308d9b-fdce-4d2e-aec3-8912cb82f6e6",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c50cd7ae-fff8-4139-95a9-de9308d06223",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "bae888c9-5469-4324-a103-012385834a7e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/lastConnection.json",
               "response": {
                  "jsondocId": "f37fa847-5492-40a6-b85f-551180b67d6c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "project connection"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "584db4f5-cbfb-4e13-af64-884caa49a4e3",
                     "name": "project",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2b4e253a-515b-4009-b14d-91b22f08b549",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "List the last user connections in a project for a given user",
               "methodName": "lastConnectionInProjectByUser",
               "jsondocId": "7a68fd8c-0147-4b8b-b289-8209e0e261ab",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "bbfe3630-5390-4570-8d54-d3f08e7bbcf2",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "3fb7e5e7-530c-4aea-8548-c5e5035fd050",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c65da6d9-b56b-470f-9b73-bb6c3f64f9b7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "86cbd829-632c-415a-8088-07b5582bae26",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/lastConnection/{user}.json",
               "response": {
                  "jsondocId": "7fc52906-0a75-44b9-a5f1-5be26987687d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "project connection"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "61bf3d90-c386-446b-a1b9-a9e388ee9582",
                     "name": "project",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7f95a596-f908-4c61-8b7f-efd89f0b1c14",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "81099e5d-b059-4445-99e5-a246c791eb3f",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c2bbc4d7-bb8a-4cf1-926b-482f34fd4f27",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get user connections in a project",
               "methodName": "getConnectionByUserAndProject",
               "jsondocId": "322d5b99-6456-441f-8fec-6f1227b8c506",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "6b359ec8-372a-49b9-94be-53f521ff0732",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "5ece115a-7aa2-40a1-b924-38846f66134d",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "61be2204-379a-43a2-a4a7-057ea5f68c3d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "912b5d19-5d21-43bb-89d7-ca2e29040ea3",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/userconnection/{user}.json",
               "response": {
                  "jsondocId": "844a1339-587e-4aea-8d9f-f717e2c47a3b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "project connection"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "00988bec-18f9-48bd-a168-9bbb4cfe19cc",
                  "name": "project",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "98cb54df-0418-4c17-af0c-a0a74b5640b7",
                     "name": "afterThan",
                     "format": "",
                     "description": "The date when counting starts",
                     "type": "date",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ec2da4ee-8dbe-4e63-8a16-c114986aa083",
                     "name": "period",
                     "format": "",
                     "description": "The period of counting",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get the number of connection by project",
               "methodName": "numberOfConnectionsByProject",
               "jsondocId": "4b6d5745-e3ec-4362-b325-4a56f201f6cb",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "bc564ba2-237c-4eb2-a042-9bc458890c4e",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a0def244-c2dc-4476-9f3b-31eb2ebda405",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "684f63e4-0a53-4920-856c-2c56b21fbcd1",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "9a9701b0-0ad8-4005-8648-e93113518e3b",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/connectionFrequency.json",
               "response": {
                  "jsondocId": "b8ea2042-7f81-402e-ac33-ba8c309481cb",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "project connection"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "b8e14bbb-f636-4fc3-a2fa-d6b5bc915157",
                     "name": "project",
                     "format": "",
                     "description": "The project id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "3c5ff78a-8d4e-4d6c-8739-eabd73097031",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "fdf834cc-4222-42ad-b195-bfdb3c2a5d9f",
                     "name": "afterThan",
                     "format": "",
                     "description": "The date when counting starts",
                     "type": "date",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "15f30105-b404-4fbd-b6a3-98ff6d5da173",
                     "name": "period",
                     "format": "",
                     "description": "The period of connections (hour : by hours, day : by days, week : by weeks)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get the number of connection by project",
               "methodName": "numberOfConnectionsByProjectAndUser",
               "jsondocId": "ccdcad86-5adc-4c82-a801-f10d2612dcf3",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "5515818d-fe84-4942-81f3-26b545bd7270",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "73f21856-7077-430c-934c-8466f394e3e7",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c104e0ce-0fc1-4bdb-9b82-2e591dcdd531",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "26c88a05-2a33-41ca-bd03-d4fe436999b9",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/connectionFrequency/{user}.json",
               "response": {
                  "jsondocId": "f40db8f5-9ac8-4a88-8a17-0ccd359b03a5",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "project connection"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "452e79e5-feb8-4dfa-a1c4-5afa0eed30c4",
                  "name": "project",
                  "format": "",
                  "description": "The identifier of the project",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "bdcde540-60bf-4a33-9ec9-e4b13836e669",
                     "name": "startDate",
                     "format": "",
                     "description": "Only connections after this date will be counted (optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "26040ee4-6969-460d-bb17-8bf5b3dbf6f5",
                     "name": "endDate",
                     "format": "",
                     "description": "Only connections before this date will be counted (optional)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get the number of connections in the specified project",
               "methodName": "numberOfProjectConnections",
               "jsondocId": "242a8e67-a760-4d70-88a6-a5602aea174f",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "85f809dd-e5cd-4413-af14-aa152bff16ec",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "a8604e85-d81d-4ca0-bf15-4f53905fb95e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "634d4d82-492a-4de5-9a34-cca235a48d41",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "391790cc-3b89-43ab-a0f3-997481e34b38",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/connectionFrequency.json",
               "response": {
                  "jsondocId": "540a9876-209c-42d9-80b6-8adde546b201",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "project connection"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "8ee085e8-bbc7-412c-8b91-901e0b5edecf",
                     "name": "afterThan",
                     "format": "",
                     "description": "Average on the project connection where created > the afterThan parameter. Optional, the beforeThan Date -1 year will be considered if none is given.",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "64ab908d-9492-491e-a75b-37a2b3e3af33",
                     "name": "beforeThan",
                     "format": "",
                     "description": "Average on the project connection where created < the beforeThan parameter. Optional, the current Date will be considered if none is given.",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "795c4018-e629-4bcb-8c07-5851570dfc7d",
                     "name": "period",
                     "format": "",
                     "description": "The period of connections (hour : by hours, day : by days, week : by weeks) (Mandatory)",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get the average project connections on Cytomine.",
               "methodName": "averageOfProjectConnections",
               "jsondocId": "5f686276-dadb-4abb-a604-d54d703991f2",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c6a43836-bcc1-45c9-aaa5-cc51fd9fdaaf",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "857ab5d8-b10c-4960-a20c-143eeae56392",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "daa250b4-0c7b-4084-965c-e948dacb21d1",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a9223342-f627-4cba-b71d-ab48949a42db",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/averageConnections.json",
               "response": {
                  "jsondocId": "72badafb-f024-4a09-9a7e-e7e6f9036aa1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "project connection"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "da3e40fd-cf73-4b33-9757-170a68bbaed7",
                     "name": "user",
                     "format": "",
                     "description": "The user id. Mandatory",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "cd36eba2-7f0f-4a06-9ba1-bead8ea60af5",
                     "name": "project",
                     "format": "",
                     "description": "The project id. Mandatory",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "af481432-d904-4241-9f44-c41713f09d88",
                     "name": "offset",
                     "format": "",
                     "description": "An offset. Default value = 0",
                     "type": "integer",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f92a447c-0f31-435c-b373-1c5569ea8555",
                     "name": "limit",
                     "format": "",
                     "description": "Limit the project connections. Optionnal",
                     "type": "integer",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get the project connections of one user into a project.",
               "methodName": "userProjectConnectionHistory",
               "jsondocId": "cff7da4c-37e5-4756-b95a-83cb31597fba",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "106a8637-4d52-410b-b64e-acfd85a64e16",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "076b6a1f-b8ec-4984-85e2-20fd183d95cc",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "af475279-1ac4-41df-8d04-a57aef2cfe36",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "fe28465d-bcd9-4875-a3ec-eddae0a0b18a",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/project/{project}/connectionHistory/{user}.json",
               "response": {
                  "jsondocId": "e5f8b3be-eef7-4067-bd70-bfec52ea7b19",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "project connection"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "a97a238a-987d-416e-ba11-bb99fded044b",
                     "name": "project",
                     "format": "",
                     "description": "The project id. Mandatory",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "fc5d7410-76e9-4766-8a99-69d0d7a0fea5",
                     "name": "id",
                     "format": "",
                     "description": "The project connection id. Mandatory",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get the details of a project connection including the actions done during a project connection of one user into a project.",
               "methodName": "getUserActivityDetails",
               "jsondocId": "620b3f0f-45f4-46c4-b1e8-ea2580d2a855",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "9857072d-8409-41e8-acd2-fa1fce90cba5",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d5328a04-bcf7-4f83-81ba-e890e99d9443",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "321fb84a-7441-4c35-8098-d3609b765d17",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "d47e8113-7ba2-4cff-965b-9b91c2291c89",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/projectConnection/{id}.json",
               "response": {
                  "jsondocId": "08f1cd86-4a5a-4a00-85bd-6cfdb8bffd6c",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "project connection"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "eea536c3-5907-44f8-bcdd-592e7f2e346a",
                  "name": "project",
                  "format": "",
                  "description": "The project id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new user connection record to a project",
               "methodName": "add",
               "jsondocId": "52980b1a-e89a-407b-afd5-106e92a0e71c",
               "bodyobject": {
                  "jsondocId": "3f83cebf-a84a-44f3-91b2-067db03e2e56",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "project connection"
               },
               "apierrors": [
                  {
                     "jsondocId": "96f96048-0269-4991-a5bf-462035135ee4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "5a9b5fce-310a-4c29-b533-683108d8d719",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "eb934e61-e6d5-4387-8492-f67bdadc690e",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c44dbc9c-fff5-4b12-bd97-4a731b5a744f",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "a393f98d-b294-4b3d-bdf5-55476f2d7a5e",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/project/{project}/userconnection.json",
               "response": {
                  "jsondocId": "eaca6d8e-54f3-4ac3-98ea-8a4fa9ab2545",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "project connection"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            }
         ],
         "name": "Social | project connection services",
         "description": "Methods to manage a user connection record to a project"
      },
      {
         "jsondocId": "75163b53-f73c-4a09-aa04-9c5293c68431",
         "methods": [
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "a6429e0f-38a8-4f43-9ec7-a6640a0411d0",
                     "name": "id",
                     "format": "",
                     "description": "The image id (Mandatory)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c82eab5d-35eb-4544-b586-af57c9e2d374",
                     "name": "user",
                     "format": "",
                     "description": "The user id (Mandatory)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f6daee01-7c9b-4248-b1c5-eedfcfaf8e58",
                     "name": "broadcast",
                     "format": "",
                     "description": "If set to true, the last position broadcasted by the user will be returned",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [{
                  "jsondocId": "184b79b2-8e4b-4c23-9fe2-1d129ff92139",
                  "name": "slice",
                  "format": "",
                  "description": "The slice id",
                  "type": "long",
                  "required": "false",
                  "allowedvalues": []
               }],
               "verb": "GET",
               "description": "Get the last position for a user and an image.",
               "methodName": "lastPositionByUser",
               "jsondocId": "27fa78e3-0a0f-4be8-90cb-b511163a317f",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "023342da-49fe-422a-828f-b38ee06b1139",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "bf13c66f-3f74-4cdf-9828-e48524f2de6b",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "98ad7981-ec10-4b6e-b37b-6618623acf60",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "1fb18765-8c95-4d46-935e-230f1754dd39",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{id}/position/{user}.json",
               "response": {
                  "jsondocId": "6b16f0f2-70a8-4faa-8135-ada2e79f2d32",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "user position"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "14866ca9-33fb-4ba7-ac99-917539868711",
                  "name": "id",
                  "format": "",
                  "description": "The image id (Mandatory)",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "df017e6d-5afc-4f2f-b07a-ac1f3bff951a",
                     "name": "slice",
                     "format": "",
                     "description": "The slice id",
                     "type": "long",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "343dbb56-7268-4a56-81be-dbcc20bb1332",
                     "name": "broadcast",
                     "format": "",
                     "description": "If set to true, only users broadcasting their position will be returned",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get users that have opened an image recently.",
               "methodName": "listOnlineUsersByImage",
               "jsondocId": "573f4f9b-fdea-43d5-b972-ab561bfa0f3e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "745ceaf0-00bb-454e-9232-2054dd90ac5f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "bc3a183f-0ca2-478d-a9aa-c4673aa9ab95",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "706f2079-9c88-4424-9184-b4a55ef1c8ac",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "c344b48c-2598-4f0b-bc79-7d57bf0c6cbd",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{id}/online.json",
               "response": {
                  "jsondocId": "5ae78cac-c940-4162-ad3e-e62dc55f3785",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "user position"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "a7505b6e-2554-41bb-8c07-35404a8f2db6",
                     "name": "image",
                     "format": "",
                     "description": "The image id (Mandatory if slice not used)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "4eb89131-56d3-434d-9186-d07e7d8ee9ae",
                     "name": "slice",
                     "format": "",
                     "description": "The slice id (Mandatory if image not used)",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "cca1f844-9ee5-4f65-a65d-f4c912ff2eef",
                     "name": "topLeftX",
                     "format": "",
                     "description": "Top Left X coordinate of the user viewport",
                     "type": "double",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ae572f4b-964b-44c6-905b-1dd9e6326200",
                     "name": "topRightX",
                     "format": "",
                     "description": "Top Right X coordinate of the user viewport",
                     "type": "double",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "7556b2ee-424a-4fbe-b3b5-41642ec9f9ae",
                     "name": "bottomLeftX",
                     "format": "",
                     "description": "Bottom Left X coordinate of the user viewport",
                     "type": "double",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "33b88fe0-2e0d-4db5-bdbc-cdd9398eba9b",
                     "name": "bottomRightX",
                     "format": "",
                     "description": "Bottom Right X coordinate of the user viewport",
                     "type": "double",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "2200e7fd-a40c-4e86-bd48-d2127f30516f",
                     "name": "topLeftY",
                     "format": "",
                     "description": "Top Left Y coordinate of the user viewport",
                     "type": "double",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "c02694d5-e5bd-4cf8-bc8b-3ff1d19edcc9",
                     "name": "topRightY",
                     "format": "",
                     "description": "Top Right Y coordinate of the user viewport",
                     "type": "double",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5c003c49-ac72-447c-9c7e-7c5b2c17480c",
                     "name": "bottomLeftY",
                     "format": "",
                     "description": "Bottom Left Y coordinate of the user viewport",
                     "type": "double",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ee3c1898-2d49-4be7-85ce-5278ef041a7f",
                     "name": "bottomRightY",
                     "format": "",
                     "description": "Bottom Right Y coordinate of the user viewport",
                     "type": "double",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "57f7df53-e404-4fa0-af1e-9e4c22625e08",
                     "name": "zoom",
                     "format": "",
                     "description": "Zoom level in the user viewport",
                     "type": "integer",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b2cc171e-c27d-47e6-b909-4304c897b0e7",
                     "name": "rotation",
                     "format": "",
                     "description": "Rotation level in the user viewport",
                     "type": "double",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1bfecae7-c8e1-49f6-b043-59dc161488c8",
                     "name": "broadcast",
                     "format": "",
                     "description": "Whether or not the user is broadcasting his/her position",
                     "type": "boolean",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "verb": "POST",
               "description": "Record the position of the current user on an image.",
               "methodName": "add",
               "jsondocId": "35b31f45-4ac6-45f1-a6f3-9242a5516da9",
               "bodyobject": {
                  "jsondocId": "194735a1-9b23-4fc4-b895-ac27e81ad8f5",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "user position"
               },
               "apierrors": [
                  {
                     "jsondocId": "55097b80-4872-4dca-b80a-71de5932f911",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "eda4857d-1d3f-4640-a60a-34b0f82fab2b",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5dfe285c-89ae-48d0-99e2-b1903115f1d2",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "18326803-9225-435f-93d7-8288834c302c",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "3bd516a2-5587-43c6-a0e3-147f0b7fe429",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/sliceinstance/{slice}/position.json",
               "response": {
                  "jsondocId": "671b219d-14f0-42a0-9863-d230403ba99b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "user position"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "46478de8-0c69-4193-80e5-bbd85b116f1a",
                  "name": "image",
                  "format": "",
                  "description": "The image id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "d7b0962a-3d0a-405c-8f91-a8bf0f6a20ce",
                     "name": "slice",
                     "format": "",
                     "description": "The slice id",
                     "type": "long",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f4e2f45f-51d5-4109-9662-590bb829e308",
                     "name": "user",
                     "format": "",
                     "description": "The user id",
                     "type": "long",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e5b28048-ecbe-46a3-8608-48864d87c43b",
                     "name": "afterThan",
                     "format": "",
                     "description": "A date. Will select all the entries created after this date.",
                     "type": "long",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "9482ed87-e5bb-475e-9bf4-ee1a389386b5",
                     "name": "beforeThan",
                     "format": "",
                     "description": "A date. Will select all the entries created before this date.",
                     "type": "long",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "513a98b1-da83-4acc-aaae-94e74e4930ca",
                     "name": "showDetails",
                     "format": "",
                     "description": "Optional. If true, will give the complete list",
                     "type": "boolean",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Summarize the UserPosition entries.",
               "methodName": "list",
               "jsondocId": "0821f67b-9ebb-4a05-9b17-37a9ca94aee3",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "1e80e29c-24ad-48f5-85fa-645bfbcf705c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "59a8f757-fffa-408f-9574-69414de74e88",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "1c3435bd-3581-4fe7-865f-828ee83902ea",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "787aa5ed-9a51-4a85-be8a-b65528374fbb",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/imageinstance/{image}/positions.json",
               "response": {
                  "jsondocId": "2a8aa24b-7599-47f6-978e-b4acbc1a1da1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "user position"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Social| user position services",
         "description": "Methods for managing user positions in an image"
      },
      {
         "jsondocId": "6acc3aec-eb32-4928-b70b-d5604dc5c339",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "c6f98be0-7264-4dc0-9f4b-5378dd73384c",
                  "name": "id",
                  "format": "",
                  "description": "The software repository id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a specific software user repository.",
               "methodName": "show",
               "jsondocId": "c86c94f4-b763-4fcb-bf5d-4d70a1815097",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "b45d3ac9-9c2b-4ab9-9aa0-943cc5bfd7a4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "d879c73e-a8c1-46c8-aee0-9ab6bc5a510a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "035555a3-4f21-497a-9ac2-c6338be85e8c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "9773fa5b-e4f6-4bbf-b875-707eccb306a1",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/software_user_repository/{id}.json",
               "response": {
                  "jsondocId": "9e506f4b-c0ce-49a6-b204-468e6e731257",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software user repository"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "a1e3c2e2-33b4-4be5-b950-7aaffe8cebeb",
                  "name": "id",
                  "format": "",
                  "description": "The software user repository id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Refresh the given software user repository",
               "methodName": "refresh",
               "jsondocId": "6707de06-89d1-414f-9a9f-faa86c054534",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "f4800891-e79c-49e2-8415-53fe2a93111c",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "9eb0d715-3e4c-47fa-afb6-269b5c393727",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "159c28e3-940b-4f50-bfee-3b21da402f29",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "791c170d-9852-44cb-93ed-ad7ff91eb3e7",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/software_user_repository/{id}/refresh.json",
               "response": {
                  "jsondocId": "39189f90-5ebf-4c79-888a-8724508e4eac",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software user repository"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "GET",
               "description": "Refresh the software user repositories loaded by the software-router",
               "methodName": "refreshUserRepositories",
               "jsondocId": "e5350f5d-0dec-411f-95fe-ec62d07fb544",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "4d5abe15-ea0e-4c9b-8ed7-c8f6d3baec7a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "44146fc2-be33-4404-a245-902eabfbbcb6",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "31c03966-ce0d-42a2-ab2a-adb8e74ab25d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "58aa75b7-8fef-45ab-8a34-49856689c251",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/software_user_repository/refresh_user_repositories.json",
               "response": {
                  "jsondocId": "511f0cd4-6bc0-41ca-9e0c-f52536a5a7a2",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software user repository"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new software user repository.",
               "methodName": "add",
               "jsondocId": "0938f5b2-3e92-4c90-91eb-0ffaa98ad44b",
               "bodyobject": {
                  "jsondocId": "ae38be6b-d025-4ec2-abb0-4416fee87e8b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Software user repository"
               },
               "apierrors": [
                  {
                     "jsondocId": "55bb78ce-cae8-4e3d-8263-57193923e29b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "92257522-6ced-4b7c-98d7-5c9cae304d14",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "fe363dbb-9b35-4611-bc32-51a63634d635",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "45818802-9703-4a02-9a9a-15a6e602f9ca",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "1903c4ae-83fb-4b38-b8df-b279e0f6a516",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/software_user_repository.json",
               "response": {
                  "jsondocId": "d7e675d0-56aa-4c65-9604-2f1264c6bfe9",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software user repository"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "2f87a85e-d477-4916-a722-d6bd741d5e97",
                  "name": "id",
                  "format": "",
                  "description": "The software user repository id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "c168f354-0bef-45e3-9b8c-2cda69dc249c",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b9089e55-f73a-47f1-ae97-6a94f8cdd8ab",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "PUT",
               "description": "Update a software user repository.",
               "methodName": "update",
               "jsondocId": "f33aae82-cf73-4c0a-9c93-a1daac1d167d",
               "bodyobject": {
                  "jsondocId": "8f1fc74a-435a-48f0-9835-126b2c28395e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Software user repository"
               },
               "apierrors": [
                  {
                     "jsondocId": "7dd89a80-cb49-4da7-9a82-724dffb85f39",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "7ba1d424-f894-486f-a4e4-846fbeb980eb",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "a80da2d9-8aff-4673-9a04-6cec39382356",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6df21951-6c3c-4971-ab44-090dc5aafb4e",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "4ede01c4-5bce-4171-a0ff-03def5a19bc9",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/software_user_repository/{id}.json",
               "response": {
                  "jsondocId": "7405e41b-56ca-4858-b848-bd7c314df3e9",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software user repository"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "01128aca-b586-4710-8f50-073eed52a810",
                  "name": "id",
                  "format": "",
                  "description": "The software user repository id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "d13d59ba-de66-4c89-9b61-be4044c6d79b",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "e7cb95bd-437b-4686-b0f8-981c1b7660bb",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "DELETE",
               "description": "Delete a software user repository.",
               "methodName": "delete",
               "jsondocId": "285ee233-d15d-4fff-ab89-8be76cafb535",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "22665c4e-a362-436d-ae47-1096704e5c09",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f56bf7cb-6c3a-4767-99d8-0d41498e8b50",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "5042ee13-79e1-42e6-bf20-d70172b398a2",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "60c585f6-d90c-45f3-92f4-acad815d0b16",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/software_user_repository/{id}.json",
               "response": {
                  "jsondocId": "77453a6e-bc0a-4258-876c-f5af4c6d2d1d",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software user repository"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "4c5f5e07-d6ca-40bb-94d8-226ed543ada3",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "cee4ec9d-de54-481b-aa03-d7723258d240",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all the software user repositories.",
               "methodName": "list",
               "jsondocId": "6b885fc4-5b4b-4c6f-862e-a0895b6aca2e",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "8d43503d-7bfa-44c6-a2ee-62858029d7bd",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8c4e26f5-1104-48dd-a45e-d6be4b9cc8eb",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "1ca09841-7064-4e32-a12c-6e7ad881b0d8",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "2a91803b-d73c-45d8-a1b4-a34af543cc5d",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/software_user_repository.json",
               "response": {
                  "jsondocId": "f0919771-c568-4ec4-874a-c2c6e412b5c9",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Software user repository"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Software user repositories services",
         "description": "Methods for managing software user repositories"
      },
      {
         "jsondocId": "3b748616-35eb-492b-857d-33ed40f8dd03",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "7256bda7-df33-4cd6-946f-95545402761a",
                  "name": "id",
                  "format": "",
                  "description": "The attached file id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a specific attached file",
               "methodName": "show",
               "jsondocId": "0ebea11d-7893-4097-9ec3-e7c529fe3309",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "4ebf8427-d307-4b08-bfa9-546190bd2dfe",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ec75247f-435d-4a6a-a8a3-0c82b60ab9be",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "ef3e6dc0-7435-47e5-a2fa-4df7684324c8",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e2aecd90-c436-4b69-9cd4-4a7ee2631f43",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/attachedfile/{id}.json",
               "response": {
                  "jsondocId": "a6524859-6474-4a77-b015-2042c8d8d347",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Attached file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "b4e99593-a50e-4812-9cf0-291e4b54b568",
                  "name": "id",
                  "format": "",
                  "description": "The attached file id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Download a file for a given attached file",
               "methodName": "download",
               "jsondocId": "6c496033-da4f-407e-85d6-78f9c5d44ac3",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "98b0bd0f-555e-4b89-83d4-d56a3476af28",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "75a73b96-3343-4f57-a6c4-5e80c3571b08",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "58f24a1e-e859-464d-b215-3ed304ba7c29",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "74ccdfe9-63ca-465b-89c2-de0c0b5be222",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/attachedfile/{id}/download",
               "response": {
                  "jsondocId": "31ff7472-6c99-4c45-8e4f-415b518844d7",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "92e52ffc-d406-4b45-9a61-cca68cb8166b",
                     "name": "domainIdent",
                     "format": "",
                     "description": "The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "26c0e2aa-8537-416a-b76f-d83f591fe5a7",
                     "name": "domainClassName",
                     "format": "",
                     "description": "The domain class",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Upload a file for a domain",
               "methodName": "upload",
               "jsondocId": "3b4b4077-34bc-4050-bf98-1ec558a58b4d",
               "bodyobject": {
                  "jsondocId": "e53c161c-1c86-495e-880a-a139aa6dc7f3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Attached file"
               },
               "apierrors": [
                  {
                     "jsondocId": "6732b119-954f-40ec-ab0b-4be66b5de3bf",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "459bae10-433f-4f3f-b00a-d6207d5985fa",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "03519d86-9266-43c1-afdc-ca47fa09847d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "121910d2-d55c-4583-bff1-180c1f6c91c4",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "1b380d95-3e91-4da7-8d2f-13d0b69c9021",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/attachedfile.json",
               "response": {
                  "jsondocId": "70caea40-6ae4-45ee-92e9-925a09b90ec0",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Attached file"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "4ade2305-c509-45a0-a32e-02dfd32786da",
                     "name": "domainIdent",
                     "format": "",
                     "description": "The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "34346881-7ff6-4abf-9882-1e3366e60788",
                     "name": "domainClassName",
                     "format": "",
                     "description": "The domain class",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "POST",
               "description": "Upload a file for a domain. Decode params filled by RTEditor",
               "methodName": "uploadFromRTEditor",
               "jsondocId": "230af3aa-0316-4417-9dc0-0284e80bd885",
               "bodyobject": {
                  "jsondocId": "1201cd2d-eccf-4877-9d5f-23554ce48caa",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Attached file"
               },
               "apierrors": [
                  {
                     "jsondocId": "6ebfc450-0a65-4fba-b95d-3fcfd72fa48d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "ef947559-4a69-4b9b-b539-02d90eeb4a78",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "cbd8400f-d066-483b-b5d1-36652c9624ca",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "5bc08e0f-d19c-4107-9b9a-9a6d2341468c",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "38c4adce-005d-42a5-b9ba-428c68864556",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/attachedfileRTEditor.json",
               "response": {
                  "jsondocId": "40bacc49-fc0f-4dd4-a212-fa863c375865",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Attached file"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "0afc5ca1-b5ff-41f5-8619-4bd9145675ef",
                     "name": "domainIdent",
                     "format": "",
                     "description": "The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "6d190976-0ddf-4100-ac5a-e504107e1829",
                     "name": "domainClassName",
                     "format": "",
                     "description": "The domain class",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "27d3be30-f53e-4f25-ab36-13a71c8f96ae",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "ee9b6902-1ab3-42ab-8656-0401e7b40a8d",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all attached file for a given domain",
               "methodName": "listByDomain",
               "jsondocId": "53c6987d-c071-48cf-990d-40f88311f2fa",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ec291a2b-1c97-41d7-a9d9-0b74bc13960f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "817512d5-093c-4c62-83fc-ebcd3ee11d09",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "001c64c1-cb2a-437a-a3ce-675926eb9ffc",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "221f96f2-5f5e-4935-a1ac-68b76af1b885",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/domain/{domainClassName}/{domainIdent}/attachedfile.json",
               "response": {
                  "jsondocId": "00d18141-d56c-45df-88ae-8dcf6d399f22",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Attached file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "c392d641-97ce-4dc5-b22d-4d28daafe7df",
                  "name": "id",
                  "format": "",
                  "description": "The attached file id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete an attached file",
               "methodName": "delete",
               "jsondocId": "972531fd-f151-40da-9742-5f716e6cd4a7",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "74589411-3257-49e7-ba1a-12d8d8cde6d4",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8b45f556-3446-4a30-b11f-27dde16c8948",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "c68dada2-990d-4f89-b2f3-57f781342063",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "f383383e-4e70-4011-8fc3-1d19b9ff2b72",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/attachedfile/{id}.json",
               "response": {
                  "jsondocId": "d99e4956-3de2-411c-8ea5-b543ba3b1067",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Attached file"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "9bdb6e34-b73b-46e5-a902-07b0cf4122bc",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "1a7b1448-9781-46e9-825b-8b9f047e7082",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all attached file available",
               "methodName": "list",
               "jsondocId": "12e99915-e373-466e-930d-2ed9351f4ac4",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c401ca50-a1a5-4012-9432-ee0937dadda9",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "38e2f904-ef84-4c8c-a599-b67044c6dc8e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "7e48a585-5e9e-4e80-b0e9-1e198629d753",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b35164fa-73ee-4cdc-bb25-ecc093c72ea0",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/attachedfile.json",
               "response": {
                  "jsondocId": "c62bf018-2c2c-42b2-9f1d-14356df7173e",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Attached file"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Utils | attached services",
         "description": "Methods for managing attached file on a specific domain"
      },
      {
         "jsondocId": "a37830dd-a5e0-4fd5-b9db-fd6a02e7517e",
         "methods": [
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "88d73462-4f46-445e-9f17-db69e0702a28",
                     "name": "domainIdent",
                     "format": "",
                     "description": "The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "69088379-ab2f-4983-9270-bc215ae8e86c",
                     "name": "domainClassName",
                     "format": "",
                     "description": "The domain class",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a description for a specific domain (id and class)",
               "methodName": "showByDomain",
               "jsondocId": "92057178-e9dd-4353-8bfa-af674ff332b0",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "24bdb995-53b2-40ab-b461-c3e3e5c97273",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "6cbaf6ab-8aad-42f4-bbb0-7f254ab0479a",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "030a4295-32d4-4d97-b693-6a94c71f5305",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e1164abd-7678-44e1-a11f-8c805f0a1524",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/domain/{domainClassName}/{domainIdent}/description.json",
               "response": {
                  "jsondocId": "aa850728-a9dc-4002-8bf4-457eec07e620",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Description"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "9ffda3d9-f995-4241-bf36-54c775ba0239",
                     "name": "domainClassName",
                     "format": "",
                     "description": "The domain class name",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "72456244-9d1f-4b04-8e7e-5ecd440ecb3e",
                     "name": "domainIdent",
                     "format": "",
                     "description": "The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new description to a domain",
               "methodName": "add",
               "jsondocId": "18fcdde1-22d8-435c-9f0f-ea12ce758d99",
               "bodyobject": {
                  "jsondocId": "7affceb4-8f41-4d56-a150-ea31f55d0990",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Description"
               },
               "apierrors": [
                  {
                     "jsondocId": "ebf0cd82-1e4d-4ee1-b75d-8a35714ae702",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "da641a6a-e265-4db6-8ac5-1ddea58b30e4",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "214e8e10-ee14-4d2c-9d52-3d78574be59a",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "66f3be9b-9fa0-4de1-935a-6e2957b8d7f4",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "d7726210-ffcd-4b84-b16a-bb9fda038d86",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/domain/{domainClassName}/{domainIdent}/description.json",
               "response": {
                  "jsondocId": "472874a3-9a62-41d4-ae5d-39d9e91a06db",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Description"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "5526ae55-d60c-42d6-a1bf-ae550a4a410a",
                     "name": "domainIdent",
                     "format": "",
                     "description": "The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5e4b44fb-8334-4d79-8138-164737902937",
                     "name": "domainClassName",
                     "format": "",
                     "description": "The domain class",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "PUT",
               "description": "Update a description",
               "methodName": "update",
               "jsondocId": "f432842e-2a63-419b-abd1-6205db14c9fb",
               "bodyobject": {
                  "jsondocId": "6aff2382-20c5-4b24-8285-af6d029f4e5b",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Description"
               },
               "apierrors": [
                  {
                     "jsondocId": "68ac6fd2-7a35-4237-bd16-6cf1d192691d",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "541f75d2-3a47-43bd-a77a-7a2f9ac8c2be",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "bc616821-cce7-48e0-89f2-17ffeda9704d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "900ff854-c4a3-48e4-89ad-a7e2c5ab4f29",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "99745707-a454-450e-981d-af85a89f4563",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/domain/{domainClassName}/{domainIdent}/description.json",
               "response": {
                  "jsondocId": "5789dbb4-0216-44a2-b76a-449ff0a26849",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Description"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "932833db-9d1f-46d4-aa05-6d95006bdd30",
                     "name": "domainIdent",
                     "format": "",
                     "description": "The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "82572e23-6978-4335-90f9-f75d369c2936",
                     "name": "domainClassName",
                     "format": "",
                     "description": "The domain class",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "DELETE",
               "description": "Delete a description",
               "methodName": "delete",
               "jsondocId": "008178af-c5ba-47e4-beb7-8bb4dd72d35a",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "ba794ea9-5342-441b-a76d-36c5c2cf9e84",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "3cec12cc-6d18-40f6-8d82-09bb7b358c3b",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "8c6432da-b23c-4e8f-b7f0-bbde33f2dc81",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "2c13ed77-b8ac-47b1-b0db-ec4f6030037f",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/domain/{domainClassName}/{domainIdent}/description.json",
               "response": {
                  "jsondocId": "456e47e4-fc35-40e5-911d-869abd71f801",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Description"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "e21029a1-c818-4833-b341-f16d8af95339",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "f86feec2-ee7e-44a4-8966-2073f17a0f29",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "List all description available",
               "methodName": "list",
               "jsondocId": "0ccd0933-2cb3-4e8b-bdd1-c678c5218ee8",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "06871cd2-6592-4cd1-92fa-358261d2d503",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "dd2abe07-1753-4e0e-9940-9c7bd8b7a8b8",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4cef19b4-7ee0-4a32-ba12-c2c4c9b0b22c",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b85382fc-25a0-48ba-b15d-0b59b32370b5",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/description.json",
               "response": {
                  "jsondocId": "4c0a0d4f-d351-417d-a028-550cc3531aba",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Description"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "Utils | description services",
         "description": "Methods for managing description on a specific domain"
      },
      {
         "jsondocId": "ca812a80-eb04-46b5-b4c5-5e832eafc3d1",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "083e18fb-9f2a-4b71-8746-7e8c3ae94208",
                  "name": "id",
                  "format": "",
                  "description": "The association id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a specific tag-domain association",
               "methodName": "show",
               "jsondocId": "af520ead-3fc5-416d-90a0-6cb675b6e9ee",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "c8ae37bc-3e08-4590-8cfd-be9e7db9044a",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "01a8408a-93ba-473d-b8aa-638bcc2766bd",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "09402b00-e6c5-46c1-af15-33b1d8eee5e3",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e0eca2c2-5b3b-4f6c-80a3-38cddc767113",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/tag_domain_association/{id}.json",
               "response": {
                  "jsondocId": "731135df-0ef2-4c08-8332-898b938b3c91",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Tag domain association"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "4b204c05-d7cf-4f6e-a4ef-e2dc2420640b",
                     "name": "domainClassName",
                     "format": "",
                     "description": "The domain class name",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "84268722-d91c-423d-bf0c-347b48fc4ff4",
                     "name": "domainId",
                     "format": "",
                     "description": "The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [
                  {
                     "jsondocId": "77c8150d-bb43-412a-8536-3f017ec91c3f",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "b37082c6-4513-4170-b298-23f401a62886",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all tag-domain association available in cytomine related to a specific domain",
               "methodName": "listByDomain",
               "jsondocId": "435a6f1c-7673-40dd-b0c7-66288f21f981",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "09767ed3-2eee-41fa-86f5-ca49374e7531",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "fb54d7f3-2245-4b96-a4a9-015982b8c452",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "00d068de-033d-42b2-a701-9008e2945dbb",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "3317970f-1326-490e-afea-f03169cce2a2",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/domain/{domainClassName}/{domainId}/tag_domain_association.json",
               "response": {
                  "jsondocId": "63b07cb8-fa21-4dfc-b11c-528029dd0f27",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Tag domain association"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [
                  {
                     "jsondocId": "b98a6168-abf1-4a1b-aa2d-8d368a9f7875",
                     "name": "domainClassName",
                     "format": "",
                     "description": "The domain class name",
                     "type": "string",
                     "required": "true",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "acc832e5-1b29-47b6-815b-bdc26e3cc238",
                     "name": "domainId",
                     "format": "",
                     "description": "The domain id",
                     "type": "long",
                     "required": "true",
                     "allowedvalues": []
                  }
               ],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new tag-domain association to cytomine.",
               "methodName": "add",
               "jsondocId": "c361f7d4-e06a-4d7d-a29a-b5e8f68caa26",
               "bodyobject": {
                  "jsondocId": "13bf87e7-e958-4048-8752-c45e9abe9fd3",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Tag domain association"
               },
               "apierrors": [
                  {
                     "jsondocId": "55435236-af53-4fbe-841e-78754de16b5b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "725f756e-f778-44df-a0c7-ce808c197650",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "4a2fc36d-f19d-437c-b8bd-1abd8a5908ab",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "e11852ed-4503-46e7-a618-37b4afe15265",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "97f4eeea-9fa8-4309-9129-65c709e1ed79",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/domain/{domainClassName}/{domainId}/tag_domain_association.json",
               "response": {
                  "jsondocId": "37d325f1-d8ac-4d5b-8d40-06b19010e220",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Tag domain association"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "30a49128-bf33-4b6b-86e0-1dfa1640bc0e",
                  "name": "id",
                  "format": "",
                  "description": "The tag id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "158a4592-b1d4-4daa-8b4e-f1e05645bc13",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "622ab932-2073-48a3-aaee-4ec9dda34f95",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "PUT",
               "description": "Update a tag-domain association.",
               "methodName": "update",
               "jsondocId": "2375a548-294e-4dfe-8c78-7dbda63275e6",
               "bodyobject": {
                  "jsondocId": "d4ab8aa0-5b4d-4c43-ad3f-eb9509dedf70",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Tag domain association"
               },
               "apierrors": [
                  {
                     "jsondocId": "f57c20d3-63f4-45dd-8af4-ad95cc3a2138",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "f2ae58e1-606e-4f61-84c1-5e116d8166d3",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "2d4eddff-10c4-4024-b0f4-480fd1d81dd4",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "a6e4448b-3f21-4785-85fa-a258fabbdf47",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "a2a8791b-e6d9-4fa1-a45a-1cc710dfe670",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/rest tag domain association/update/{id}.json",
               "response": {
                  "jsondocId": "fdbea580-b47d-4b73-ac8c-15a169f065ae",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Tag domain association"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "f8c443eb-6aaf-4f73-8bac-1baf9a23e708",
                  "name": "id",
                  "format": "",
                  "description": "The tag id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "a6241d4b-2f35-463c-80f2-7a643b6ef0a1",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "48e7d380-7c33-4fca-b0df-c688286beea6",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "DELETE",
               "description": "Delete a tag-domain association.",
               "methodName": "delete",
               "jsondocId": "44c9fb17-ce4d-49e7-98b0-c84c4e532829",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "75f4bb61-3955-417a-b89d-7aaebdf1bea7",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "881d8c79-312c-48bc-aae0-53f13661c174",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "894749c3-0609-4a58-9ed7-975a32593a74",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "0b3c2ac0-1ba5-4a87-bc02-cfa94886c0f6",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/tag_domain_association/{id}.json",
               "response": {
                  "jsondocId": "aec1fd4c-a0fd-4488-a827-63243cfd9fa8",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Tag domain association"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "2004772d-5b3a-441c-bf05-a93a28428faf",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "030ecf23-0fda-4483-9429-86b4059aebaf",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all tag-domain associations available in cytomine",
               "methodName": "list",
               "jsondocId": "bddafeec-697e-4982-9b9b-ac1c0283cd2b",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "07ed8b30-6519-4282-a6e7-c5edd5564d80",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "abf2ddb6-0120-44c5-9de9-a4b542766963",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e4a62d85-0f30-44fe-8ea5-c605c5badf45",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "061b7538-fd8e-4326-beb8-ad91ca0ad246",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/tag_domain_association.json",
               "response": {
                  "jsondocId": "dfc06ea8-ccb6-4502-a66b-8e2e989c09cd",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Tag domain association"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "tag domain association services",
         "description": "Methods for managing associations between a tag and a domain"
      },
      {
         "jsondocId": "a1a25b1d-4d12-47ac-97e2-d8f34a885760",
         "methods": [
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "b54aa352-dca0-4676-85ab-b907e1c3313a",
                  "name": "id",
                  "format": "",
                  "description": "The tag id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [],
               "verb": "GET",
               "description": "Get a specific tag",
               "methodName": "show",
               "jsondocId": "922ebe21-cc2a-40bc-9170-10d6e0c79e55",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "47804926-7c22-45f8-8494-abaec80d9271",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "8e5605b3-bd37-44bc-b825-ab7a9ef88a0e",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "18838949-e8c5-4861-a579-8ce31315d93d",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "b7191b6d-d679-4e37-9235-b11931d8fd1e",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/tag/{id}.json",
               "response": {
                  "jsondocId": "2943a1ee-da34-4284-ab9d-a957100d94e2",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Tag"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [],
               "verb": "POST",
               "description": "Add a new tag to cytomine.",
               "methodName": "add",
               "jsondocId": "6905e3bb-cbcf-4f29-8b4c-0335179c5796",
               "bodyobject": {
                  "jsondocId": "69b061bc-2b29-43d5-a81d-217bb08f5846",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Tag"
               },
               "apierrors": [
                  {
                     "jsondocId": "524ae18c-db32-4597-a01a-f9f494ad672b",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "52a49954-0818-4546-8d16-80c9f3c5e866",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "344f644d-3ff7-484c-9139-10667b7133d8",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "6c6773fb-a0ea-4037-ab34-0bf5792f9a1c",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "049996d8-66e6-4aff-9adc-99dfb6d59298",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/tag.json",
               "response": {
                  "jsondocId": "f975bca3-8028-4fab-ada6-593a1dabc441",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Tag"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "da58d1bc-76a5-4a21-80f8-1497ba2ab348",
                  "name": "id",
                  "format": "",
                  "description": "The tag id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "efcb8a63-4a8b-4e52-bc7d-43b60e23adc4",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "02d070b1-819d-4087-8248-0b96f4ff9b51",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "PUT",
               "description": "Update a tag.",
               "methodName": "update",
               "jsondocId": "85a472b3-2809-47a2-ac19-2ac625dad76a",
               "bodyobject": {
                  "jsondocId": "6a4fa323-d290-4dde-b9ef-030367af0c56",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "multiple": "Unknow",
                  "map": "",
                  "object": "Tag"
               },
               "apierrors": [
                  {
                     "jsondocId": "978d712e-2ba5-47bb-937b-6716971881df",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "bbd15129-72ed-48a4-a816-a49cc7d488ff",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "e4a71717-d37a-4647-ba4c-c870e09a9648",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "796790f0-dbfa-4c78-90c9-eb492d386d80",
                     "code": "404",
                     "description": "Object not found"
                  },
                  {
                     "jsondocId": "dc9904ce-cd4c-42ab-8fe4-e3a1c87d744d",
                     "code": "409",
                     "description": "Object already exist"
                  }
               ],
               "path": "/api/tag/{id}.json",
               "response": {
                  "jsondocId": "64ce6cbe-d545-40f4-9634-457bce20b1e1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Tag"
               },
               "produces": ["application/json"],
               "consumes": ["application/json"]
            },
            {
               "headers": [],
               "pathparameters": [{
                  "jsondocId": "c735d535-d90a-45a7-ad07-78d085838d26",
                  "name": "id",
                  "format": "",
                  "description": "The tag id",
                  "type": "long",
                  "required": "true",
                  "allowedvalues": []
               }],
               "queryparameters": [
                  {
                     "jsondocId": "b2415f9e-ff8c-4977-89c1-4020a549f346",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "686b7fab-64f7-45cb-8110-5c39196e37cb",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "DELETE",
               "description": "Delete a tag.",
               "methodName": "delete",
               "jsondocId": "5465c91a-f3cd-413d-9678-792ce549d917",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "9298eb6b-6b2b-420c-b3fa-3212486b176f",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "523bd98b-e5bc-4a14-8379-c5f57f8121df",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "857a2661-ddcf-489e-bd91-c3894f308956",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "42486233-6f34-47e8-bd55-28175e47e713",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/tag/{id}.json",
               "response": {
                  "jsondocId": "66a670ab-3eaf-4adc-a71e-a2a3bd9b0785",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Tag"
               },
               "produces": ["application/json"],
               "consumes": []
            },
            {
               "headers": [],
               "pathparameters": [],
               "queryparameters": [
                  {
                     "jsondocId": "8fccbf86-6ffb-4b87-8469-c38fc5ab3266",
                     "name": "max",
                     "format": "",
                     "description": "Pagination: Number of record per page (default 0 = no pagination)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  },
                  {
                     "jsondocId": "5bfba743-ecff-44e9-81e6-48cd098d06e5",
                     "name": "offset",
                     "format": "",
                     "description": "Pagination: Offset of first record (default 0 = first record)",
                     "type": "int",
                     "required": "false",
                     "allowedvalues": []
                  }
               ],
               "verb": "GET",
               "description": "Get all tag available in cytomine",
               "methodName": "list",
               "jsondocId": "53323d62-a8ac-44e9-b444-9ba9caa276f4",
               "bodyobject": null,
               "apierrors": [
                  {
                     "jsondocId": "688262c3-a001-42e3-b512-a85a974aecaf",
                     "code": "400",
                     "description": "Bad Request: missing parameters or bad message format"
                  },
                  {
                     "jsondocId": "b351c49c-0b05-4e52-889f-f3d4a10d4430",
                     "code": "401",
                     "description": "Unauthorized: must be auth"
                  },
                  {
                     "jsondocId": "fb0ade6f-b537-4595-9d16-34e85872a4e7",
                     "code": "403",
                     "description": "Forbidden: role error"
                  },
                  {
                     "jsondocId": "9120c958-bf68-4782-b22e-157e4cc93064",
                     "code": "404",
                     "description": "Object not found"
                  }
               ],
               "path": "/api/tag.json",
               "response": {
                  "jsondocId": "bd32923c-5047-4ea8-983f-c1e465c9eee1",
                  "mapValueObject": "",
                  "mapKeyObject": "",
                  "object": "Tag"
               },
               "produces": ["application/json"],
               "consumes": []
            }
         ],
         "name": "tag services",
         "description": "Methods for managing tags, flags that can be associated to Cytomine domain"
      }
   ],
   "objects": [
      {
         "jsondocId": "183f2320-61c9-4bfd-be08-7f8a2612ef5a",
         "name": "AMQP Queue",
         "description": "A queue that supports Advanced Message Queuing Protocol",
         "fields": [
            {
               "jsondocId": "76172de3-eac8-4a88-b918-477d6b318127",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3c93b6ad-d2c9-4273-8af2-19183e809aa8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "de760e7b-b150-4b2f-9342-7adb6c73d54e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "4c5690dd-7336-4e1f-9ec2-8b84784d657d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a83f1c53-6116-4b09-8d3c-e9a1ee45476f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d9b39ac7-b6fe-444d-ae75-bab5fd52a3e5",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The name of the queue",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "de351c2b-1a2e-4616-bc2f-c6ed7dd079a9",
               "useForCreation": true,
               "defaultValue": null,
               "name": "host",
               "multiple": "false",
               "format": null,
               "description": "The host of the queue",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "57b29aa7-4dad-4401-afd4-a0f3ccab52ec",
               "useForCreation": true,
               "defaultValue": null,
               "name": "exchange",
               "multiple": "false",
               "format": null,
               "description": "The name of the exchange bound to the queue",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "8094ba86-e1ab-493a-a92e-20842572e1ba",
         "name": "AMQP Queue Config",
         "description": "Possible rabbitMQ configurations for any AMQP queue in the system",
         "fields": [
            {
               "jsondocId": "378d57c0-8ba2-4e80-b691-0cee95ed78a3",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "dd61e350-00af-42fd-ba6d-3284b5212b04",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "08d6519b-e5a5-44a1-a406-2a0d0e053593",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "cf54673b-5871-486d-a65b-415e866a3157",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "eaaa565e-0be7-4715-97f6-c3fe244be061",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c57330dc-055e-403f-963e-1c4e63d24802",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The name of the parameter",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "fdff4fd7-64ba-46c6-93e3-7644947f6f12",
               "useForCreation": true,
               "defaultValue": null,
               "name": "defaultValue",
               "multiple": "false",
               "format": null,
               "description": "The default value for the parameter",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "c3570f7f-c4bd-4cc6-acf6-a7745b182ab3",
               "useForCreation": true,
               "defaultValue": null,
               "name": "index",
               "multiple": "false",
               "format": null,
               "description": "The position of the parameter in the createQueue method",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "16d810a9-e27c-451a-a782-5faf7f9fb1e0",
               "useForCreation": true,
               "defaultValue": null,
               "name": "isInMap",
               "multiple": "false",
               "format": null,
               "description": "True if the parameter has to be inside the args map",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "b930eaad-3227-4d0f-a65f-efeb8cf119cf",
               "useForCreation": true,
               "defaultValue": null,
               "name": "type",
               "multiple": "false",
               "format": null,
               "description": "The parameter data type",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "907e98dc-fe18-4c80-ab7f-29e783c18fa5",
         "name": "AMQP Queue Config Instance",
         "description": "A real configuration value for a specific queue",
         "fields": [
            {
               "jsondocId": "7e1679fc-71d1-45e8-8c59-7a61985e81d7",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5ac24665-ea62-49af-82bf-a838601aa970",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8f112760-4488-4098-be24-0f249c3c1f74",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "83062ee3-ff19-44cf-b377-7a4a2ff7c2ac",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1e6c7cb3-3b2a-4164-b33c-186991601675",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "69a39b5d-5ac5-45ec-8271-ecbcd37acbf0",
               "useForCreation": true,
               "defaultValue": null,
               "name": "queue",
               "multiple": "false",
               "format": null,
               "description": "The queue that will be created with a specific value for a specific parameter",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "0494d698-18f4-4221-979c-8f3a56c89388",
               "useForCreation": true,
               "defaultValue": null,
               "name": "config",
               "multiple": "false",
               "format": null,
               "description": "The overridden parameter",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "4b1a8905-b463-4c64-babe-58d22b47359e",
               "useForCreation": true,
               "defaultValue": null,
               "name": "value",
               "multiple": "false",
               "format": null,
               "description": "The value of the overridden parameter",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "1e939989-4a7c-491b-b256-37b785074e11",
         "name": "Abstract image",
         "description": "A N-dimensional image stored on disk",
         "fields": [
            {
               "jsondocId": "b039bff6-a4e7-4ee5-beca-af1e53e43575",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f7bc566d-0391-47f4-bcb3-4cacf3326e76",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3341d7f3-6509-44e6-868e-7378b895ccf8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "baf78b8a-9adf-48e5-a5fc-bec2801355e6",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7f1c06b4-4c61-4717-8a75-4466337ee91a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "88b07936-d44e-4194-919b-70a20c201a94",
               "useForCreation": false,
               "defaultValue": null,
               "name": "filename",
               "multiple": "false",
               "format": null,
               "description": "Similar to original filename.",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d37ce24d-16f8-4e4a-9b57-e6fb172cdec0",
               "useForCreation": false,
               "defaultValue": null,
               "name": "originalFilename",
               "multiple": "false",
               "format": null,
               "description": "The image filename (will be show in GUI)",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3a6966cd-6b22-4215-a373-380bab66af28",
               "useForCreation": true,
               "defaultValue": "0 or null if domain",
               "name": "scanner",
               "multiple": "false",
               "format": null,
               "description": "The instrument that digitalize the image",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "43164d05-1db9-4e21-8224-57916d10f20d",
               "useForCreation": true,
               "defaultValue": "0 or null if domain",
               "name": "sample",
               "multiple": "false",
               "format": null,
               "description": "The source of the image (human, annimal,...)",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9e1ff0ed-e02e-49e2-848c-c89078a88d1a",
               "useForCreation": true,
               "defaultValue": null,
               "name": "uploadedFile",
               "multiple": "false",
               "format": null,
               "description": "The underlying file stored on disk",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "0ab8346b-d6ed-4b23-8bcf-c22bdd14aa2c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "path",
               "multiple": "false",
               "format": null,
               "description": "The internal path of the file",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a00489bf-e926-403a-ad6e-815365df24af",
               "useForCreation": false,
               "defaultValue": null,
               "name": "contentType",
               "multiple": "false",
               "format": null,
               "description": "The image content type",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ff8c1db7-9633-4773-9a4b-99e0eeca5a14",
               "useForCreation": true,
               "defaultValue": "-1",
               "name": "width",
               "multiple": "false",
               "format": null,
               "description": "The N-dimensional image width, in pixels (X)",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "32177c01-a60c-426c-a992-3b2aa532b5d6",
               "useForCreation": true,
               "defaultValue": "-1",
               "name": "height",
               "multiple": "false",
               "format": null,
               "description": "The N-dimensional image height, in pixels (Y)",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "abb8fab1-ef65-44e8-bbf6-b8d1a49c59cd",
               "useForCreation": true,
               "defaultValue": "1",
               "name": "depth",
               "multiple": "false",
               "format": null,
               "description": "The N-dimensional image depth, in z-slices (Z)",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "4dae0c3a-8a4a-4800-b7fd-1b7ab187f685",
               "useForCreation": true,
               "defaultValue": "1",
               "name": "duration",
               "multiple": "false",
               "format": null,
               "description": "The N-dimensional image duration, in frames (T)",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c2e0a110-9f7b-4c5d-acde-01975e7991c7",
               "useForCreation": true,
               "defaultValue": "1",
               "name": "channels",
               "multiple": "false",
               "format": null,
               "description": "The N-dimensional image channels (C)",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "fd6aea46-298c-4550-8053-4cf4e46c46cc",
               "useForCreation": false,
               "defaultValue": null,
               "name": "dimensions",
               "multiple": "false",
               "format": null,
               "description": "Textual dimensions of the image: XY, XYZ, XYC, XYT, XYZC, XYZT, XYCT, XYCZT",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6df4632f-8dbb-41b4-88d2-3b7506755c0b",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "physicalSizeX",
               "multiple": "false",
               "format": null,
               "description": "Physical size of a pixel along X axis",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a123787e-0c0c-4404-ae98-f42af6517a91",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "physicalSizeY",
               "multiple": "false",
               "format": null,
               "description": "Physical size of a pixel along Y axis",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "85bade60-8269-4ed4-8f9b-b26836001af3",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "physicalSizeZ",
               "multiple": "false",
               "format": null,
               "description": "Physical size of a pixel along Z axis",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "2dbe483f-710e-4646-b0c1-e6bfa447be16",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "fps",
               "multiple": "false",
               "format": null,
               "description": "The number of frames per second",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0eba0cab-8869-47e2-9405-c640df73292b",
               "useForCreation": false,
               "defaultValue": null,
               "name": "zoom",
               "multiple": "false",
               "format": null,
               "description": "The number of zooms available in the image",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b555bec4-05c0-46ba-89f2-ee60899948f2",
               "useForCreation": true,
               "defaultValue": null,
               "name": "resolution",
               "multiple": "false",
               "format": null,
               "description": "The image resolution (microm per pixel)",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "cd52e312-532f-4778-924c-1b0aebc9b7db",
               "useForCreation": true,
               "defaultValue": null,
               "name": "magnification",
               "multiple": "false",
               "format": null,
               "description": "The image max zoom",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "54ac0d44-a598-429f-9813-3617317cb860",
               "useForCreation": true,
               "defaultValue": null,
               "name": "bitPerSample",
               "multiple": "false",
               "format": null,
               "description": "The number of bits per sample (color)",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "26ce4fd4-020c-474a-af3a-3f91cac68051",
               "useForCreation": true,
               "defaultValue": null,
               "name": "samplePerPixel",
               "multiple": "false",
               "format": null,
               "description": "The number of samples (colors) per pixel",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "3a74f271-8b33-474a-988e-fbd4f4b201a9",
               "useForCreation": true,
               "defaultValue": null,
               "name": "colorspace",
               "multiple": "false",
               "format": null,
               "description": "The image colorspace",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "da9debe4-72ab-4c2a-b963-8b4eff1a1fce",
               "useForCreation": false,
               "defaultValue": null,
               "name": "thumb",
               "multiple": "false",
               "format": null,
               "description": "URL to get abstract image short view (htumb)",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c745a935-652c-41f7-91c1-76355be8fdbe",
               "useForCreation": false,
               "defaultValue": null,
               "name": "preview",
               "multiple": "false",
               "format": null,
               "description": "URL to get image preview",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "4bcf26a2-4e0b-412e-b03a-754b648b1486",
               "useForCreation": false,
               "defaultValue": null,
               "name": "macroURL",
               "multiple": "false",
               "format": null,
               "description": "URL to get image macros",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b5c15fdc-eadf-4256-a58e-fa5b6be81700",
               "useForCreation": true,
               "defaultValue": null,
               "name": "bitDepth",
               "multiple": "false",
               "format": null,
               "description": "The image bit depth (bits per channel)",
               "presentInResponse": false,
               "type": "Integer",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "1a4a390e-9988-4030-96e8-82eef5d0c541",
               "useForCreation": false,
               "defaultValue": null,
               "name": "metadataUrl",
               "multiple": "false",
               "format": null,
               "description": "URL to get image file metadata",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ed586358-b636-4ed5-b15d-6afd468707de",
               "useForCreation": true,
               "defaultValue": "current user",
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The image owner",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "55f26045-095c-49df-ae4c-2bab43f862c1",
         "name": "Abstract slice",
         "description": "An abstract slice of a N-dimensional image",
         "fields": [
            {
               "jsondocId": "41531c9f-0b15-4f4d-a3c8-ffd7eed313ad",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "fda67d3b-bd26-49fe-afe7-1176d13df1bf",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7115d3c1-d970-4a92-af7e-ce34607c36c2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c4008400-20b0-4ef6-aa19-81c09b295bab",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1991e54f-d7c4-4110-b48d-5adff7851160",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "dff4fd86-f839-44d9-a8db-796c1af428e4",
               "useForCreation": true,
               "defaultValue": null,
               "name": "uploadedFile",
               "multiple": "false",
               "format": null,
               "description": "The underlying file for the slice",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "25f40276-c00f-4764-9720-464a21221d91",
               "useForCreation": false,
               "defaultValue": null,
               "name": "imageServerUrl",
               "multiple": "false",
               "format": null,
               "description": "URL of the server with tiles",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "588341fb-e48a-49b3-8288-8dbc5f44b5e2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "path",
               "multiple": "false",
               "format": null,
               "description": "The internal path of the file",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a4aa4950-65f3-438c-8cdc-f486680c6f05",
               "useForCreation": true,
               "defaultValue": null,
               "name": "image",
               "multiple": "false",
               "format": null,
               "description": "The abstract image encapsulating this slice",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "8b7219b1-31f5-46cd-8274-633307c59f75",
               "useForCreation": true,
               "defaultValue": null,
               "name": "mime",
               "multiple": "false",
               "format": null,
               "description": "The Cytomine internal slice mime type.",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "ced28653-2eeb-4a5e-8c6f-1e71f0c4a364",
               "useForCreation": true,
               "defaultValue": null,
               "name": "channel",
               "multiple": "false",
               "format": null,
               "description": "The channel this plane is for. No unit. This is numbered from 0.",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "46f4ccfc-e0d3-42c7-8cf7-33297441fb8f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "zStack",
               "multiple": "false",
               "format": null,
               "description": "The Z-section this plane is for. No unit. This is numbered from 0.",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "cb6c637a-4401-48bf-9eb8-acad8fdc8f3f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "time",
               "multiple": "false",
               "format": null,
               "description": "The timepoint this plane is for. No unit. This is numbered from 0.",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "a88a7c09-e038-44b8-b23c-0d7bdd480107",
               "useForCreation": true,
               "defaultValue": null,
               "name": "channelName",
               "multiple": "false",
               "format": null,
               "description": "Optional channel name",
               "presentInResponse": true,
               "type": "string",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "6eed1698-04e2-433e-a888-8d9f5911ba91",
               "useForCreation": false,
               "defaultValue": null,
               "name": "rank",
               "multiple": "false",
               "format": null,
               "description": "The rank of the slice computed as ['channel' + 'image.channels' * ('zStack' + 'image.depth' * 'time')]",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "f166732f-8106-4891-8c8d-d539e78b7840",
         "name": "Algo annotation",
         "description": "",
         "fields": [
            {
               "jsondocId": "34c3d2cb-ed6f-4364-89a6-96caebe588b9",
               "useForCreation": false,
               "defaultValue": null,
               "name": "area",
               "multiple": "false",
               "format": null,
               "description": "The annotation area",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "bc2f39af-8d59-47cc-8232-f81fff14ca83",
               "useForCreation": false,
               "defaultValue": null,
               "name": "areaUnit",
               "multiple": "false",
               "format": null,
               "description": "The unit used for area (pixels²=1,micron²=3)",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "49fa4ed5-220a-4868-a6e6-573864969791",
               "useForCreation": false,
               "defaultValue": null,
               "name": "centroid",
               "multiple": "false",
               "format": null,
               "description": "X,Y coord of the annotation centroid",
               "presentInResponse": true,
               "type": "map(x,y)",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "33c3367e-f315-4f3a-a124-81c71c28ddb5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "385dcdb7-796b-46f5-8907-b385daf6de50",
               "useForCreation": false,
               "defaultValue": null,
               "name": "countReviewedAnnotations",
               "multiple": "false",
               "format": null,
               "description": "The number of reviewed annotations for this annotation",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "fd9f800a-abfa-4219-86b5-ff79c278296f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0f883727-9d9d-47b8-8844-f25bfaa0dbe5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "cropURL",
               "multiple": "false",
               "format": null,
               "description": "URL to get the annotation crop",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e58d737e-8d90-49f8-b66c-c52c1a8d0a9c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a8d2ecbe-c9eb-41e7-ae50-4c64dba6959e",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "geometryCompression",
               "multiple": "false",
               "format": null,
               "description": "The geometry compression rate used to simplify the annotation (during creation)",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "bb132fa8-0a8a-4f75-9b73-3fc258f24c00",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "52a9bfdc-a8bc-4feb-aa6b-1b1e8efe4697",
               "useForCreation": true,
               "defaultValue": null,
               "name": "image",
               "multiple": "false",
               "format": null,
               "description": "The image on which the annotation is drawn",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "9629408a-8e26-442c-a151-764cd357cb51",
               "useForCreation": false,
               "defaultValue": null,
               "name": "imageURL",
               "multiple": "false",
               "format": null,
               "description": "URL to go to the image",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "992669d1-4a86-4b30-a324-d97ff68236b2",
               "useForCreation": true,
               "defaultValue": null,
               "name": "location",
               "multiple": "false",
               "format": null,
               "description": "The annotation geometry (shape) in WKT",
               "presentInResponse": true,
               "type": "string",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "565a90a1-406a-431b-9faa-412a33eb0480",
               "useForCreation": false,
               "defaultValue": null,
               "name": "nbComments",
               "multiple": "false",
               "format": null,
               "description": "The number of comments added by a user on this annotation",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "25b18fba-4879-4389-9c36-999a7bd34121",
               "useForCreation": false,
               "defaultValue": null,
               "name": "perimeter",
               "multiple": "false",
               "format": null,
               "description": "The annotation perimeter",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "19b00554-1dc9-4df9-9347-f23a3985e866",
               "useForCreation": false,
               "defaultValue": null,
               "name": "perimeterUnit",
               "multiple": "false",
               "format": null,
               "description": "The unit used for perimeter (pixels=0,mm=2,)",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "45a24e8d-d253-41ec-a5db-86d3391bcf14",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project in which the annotation is drawn",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "ff3a922a-67c9-4cb8-ace7-913b54360d0c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "reviewed",
               "multiple": "false",
               "format": null,
               "description": "True if annotation has at least one review",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9695e9df-7fc6-434c-89ab-6e18cca4b685",
               "useForCreation": true,
               "defaultValue": null,
               "name": "slice",
               "multiple": "false",
               "format": null,
               "description": "The slice on which the annotation is drawn",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "9529bcb6-61d9-45b1-9200-c2cf3c08a7f6",
               "useForCreation": false,
               "defaultValue": null,
               "name": "smallCropURL",
               "multiple": "false",
               "format": null,
               "description": "URL to get a small annotation crop (<256px)",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a11f7141-f818-4864-aed2-96cd9a7dfe89",
               "useForCreation": true,
               "defaultValue": "[]",
               "name": "term",
               "multiple": "true",
               "format": null,
               "description": "List of term id mapped with this annotation",
               "presentInResponse": true,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "314a2e04-d138-4ea4-aae7-82a395c87289",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b2bbf7a3-42c1-43a4-8c4f-1e036bc16b8e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "url",
               "multiple": "false",
               "format": null,
               "description": "URL to go to the annotation on the image",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9124d5ca-8826-4832-94e2-6805a41a9f02",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The user job that add this annotation",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "4c0a3236-383d-41ac-8e76-6c684b12221d",
         "name": "Algo annotation term",
         "description": "Term added to an annotation by a job. Annotation can be: -algo annotation (create by a job) or -user annotation (create by a real user)",
         "fields": [
            {
               "jsondocId": "46d3d023-2dbe-4933-9842-187b3487e62a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "21e062c8-fb84-4469-bcb4-ceeb9b37d18e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "10aa5a46-ae05-438a-98dd-29edaf9f821c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "023ce88c-7791-4ff5-9681-6e9e5b0ab598",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "80f1f365-01d9-4354-9970-a084d0b95d37",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "59b9c32b-d2c1-45ff-a61b-9b2cf9cc19e7",
               "useForCreation": true,
               "defaultValue": null,
               "name": "annotationIdent",
               "multiple": "false",
               "format": null,
               "description": "The annotation id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "5211ded3-fa8c-4d99-9f9b-4541f417709f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "annotationClassName",
               "multiple": "false",
               "format": null,
               "description": "The annotation class type (user or algo)",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "1b4c99c4-6de9-4627-a67c-ad0ffe47939a",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "annotation",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "55a6f970-3410-4381-b4fa-a47ae112fd39",
               "useForCreation": true,
               "defaultValue": null,
               "name": "term",
               "multiple": "false",
               "format": null,
               "description": "The term id",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "b8786e78-e9b8-42ae-8dc6-550ccd39cf1f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "expectedTerm",
               "multiple": "false",
               "format": null,
               "description": "The real term id, the term added by the user previously",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "4e657c71-8274-48d2-b723-01a3caa08388",
               "useForCreation": true,
               "defaultValue": null,
               "name": "rate",
               "multiple": "false",
               "format": null,
               "description": "The reliability of the prediction",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "b1b6fd81-69ee-4cec-83ac-3f497e23beab",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The user job id",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "0a4f87d1-2fde-4550-827d-854acccdd669",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project id",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "1108acb6-d292-47ed-99bf-126e0a8a0673",
         "name": "Annotation action",
         "description": "Each AnnotationAction represent an action (Select, add, update, delete) on an annotation.",
         "fields": [
            {
               "jsondocId": "1af8513f-d2c8-4ede-915a-eac34527813d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "239f4284-132b-4afd-9ae5-c9603b709718",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "213da646-72a6-44ae-943e-f67168c3511d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d6c3a297-b2dd-4b7f-9fa7-295708a1889a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "68ff1d27-308c-401d-8e38-9b20c478d76c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "138b2139-be9a-4dac-845d-ecd4c66b1db7",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The user that did the action",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "3424b1c4-8ba0-4163-a4a7-880e04a36309",
               "useForCreation": true,
               "defaultValue": null,
               "name": "image",
               "multiple": "false",
               "format": null,
               "description": "The image which contains the annotation",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "fab285fe-e287-4b02-bacb-fd0f16934c83",
               "useForCreation": true,
               "defaultValue": null,
               "name": "slice",
               "multiple": "false",
               "format": null,
               "description": "The slice which contains the annotation",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "25587a8a-0599-48ed-b2dd-69dea24c16bf",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project which contains the annotation",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "58663658-2b5c-4861-bd37-56420f0543b4",
               "useForCreation": true,
               "defaultValue": null,
               "name": "action",
               "multiple": "false",
               "format": null,
               "description": "The action on the annotation (Select, add, delete, update, ...)",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "20e09b58-4b1b-443b-b915-9d65c3702ada",
               "useForCreation": true,
               "defaultValue": null,
               "name": "annotationIdent",
               "multiple": "false",
               "format": null,
               "description": "The annotation id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "2336ec6d-96c8-48b0-bcb7-a65706414385",
               "useForCreation": false,
               "defaultValue": null,
               "name": "annotationClassName",
               "multiple": "false",
               "format": null,
               "description": "The annotation class type (roi,user,algo,...)",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "97066609-cf9d-4bf7-9bb8-893f2ead174c",
               "useForCreation": true,
               "defaultValue": null,
               "name": "annotationCreator",
               "multiple": "false",
               "format": null,
               "description": "The user that created the annotation",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "10a6d1b9-300a-42a4-902b-50e9c7a209c4",
         "name": "Annotation filter",
         "description": "Define a set of filter for annotation listing",
         "fields": [
            {
               "jsondocId": "8a0916e2-8331-4517-ad31-684cb226db83",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "90daf439-47fa-4ecf-b537-2b7cd29e7298",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f1c59be3-31a4-4784-906a-eae36a624258",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a55f5cff-744e-4e94-9fe8-85496650fb14",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "636b49a3-6063-497d-8675-ca5632bf4924",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "fe54902a-cc54-4a76-9c8a-b93897e834b8",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The filter name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "fa373f26-432f-4551-867d-4b5dd5eeb0b2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The user that create the filter (auto field)",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9815dff0-9224-4c35-8669-9c4e41b60eef",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project of the filter",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "e6ac068f-a44e-45e9-b526-d33e58870562",
               "useForCreation": true,
               "defaultValue": "[]",
               "name": "terms",
               "multiple": "true",
               "format": null,
               "description": "Terms filter id",
               "presentInResponse": true,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "21c2417a-8529-427d-a925-b16657de8a5d",
               "useForCreation": true,
               "defaultValue": "[]",
               "name": "users",
               "multiple": "true",
               "format": null,
               "description": "Users filter id",
               "presentInResponse": true,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "a645cf43-fc6b-4efc-a499-7a489e36472f",
         "name": "Annotation index",
         "description": "A index entry that store, for a slice and a user, the number of annotation created/reviewed",
         "fields": [
            {
               "jsondocId": "74556bbe-1e80-4b1a-adae-be7e3bc8b1a4",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7ef79e73-1c93-4f52-9f83-96881d219e28",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "fa8fd14e-f76f-49b5-b683-0886c972f536",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "208567ff-0210-4d37-b6c5-3131fbe1437f",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9dd1bd4a-320f-48de-a50a-e9294996201b",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "52d3472c-6956-4d53-ba8b-0870243e48d2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The user criteria",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "40d2f517-f90f-4c73-8fb6-e8becaf7d2dd",
               "useForCreation": false,
               "defaultValue": null,
               "name": "slice",
               "multiple": "false",
               "format": null,
               "description": "The slice criteria",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d84d4c7e-1de8-41ac-a06f-1ab21c7231cc",
               "useForCreation": false,
               "defaultValue": null,
               "name": "countAnnotation",
               "multiple": "false",
               "format": null,
               "description": "The number of annotation added by the user (auto incr with trigger)",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d553af0b-4a66-42b7-8c55-fe902ee2e33d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "countReviewedAnnotation",
               "multiple": "false",
               "format": null,
               "description": "The number of review added by the user (auto incr with trigger)",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "9d72ebfc-e357-4084-85e1-3a2d236299fe",
         "name": "Annotation term",
         "description": "Term added to an annotation by a real user (not a job!). Many user can add a term to a single annotation (not only the user that created this annotation)",
         "fields": [
            {
               "jsondocId": "51d917a2-3639-4a79-856f-b4e402a7464c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "160e028e-fea5-48ce-8bb4-3982c45ad224",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "394be101-4e6e-40f6-acd0-adb7bc75d04a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d870593c-c301-4db5-99a1-0f8ad77214be",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "4fd81f7a-e57d-4ac8-8825-8d25b884d36d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "fc3c611d-272e-4607-8ed0-c1f8ce8a2b14",
               "useForCreation": true,
               "defaultValue": null,
               "name": "userannotation",
               "multiple": "false",
               "format": null,
               "description": "The annotation id",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "df49281e-8851-4d2a-9814-2a0d2afb86ae",
               "useForCreation": true,
               "defaultValue": null,
               "name": "term",
               "multiple": "false",
               "format": null,
               "description": "The term id",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "dbdb6a23-1e1c-4448-9528-260c1c39b416",
               "useForCreation": true,
               "defaultValue": "current user",
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The user id",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "2fea10a5-1b05-4ea9-9c69-99c4c73a59cd",
         "name": "AnnotationTrack",
         "description": "Link between an annotation and a track",
         "fields": [
            {
               "jsondocId": "d5a65976-fb69-45df-8bc0-c811bfbda13f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "709cb4e8-76f9-4c59-8766-f10336773d68",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5ed9b648-e3b9-46f4-b750-02d03bbd0a95",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "95aa8f32-3ffb-41e8-8acb-de72367efc5e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "513017de-c23b-40ae-8e8b-0a3df7dd2737",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "dbfb6c1b-e235-430b-9a88-7212671dc842",
               "useForCreation": true,
               "defaultValue": null,
               "name": "annotationIdent",
               "multiple": "false",
               "format": null,
               "description": "Annotation identifier",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "cd786b9c-5d22-4401-9a4e-cc0572060bab",
               "useForCreation": true,
               "defaultValue": null,
               "name": "annotationClassName",
               "multiple": "false",
               "format": null,
               "description": "Annotation class name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "f9dabf41-1507-4aba-96d9-383a34956950",
               "useForCreation": true,
               "defaultValue": null,
               "name": "track",
               "multiple": "false",
               "format": null,
               "description": "The track the association is linked to",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "ec668e20-cb52-45fd-9c0b-2b253ad9f3db",
               "useForCreation": true,
               "defaultValue": null,
               "name": "slice",
               "multiple": "false",
               "format": null,
               "description": "The slice where the annotation is",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "d8ae7df4-f743-4854-b15f-cf90cb6a2062",
         "name": "Attached file",
         "description": "A file that may be attached to any Cytomine domain. Usefull to include file into description.",
         "fields": [
            {
               "jsondocId": "1eaaa05e-e93c-4855-a9c9-c6cf5ed17ac2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "14501b53-f348-4be1-b7e3-092481e5f85d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a9fbc7ec-078c-4eba-99e3-e4a040cf03f9",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "dc2496c5-dd62-4f1b-9abc-a7e971f52924",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8c5014e2-919c-4e3c-98eb-259629312c29",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d3900459-1f10-4436-8e01-d19e85966701",
               "useForCreation": true,
               "defaultValue": null,
               "name": "domainIdent",
               "multiple": "false",
               "format": null,
               "description": "Domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "03878658-5bbf-4e19-abd9-183fe35cb85f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "domainClassName",
               "multiple": "false",
               "format": null,
               "description": "Domain class name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "cd932c7c-4cc5-4033-acd6-596d75919a5a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "url",
               "multiple": "false",
               "format": null,
               "description": "URL to get this file",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "fc16fedb-da7b-4a89-93bd-f1c8429181db",
               "useForCreation": true,
               "defaultValue": null,
               "name": "filename",
               "multiple": "false",
               "format": null,
               "description": "File name with ext",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "d7f8574f-47b8-4df1-841b-6c619bd0ce68",
         "name": "Companion file",
         "description": "A secondary file related to an abstract image",
         "fields": [
            {
               "jsondocId": "36d1ffea-b2b6-4b45-bb7b-245afd0de6c7",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6d618a1b-5915-42ce-bcff-f6945749fe04",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "08c2cd2a-387c-42c4-8561-2568a97b32c4",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1981962d-a84c-4a77-b3c8-ec8418649659",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "755f1d61-89e1-49dc-9e18-b2c7fbcff267",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e22535e4-d336-426a-a455-29622d615518",
               "useForCreation": true,
               "defaultValue": null,
               "name": "uploadedFile",
               "multiple": "false",
               "format": null,
               "description": "The underlying file",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "a55f7287-18ca-4e12-ad2d-21b6fc47b4ad",
               "useForCreation": false,
               "defaultValue": null,
               "name": "path",
               "multiple": "false",
               "format": null,
               "description": "The internal path of the file",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a923239b-729f-4f40-8cc2-af2cdd9d117e",
               "useForCreation": true,
               "defaultValue": null,
               "name": "image",
               "multiple": "false",
               "format": null,
               "description": "The abstract image using this file",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "e8be7d2c-e133-4bdf-a6c4-3535c02d4a99",
               "useForCreation": true,
               "defaultValue": null,
               "name": "originalFilename",
               "multiple": "false",
               "format": null,
               "description": "The original filename from the upload",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "abfdc545-feb7-4fec-82ba-6347f4279fa9",
               "useForCreation": true,
               "defaultValue": null,
               "name": "filename",
               "multiple": "false",
               "format": null,
               "description": "A user-friendly filename",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "f6da3b28-bf99-43e9-8018-be108fa1ec80",
               "useForCreation": true,
               "defaultValue": null,
               "name": "type",
               "multiple": "false",
               "format": null,
               "description": "The type of file",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "54e5139d-693d-4595-8f34-adc9896bbd93",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "progress",
               "multiple": "false",
               "format": null,
               "description": "The file conversion progress",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5963a056-33de-4d71-aa45-eacdbc1cb33b",
               "useForCreation": false,
               "defaultValue": null,
               "name": "status",
               "multiple": "false",
               "format": null,
               "description": "File status",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "2424c9d4-b42e-4e7f-92dc-77982f9b455a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "statusText",
               "multiple": "false",
               "format": null,
               "description": "Textual file status",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "002846d5-9591-42b3-9215-682f4cab6e5a",
         "name": "Description",
         "description": "A domain description (text, image,...).",
         "fields": [
            {
               "jsondocId": "6f7c4d10-339e-4072-a8da-da9439fd1f37",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b8d1f6f4-0e62-465f-bd70-f57ed782add0",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "2637a659-39de-4718-a0ab-3aed2c81b99b",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7938e818-50a0-487b-adaa-6c7e9f9dfd96",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6b7e8cc8-b990-47a8-9a4b-cb4331aa185e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8c902bcb-c9fc-4390-be92-38531dcf5b16",
               "useForCreation": true,
               "defaultValue": null,
               "name": "domainClassName",
               "multiple": "false",
               "format": null,
               "description": "Domain class name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "76c99b2d-0980-4ce0-a6ba-2eafe823091d",
               "useForCreation": true,
               "defaultValue": null,
               "name": "domainIdent",
               "multiple": "false",
               "format": null,
               "description": "Domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "e017113c-7d65-4509-8032-16695fde7660",
               "useForCreation": true,
               "defaultValue": null,
               "name": "data",
               "multiple": "false",
               "format": null,
               "description": "Description text",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "3cd5bf54-2e96-4887-a8f6-eb21c3b14252",
         "name": "Discipline",
         "description": "A discipline is a thematic for a project",
         "fields": [
            {
               "jsondocId": "5e970ecf-cec0-4084-9e45-677d74415508",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b43b8777-0bea-4a6d-b738-50f2e7ba7d70",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "aec0481c-1d92-4906-b0e9-da37b6b52a46",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7afa6da9-0a4e-45a6-87b0-d8100cba053b",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "05c3fa56-3ae8-45d2-8852-98540a9c40c3",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1ae7d711-b605-41a1-8948-0fe2ed0f7724",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The name of the discipline",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "2bf2ad3d-6370-4836-bd64-d604eae934e3",
         "name": "Group",
         "description": "A group is a set of users. A user may be in many groups",
         "fields": [
            {
               "jsondocId": "06b7978f-c0d7-44ee-a053-387789096426",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "20a125ac-242f-4a21-89f4-4c3de2931d26",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e0e617ef-f0a8-48ca-a5a6-d3a4098cfa8c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "2495c913-b6d9-4536-941e-de54141d5c80",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "65459a59-3cad-4e3e-a1a4-856b67ab6f42",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "19c708a9-ee2a-4653-8f72-bd433e763a75",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The group name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "67ae35e6-2180-4d3b-8bf2-c218bd4bd522",
               "useForCreation": true,
               "defaultValue": null,
               "name": "gid",
               "multiple": "false",
               "format": null,
               "description": "The id for external connection (LDAP, etc.)",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "add65596-8291-4e92-afb1-717a8e33066b",
         "name": "Image Group HDF5",
         "description": "A group of images from the same source with different dimension and HDF5 support",
         "fields": [
            {
               "jsondocId": "abcfaf51-aae5-41a7-8d39-05cb7afa5d27",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8600183b-bf03-477f-9e48-16936b06c238",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b6aaff9c-feb1-4b4a-b089-63b678bba088",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "4b6fb6f3-fd97-4683-a8b1-12aa7d05d807",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5f1d2385-234e-4cfd-8e02-53ccebafad52",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "2915e18d-c576-49df-84a5-9c3efc335894",
               "useForCreation": true,
               "defaultValue": null,
               "name": "group",
               "multiple": "false",
               "format": null,
               "description": "The image group",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "f23f1b1f-7507-46da-9081-47a12e27e80b",
               "useForCreation": true,
               "defaultValue": null,
               "name": "filename",
               "multiple": "false",
               "format": null,
               "description": "The filename for the HDF5 file",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "a58568e7-6fc5-4382-9877-59360c181f48",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "progress",
               "multiple": "false",
               "format": null,
               "description": "The conversion progression (from 0 to 100)",
               "presentInResponse": true,
               "type": "Int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ea095d5f-6737-414e-bfed-202554ec3af7",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "status",
               "multiple": "false",
               "format": null,
               "description": "The conversion status (NOTLAUNCH = 0, RUNNING = 1, SUCCESS = 2, FAILED = 3)",
               "presentInResponse": true,
               "type": "Int",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "daefbf22-bcdf-4fdc-8f6b-bf8fddc5ed11",
         "name": "Image filter",
         "description": "An image filter applies image operations (Binary, Eosin,...)",
         "fields": [
            {
               "jsondocId": "7b0f0e0e-7462-4b0c-be2d-88a00f26812b",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6219815a-42fb-4bcc-976f-1fc942e627bf",
               "useForCreation": false,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The filter name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "23749aa4-3488-4b57-84c8-ee5b61de14e2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "imagingServer",
               "multiple": "false",
               "format": null,
               "description": "The URL of the imaging server",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "206939c2-72d1-42f7-8a32-3594836be65a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "baseUrl",
               "multiple": "false",
               "format": null,
               "description": "The URL path of the filter on the imaging server",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6fe1ae31-add8-492b-a8b0-ea307f97a326",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ab096b45-4f70-4430-acbb-90958008b3fd",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": false,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "87df0a59-d446-4709-96f6-51f37abf4187",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": false,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "44ded3c4-7d87-49dd-9a12-35f508224feb",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": false,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "150249fb-ac64-48d3-a64d-87bad84c7ffd",
         "name": "Image filter project",
         "description": "An image filter can be link to many projects",
         "fields": [
            {
               "jsondocId": "820d6616-712b-46c3-acbf-09c7b84cea0c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ccc88761-0aa1-4f2b-b64c-dcf10b8ef731",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "2ec08f1e-753c-4dea-a4f7-b4a5fec29648",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "49bb088a-f60f-4b75-b635-99830ccd19a5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "74dfa352-43cb-4e66-9bec-5d4c0fb08989",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "16b88097-9310-422c-a080-b7b57a79d733",
               "useForCreation": true,
               "defaultValue": null,
               "name": "imageFilter",
               "multiple": "false",
               "format": null,
               "description": "The filter",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "91fa950c-64cc-42d8-8d12-9886dd80d372",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "72b766c2-a768-4c14-9481-51604debd6dd",
               "useForCreation": false,
               "defaultValue": null,
               "name": "imagingServer",
               "multiple": "false",
               "format": null,
               "description": "The URL of the imaging server",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "50a5f426-469f-4264-8aba-91ff6d6f5b80",
               "useForCreation": false,
               "defaultValue": null,
               "name": "baseUrl",
               "multiple": "false",
               "format": null,
               "description": "The URL path of the filter on the imaging server",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "da56f45e-ab19-4985-861e-60879a587633",
               "useForCreation": false,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The filter name",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "9a0e2982-9afa-4385-b102-053381a10d39",
         "name": "Image group",
         "description": "A group of image from the same source with different dimension",
         "fields": [
            {
               "jsondocId": "60963792-59b4-447f-ad75-883b2a084b8e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a0202817-e466-4fd6-9180-13da34257f32",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "350fe15c-7fda-41de-b432-57448b8b64e8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "90d4726d-0ed8-4c26-953a-15aa82c1f7bc",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "51cdadaa-1760-40ca-a0bc-874fe10b39bc",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "12b1144c-fa57-4dbf-9c64-0e7884d4e8c7",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The name of the project",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "f9b1a622-0655-4db6-b7c0-e429d6936040",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The image group project",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "37fd2353-d5fa-48fc-babb-19047336c764",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "thumb",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "78ee6370-9068-4709-aed3-2647ae2179dc",
         "name": "Image instance",
         "description": "A link between 'abstract image' and 'project'. An 'abstract image' may be in multiple projects.",
         "fields": [
            {
               "jsondocId": "140b730e-2958-468e-beb9-56a514c9127a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "741446cf-8e99-493a-9218-24fc6f7a0a01",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1cbcb668-fdfb-4977-b97d-6095f3025d97",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "93831170-602e-41ad-be29-468f5ab42f90",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c7f5db25-ad59-494d-bb21-86dd3c24355d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0e7a63d4-bd30-4a09-9d40-db44095181f3",
               "useForCreation": true,
               "defaultValue": null,
               "name": "baseImage",
               "multiple": "false",
               "format": null,
               "description": "The image linked to the project",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "368578b2-bf43-4b6b-ae19-bc3476cee62e",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project that keeps the image",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "34098085-1239-482a-91e5-6d9b4a3e6b0f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The user that add the image to the project",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "4c5d8e8c-5272-49e1-b5f6-b35038248dba",
               "useForCreation": false,
               "defaultValue": null,
               "name": "instanceFilename",
               "multiple": "false",
               "format": null,
               "description": "Instance image filename",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0048786b-e804-49a0-a6d0-1fb44faa7c29",
               "useForCreation": false,
               "defaultValue": null,
               "name": "originalFilename",
               "multiple": "false",
               "format": null,
               "description": "Original filename",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a697bcc8-107c-4693-a807-3203dcbff4b2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "filename",
               "multiple": "false",
               "format": null,
               "description": "Similar to originalFilename",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "548ff78d-77b5-4249-9622-417bfa8da2fb",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "blindedName",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ae1eb6fe-daa0-40e5-b2e8-e45394b23480",
               "useForCreation": false,
               "defaultValue": null,
               "name": "path",
               "multiple": "false",
               "format": null,
               "description": "The internal path of the file",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f4f5ae21-43a9-4d6b-a208-98959c2de3e4",
               "useForCreation": false,
               "defaultValue": null,
               "name": "contentType",
               "multiple": "false",
               "format": null,
               "description": "The image content type",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "45db60e4-dae7-44d8-a846-8f705cc0ce0d",
               "useForCreation": true,
               "defaultValue": "0 or null if domain",
               "name": "sample",
               "multiple": "false",
               "format": null,
               "description": "The source of the image (human, animal,...)",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5bc9e70c-72e3-4dae-9914-95ca603ff66c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "width",
               "multiple": "false",
               "format": null,
               "description": "The N-dimensional image width, in pixels (X)",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7afe9afe-9d07-4380-a1fb-0bc82c22cec5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "height",
               "multiple": "false",
               "format": null,
               "description": "The N-dimensional image height, in pixels (Y)",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a48dbb61-1fd6-40b5-b15e-f087de912aa5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "depth",
               "multiple": "false",
               "format": null,
               "description": "The N-dimensional image depth, in z-slices (Z)",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a16fc4b4-1da8-42cc-9d39-da7d31a40ecc",
               "useForCreation": false,
               "defaultValue": null,
               "name": "duration",
               "multiple": "false",
               "format": null,
               "description": "The N-dimensional image duration, in frames (T)",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e8fea4aa-38fe-419a-bf97-bc548923b9e4",
               "useForCreation": false,
               "defaultValue": null,
               "name": "channels",
               "multiple": "false",
               "format": null,
               "description": "The N-dimensional image channels (C)",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "890b09bb-b755-48c4-abd5-3c98a98d50b9",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "physicalSizeX",
               "multiple": "false",
               "format": null,
               "description": "Physical size of a pixel along X axis",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0f605ab2-6379-4946-9347-63817354c0be",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "physicalSizeY",
               "multiple": "false",
               "format": null,
               "description": "Physical size of a pixel along Y axis",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "27275f30-700e-4e66-a2a1-23a67aded53d",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "physicalSizeZ",
               "multiple": "false",
               "format": null,
               "description": "Physical size of a pixel along Z axis",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3e4936b2-c6c0-4c95-8bc7-4617568e0dca",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "fps",
               "multiple": "false",
               "format": null,
               "description": "The number of frames per second",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "73d804da-d783-48a5-b1ee-83c2b758b657",
               "useForCreation": false,
               "defaultValue": null,
               "name": "zoom",
               "multiple": "false",
               "format": null,
               "description": "The number of zooms available in the image",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "aef5d017-69ce-4aba-a4aa-6c712a3eccce",
               "useForCreation": true,
               "defaultValue": null,
               "name": "resolution",
               "multiple": "false",
               "format": null,
               "description": "The image resolution (microm per pixel)",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "b2855400-7efb-4a88-a26a-1766c8b36e79",
               "useForCreation": true,
               "defaultValue": null,
               "name": "magnification",
               "multiple": "false",
               "format": null,
               "description": "The image max zoom",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "e20b9f0b-f9ea-4aed-8961-54d13322f6d6",
               "useForCreation": false,
               "defaultValue": null,
               "name": "bitPerSample",
               "multiple": "false",
               "format": null,
               "description": "The number of bits per sample (color)",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "bed3c13c-79e2-4a98-8dbf-93be213e302a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "samplePerPixel",
               "multiple": "false",
               "format": null,
               "description": "The number of samples (colors) per pixel",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d2860b71-fda1-4bd2-8313-5557c5bc829e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "colorspace",
               "multiple": "false",
               "format": null,
               "description": "The image colorspace",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "690f6876-d817-46cd-90e4-31ea1df01fb9",
               "useForCreation": false,
               "defaultValue": null,
               "name": "reviewStart",
               "multiple": "false",
               "format": null,
               "description": "The start review date",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "bcfad442-87fd-4df9-912f-d1502d511b6f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "reviewStop",
               "multiple": "false",
               "format": null,
               "description": "The stop review date",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1d03294d-5bef-4b4c-9afd-a24814e0fcac",
               "useForCreation": false,
               "defaultValue": null,
               "name": "reviewUser",
               "multiple": "false",
               "format": null,
               "description": "The user who reviewed (or still reviewing) this image",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d0fc0981-ea7c-4273-b450-8fd228080bbe",
               "useForCreation": false,
               "defaultValue": null,
               "name": "reviewed",
               "multiple": "false",
               "format": null,
               "description": "Image has been reviewed",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "bf319647-9b16-4fa3-a044-376f9cc69d7f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "inReview",
               "multiple": "false",
               "format": null,
               "description": "Image currently reviewed",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d714112e-6477-491a-a535-1aae269f7be7",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfAnnotations",
               "multiple": "false",
               "format": null,
               "description": "The number of user annotation in the image",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a994e7b5-3c2f-401d-8ca3-875f396afb24",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfJobAnnotations",
               "multiple": "false",
               "format": null,
               "description": "The number of job annotation in the image",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5c16e5fc-33c2-40e3-8419-af5893da7791",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfReviewedAnnotations",
               "multiple": "false",
               "format": null,
               "description": "The number of reviewed annotation in the image",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1e3261b8-22ae-466d-9c78-f07bfa3d1c3d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "thumb",
               "multiple": "false",
               "format": null,
               "description": "URL to get abstract image short view (thumb)",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5e13b979-f634-477b-9abc-4024115fac69",
               "useForCreation": false,
               "defaultValue": null,
               "name": "preview",
               "multiple": "false",
               "format": null,
               "description": "URL to get image preview",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "09be8c7f-5e87-4fc7-8d7f-430b154c0c45",
               "useForCreation": false,
               "defaultValue": null,
               "name": "macroURL",
               "multiple": "false",
               "format": null,
               "description": "URL to get image macros",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "1c224a3b-87ec-4f5a-a80e-386170d9bcbc",
         "name": "Image sequence",
         "description": "A position of an image in the image group",
         "fields": [
            {
               "jsondocId": "3a56d638-ed9e-416c-98b6-c762fbf07ba9",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5a6664d5-0d65-443b-b324-95f485a2942f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1a3e24dd-06f0-4235-b814-a6c485d67790",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "31aba4ef-92b0-4045-90ed-c5d65f6b90d5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "68ab60f5-ff73-4ed4-99e7-6b4a275fd5a2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "83b26833-460a-4f9a-9013-fe0405ec4f42",
               "useForCreation": true,
               "defaultValue": null,
               "name": "image",
               "multiple": "false",
               "format": null,
               "description": "The image",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "58ffc37d-13ec-456c-b2f5-5068fe852656",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "zStack",
               "multiple": "false",
               "format": null,
               "description": "The image zStack",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3897450f-f0b0-4e2b-bd0e-d8f3d1c15764",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "slice",
               "multiple": "false",
               "format": null,
               "description": "The image slice",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "18d80b28-47d8-4089-a39d-3ab4af79b062",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "time",
               "multiple": "false",
               "format": null,
               "description": "The image time",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "bcb82c26-0fc9-43ad-b919-f38de60509ae",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "channel",
               "multiple": "false",
               "format": null,
               "description": "The image channel",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f84e7e9f-bcc5-4136-ac23-fb3b7be5d2fc",
               "useForCreation": true,
               "defaultValue": null,
               "name": "imageGroup",
               "multiple": "false",
               "format": null,
               "description": "The image group",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "b74db802-018f-4f65-a6ce-45569071c7d0",
               "useForCreation": false,
               "defaultValue": null,
               "name": "model",
               "multiple": "false",
               "format": null,
               "description": "The image instance full data (see image instance for more details)",
               "presentInResponse": true,
               "type": "domain",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "9d5a3892-95d2-4d62-98c0-d8edeb959b68",
         "name": "Image server",
         "description": "An image server (IMS) instance",
         "fields": [
            {
               "jsondocId": "4f1df519-b159-4d19-9162-bfb5117d3de1",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "037afb21-97c4-4f7f-9735-039e4399206e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b299ee39-283c-4942-8fe0-303040823743",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "bf011490-442f-4c16-a718-ea04a6e15c73",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3db7e455-67fc-4c26-b061-4a4fcb5d012b",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c80f4654-ab79-4a08-9107-d8dcf09c6e47",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "A user friendly name for IMS instance.",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7b33f8c5-e442-4a2a-8d97-2064c9434c5f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "url",
               "multiple": "false",
               "format": null,
               "description": "The URL of the image server instance",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "a085022b-a2df-48dd-838c-5895e2c24480",
               "useForCreation": true,
               "defaultValue": null,
               "name": "basePath",
               "multiple": "false",
               "format": null,
               "description": "The base path used by the image server",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "a6d7a6c9-6601-4b32-a19a-890553774653",
               "useForCreation": true,
               "defaultValue": null,
               "name": "available",
               "multiple": "false",
               "format": null,
               "description": "A flag for the server availability",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "e96bdc45-ce41-4447-ac10-da89798af728",
         "name": "Job",
         "description": "A job is a software instance. This is the execution of software with some parameters",
         "fields": [
            {
               "jsondocId": "7ea2a29b-ab53-4abe-9c96-bb4334145834",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "83df4de2-28b5-4fcc-a7e6-0141cd043013",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1a093f5a-7fe1-44c9-8b4e-87fa18e35211",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "032469f6-22d1-478e-95f0-fd18079939fc",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d0dfa816-b201-4fd8-96b8-497d0d382a80",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a1f8b8fd-a306-4bbf-98e9-df3fbbf2485c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "algoType",
               "multiple": "false",
               "format": null,
               "description": "The algo type based on the class name",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "4c33ee6d-d7fb-433c-a93e-8b0e40268ffb",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "progress",
               "multiple": "false",
               "format": null,
               "description": "The algo progression (from 0 to 100)",
               "presentInResponse": true,
               "type": "Int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f3f18054-f076-495a-a405-90256cb5645a",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "status",
               "multiple": "false",
               "format": null,
               "description": "The algo status (NOTLAUNCH = 0, INQUEUE = 1, RUNNING = 2,SUCCESS = 3,FAILED = 4,INDETERMINATE = 5,WAIT = 6,PREVIEWED = 7, KILLED=8)",
               "presentInResponse": true,
               "type": "Int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c2d49a70-12e1-4dd2-a586-2c9d067218ae",
               "useForCreation": false,
               "defaultValue": null,
               "name": "number",
               "multiple": "false",
               "format": null,
               "description": "Job Indice for this software in this project",
               "presentInResponse": true,
               "type": "Int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "65194bcc-e8b8-40a2-a3a3-11dde61da22f",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "statusComment",
               "multiple": "false",
               "format": null,
               "description": "Text comment for the job status",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5db0e17a-eb87-438a-8c57-3ef108b07b95",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project of the job",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "56cdcb55-3dad-4b8f-b161-a2db0bcaf9df",
               "useForCreation": true,
               "defaultValue": null,
               "name": "processingServer",
               "multiple": "false",
               "format": null,
               "description": "The processing server in charge to run the job",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "2bbb3ca1-db4f-4685-bc5a-00b7a9f2a816",
               "useForCreation": true,
               "defaultValue": null,
               "name": "software",
               "multiple": "false",
               "format": null,
               "description": "The software of the job",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "96d82e99-97a7-4f7b-a004-73e074a2003e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "softwareName",
               "multiple": "false",
               "format": null,
               "description": "The software name of the job",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "58ab86e3-5b90-430e-90c3-e47a15cc7a33",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "rate",
               "multiple": "false",
               "format": null,
               "description": "Generic field for job rate info. The rate is a quality value about the job works",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6073110e-b2d6-4bb8-9d13-77092f9f7183",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "dataDeleted",
               "multiple": "false",
               "format": null,
               "description": "Flag to see if data generate by this job are deleted",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f839626a-cfda-4d9d-a3ad-a12175543766",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "favorite",
               "multiple": "false",
               "format": null,
               "description": "Flag to star an interesting job",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "4464d785-cb3e-468e-8a10-ca9b8f279fa2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "username",
               "multiple": "false",
               "format": null,
               "description": "The username of the job",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "889036fb-b47c-41f6-911b-f07f3bfb98c2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "userJob",
               "multiple": "false",
               "format": null,
               "description": "The user of the job",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1017c3e1-cf61-40d2-b20e-b7f1c688f068",
               "useForCreation": false,
               "defaultValue": null,
               "name": "jobParameters",
               "multiple": "true",
               "format": null,
               "description": "List of job parameters for this job",
               "presentInResponse": true,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "dff36493-c593-4324-8fd3-d691909dcfa9",
         "name": "Job data",
         "description": "Data created by a job. This concerns only data files (annotation or term are store in domain database). If config cytomine.jobdata.filesystem is true, file are stored in filesystem, otherwise they are store in database.",
         "fields": [
            {
               "jsondocId": "ec484d92-6d7f-4456-80c5-edf23ef49b20",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "62f85303-9203-430d-b30c-a4736ebf4010",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d940c18d-6187-4c75-ae24-05abc01127ec",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "69e0ac69-d1b9-406a-962a-4521d5684623",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "85ca60e7-0829-42a4-86ae-932ea0ede60f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6b0abe2c-0132-414f-8c6b-b907693e4624",
               "useForCreation": true,
               "defaultValue": null,
               "name": "key",
               "multiple": "false",
               "format": null,
               "description": "File key (what's the file)",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "c849e6c2-bdaa-42df-a4d3-973310d9d905",
               "useForCreation": true,
               "defaultValue": null,
               "name": "job",
               "multiple": "false",
               "format": null,
               "description": "The job that store the data",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "5ce3441b-483f-474e-ba5a-422effe847d3",
               "useForCreation": true,
               "defaultValue": null,
               "name": "filename",
               "multiple": "false",
               "format": null,
               "description": "Data filename with extension",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "7ab36728-0bdd-4e79-bc3b-98264f387d57",
               "useForCreation": false,
               "defaultValue": null,
               "name": "size",
               "multiple": "false",
               "format": null,
               "description": "Data size (in Bytes)",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0a295bf8-d884-4de2-8110-a4878e31f72a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "dir",
               "multiple": "false",
               "format": null,
               "description": "File full path if 'cytomine.jobdata.filesystem' config is true",
               "presentInResponse": false,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "16b9c6a5-9c3c-4932-8063-7ab2b9037299",
               "useForCreation": false,
               "defaultValue": null,
               "name": "value",
               "multiple": "false",
               "format": null,
               "description": "File data (from blob field) if 'cytomine.jobdata.filesystem' config is false",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "7359f226-2af1-48d2-b4bb-db71e89e8971",
         "name": "Job parameter",
         "description": "A job parameter is an instance of software parameter. When a job is created, we create a job parameter for each software parameter.",
         "fields": [
            {
               "jsondocId": "a1159562-5da8-49b9-8c77-578b51035f56",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "841b69cb-5381-42b5-94ac-35ab8f1a5bcf",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a6c091e9-5647-41b9-bf8b-cefd4fbe0f8f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "52a0cc4f-bb69-417f-b611-57cd89a9f108",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d99ecca2-17ca-4196-bfc8-036b8019710c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0bc6b295-fff9-401f-b72d-7becd5b5a96e",
               "useForCreation": true,
               "defaultValue": null,
               "name": "value",
               "multiple": "false",
               "format": null,
               "description": "Job parameter value",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "ddcfdad3-4387-4d25-a1a4-23f66cba5e99",
               "useForCreation": true,
               "defaultValue": null,
               "name": "job",
               "multiple": "false",
               "format": null,
               "description": "The job of the parameter",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "56d89448-e8c8-4e44-9e8d-c8cd8e1c9e63",
               "useForCreation": true,
               "defaultValue": null,
               "name": "softwareParameter",
               "multiple": "false",
               "format": null,
               "description": "The parameter id of the software",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "d2548b96-d9ff-448a-9128-6fa92f29a414",
               "useForCreation": false,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The parameter name in a human readable form",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c3349b88-1196-4800-94f4-cc06906d1d08",
               "useForCreation": false,
               "defaultValue": null,
               "name": "type",
               "multiple": "false",
               "format": null,
               "description": "The parameter data type (Number, String, Date, Boolean, Domain (e.g: image instance id,...), ListDomain )",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "17b99e9e-7277-41e1-995b-9fc826d71769",
               "useForCreation": false,
               "defaultValue": null,
               "name": "index",
               "multiple": "false",
               "format": null,
               "description": "Index for parameter position. When launching software, parameter will be send ordered by index (asc).",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "312715d5-db9b-48cb-99e7-182f5b6e79e8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "uri",
               "multiple": "false",
               "format": null,
               "description": "Used for UI. If parameter has '(List)Domain' type, the URI will provide a list of choice. E.g. if uri is 'api/project.json', the choice list will be cytomine project list",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "26c0b280-1d51-440c-8a10-c75da912e4c6",
               "useForCreation": false,
               "defaultValue": null,
               "name": "uriPrintAttribut",
               "multiple": "false",
               "format": null,
               "description": "Used for UI. JSON Fields to print in choice list. E.g. if uri is api/project.json and uriPrintAttribut is 'name', the choice list will contains project name ",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "cff19f2d-1b20-4e7e-8084-2edbff0e4f2d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "uriSortAttribut",
               "multiple": "false",
               "format": null,
               "description": "Used for UI. JSON Fields used to sort choice list. E.g. if uri is api/project.json and uriSortAttribut is 'id', projects will be sort by id (not by name) ",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3e623d5f-1988-412a-84df-25bd8758102e",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "humanName",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "c5c5883b-9d9c-446c-8957-a4bff1bdfce4",
         "name": "Job template",
         "description": "A job template is a job with pre-filled parameters. It can be used to init a new 'real' job on the basis of this template.",
         "fields": [
            {
               "jsondocId": "0c2e42c1-94fa-4eeb-bedc-3b3739bf5e7a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c5f9bbee-89d9-4fbd-9a99-0ff557cfafbd",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3e06b531-4da0-4ee4-a674-4fcb6fbe2a6c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "38346c99-29f0-4694-b820-cce7d7179d23",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "4e89c95f-b468-417e-ba12-f1c59831900c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9af47480-979e-4158-b2b9-967108ffe84a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "algoType",
               "multiple": "false",
               "format": null,
               "description": "The algo type based on the class name",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "90330a69-9f08-4331-99b4-4f14a816f278",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "progress",
               "multiple": "false",
               "format": null,
               "description": "The algo progression (from 0 to 100)",
               "presentInResponse": true,
               "type": "Int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1f8b9e68-e1e1-470d-8acf-8f65e2760dcc",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "status",
               "multiple": "false",
               "format": null,
               "description": "The algo status (NOTLAUNCH = 0, INQUEUE = 1, RUNNING = 2,SUCCESS = 3,FAILED = 4,INDETERMINATE = 5,WAIT = 6,PREVIEWED = 7, KILLED=8)",
               "presentInResponse": true,
               "type": "Int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "26ae931b-b9e5-4022-bd60-08cae59454d7",
               "useForCreation": false,
               "defaultValue": null,
               "name": "number",
               "multiple": "false",
               "format": null,
               "description": "Job Indice for this software in this project",
               "presentInResponse": true,
               "type": "Int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "72c6b97b-e3c0-4dc6-bef3-08f603c59da2",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "statusComment",
               "multiple": "false",
               "format": null,
               "description": "Text comment for the job status",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "465b1c71-9560-45c5-9fbd-5beb1c539659",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project of the job",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "21d67597-681a-4437-933c-179f34a134bb",
               "useForCreation": true,
               "defaultValue": null,
               "name": "processingServer",
               "multiple": "false",
               "format": null,
               "description": "The processing server in charge to run the job",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "a387ecb3-0e7f-4fbb-9aac-3d47c87639b8",
               "useForCreation": true,
               "defaultValue": null,
               "name": "software",
               "multiple": "false",
               "format": null,
               "description": "The software of the job",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "4b85bbe2-1aff-4ba3-bbff-91205e050812",
               "useForCreation": false,
               "defaultValue": null,
               "name": "softwareName",
               "multiple": "false",
               "format": null,
               "description": "The software name of the job",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3bf6897c-d636-447a-a874-c8fe7c2638d4",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "rate",
               "multiple": "false",
               "format": null,
               "description": "Generic field for job rate info. The rate is a quality value about the job works",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b5b47a53-e0c1-4ad6-aa53-ad4331df2be2",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "dataDeleted",
               "multiple": "false",
               "format": null,
               "description": "Flag to see if data generate by this job are deleted",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c5b58c70-c592-449f-b62a-5edd54abe460",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "favorite",
               "multiple": "false",
               "format": null,
               "description": "Flag to star an interesting job",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b8f7e662-ca91-4470-848d-76a6660fa903",
               "useForCreation": false,
               "defaultValue": null,
               "name": "username",
               "multiple": "false",
               "format": null,
               "description": "The username of the job",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5366ba7e-9aa8-4850-8df8-456585a4833c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "userJob",
               "multiple": "false",
               "format": null,
               "description": "The user of the job",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1a3b87b7-ca81-4aeb-841c-4a6ecdb8b7c1",
               "useForCreation": false,
               "defaultValue": null,
               "name": "jobParameters",
               "multiple": "true",
               "format": null,
               "description": "List of job parameters for this job",
               "presentInResponse": true,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7215ae9e-67df-4700-aeb8-aa4abdd8c6ec",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The template name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "b75beb3a-930a-4244-bb2b-ba7f69273280",
         "name": "Job template annotation",
         "description": "A link between a ROI and a job template",
         "fields": [
            {
               "jsondocId": "ca75aee7-a21f-4bc8-bd19-43bfeef38021",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f86b102e-eb02-40c4-a0b8-9efc3dc89eeb",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "4ce74a24-febd-4c8d-a07e-03a35c095b44",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ad4333aa-52e9-43b4-bc76-70902ce6de9c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "60438a27-c8c6-40e9-99cd-e41d7d551db0",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f7f85b2f-451f-475c-b89a-c87c4c0da081",
               "useForCreation": true,
               "defaultValue": null,
               "name": "annotationIdent",
               "multiple": "false",
               "format": null,
               "description": "The annotation id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "b7561ed1-e5f3-401b-bcc6-f675a410d1e6",
               "useForCreation": false,
               "defaultValue": null,
               "name": "annotationClassName",
               "multiple": "false",
               "format": null,
               "description": "The annotation class type (roi,user,algo,...)",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "721050f8-6978-4ac1-ae22-39b376e02dc1",
               "useForCreation": true,
               "defaultValue": null,
               "name": "jobTemplate",
               "multiple": "false",
               "format": null,
               "description": "The template",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "ac25e4dc-2965-4b43-aa1f-790849161800",
         "name": "Last connection",
         "description": "A Connection is recorded all long the user is connected.",
         "fields": [
            {
               "jsondocId": "354bff3f-219a-46d1-80fc-f521b9519852",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a57328a9-cef6-423d-b07f-a7ab48004a45",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b862b809-738f-4b60-a533-95b9a88d8b25",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "af10099e-b311-442b-abe9-50603570c169",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a03c546a-83d5-4b95-8944-94d29c176404",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "(mandatory) The project. Null if the user is not in a project",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "b30f9d22-3967-4d21-8158-2dd590b35d31",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "240cc47e-c058-4e1e-9d97-5041c0beaad4",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The user",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "75ff1101-2c34-4b62-b60f-e963c9b999bb",
         "name": "Message broker server",
         "description": "An instance of a message broker.",
         "fields": [
            {
               "jsondocId": "cc67bfed-508b-4698-96de-24e7513979cf",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f1a9c087-bce3-4bde-8f4e-b914acc21ec7",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "38c19e07-df23-458b-a4ef-39fb8d2e8d63",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d199035a-e29d-4b4f-a163-7f0368e09abd",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f7b0481a-9c91-4c21-9bc9-2eb653eca31d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d8151f39-e15a-4ae2-ac72-3d1cc81dc491",
               "useForCreation": true,
               "defaultValue": null,
               "name": "host",
               "multiple": "false",
               "format": null,
               "description": "The host of the message broker",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "20d26049-6307-4f52-9fa1-a29b323456ed",
               "useForCreation": true,
               "defaultValue": null,
               "name": "port",
               "multiple": "false",
               "format": null,
               "description": "The port to which the message broker is connected",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "0ea1f126-7614-4a11-b3f5-3a93b9e985bf",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The name of the message broker server",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "23bd3df8-9d38-49c9-b2fe-9a804246eb3d",
         "name": "Nested image instance",
         "description": "An sub image from an image instance (sub area, same image transformed,...)",
         "fields": [
            {
               "jsondocId": "fa57d8b6-67bd-42e2-babb-5188eac24ff8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d82b6cd6-4a80-4ab7-a58a-85f0650dfb27",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e4933df0-ac4c-49e8-83f2-8028bdd1807e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8ffaf146-dfc7-46df-b652-9f1c90232b9f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c44dd4d1-7cc5-475d-a0c4-ee2dbc2a8567",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6f5b9a2d-5b42-494e-b917-d37662f81eb5",
               "useForCreation": true,
               "defaultValue": null,
               "name": "baseImage",
               "multiple": "false",
               "format": null,
               "description": "The image linked to the project",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "a0d6333d-b13d-4478-b2eb-6f18f3da8747",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project that keeps the image",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "3196258c-ef2c-460b-9585-1928474016bf",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The user that add the image to the project",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "5286f888-4d07-4f6a-a2cf-98be3c779f4a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "instanceFilename",
               "multiple": "false",
               "format": null,
               "description": "Instance image filename",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "42719843-432f-46e2-a01c-cfc21d9f4465",
               "useForCreation": false,
               "defaultValue": null,
               "name": "originalFilename",
               "multiple": "false",
               "format": null,
               "description": "Original filename",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a7bb0c66-8d12-4208-8722-51f2f2a23317",
               "useForCreation": false,
               "defaultValue": null,
               "name": "filename",
               "multiple": "false",
               "format": null,
               "description": "Similar to originalFilename",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "80354e61-12e7-4345-a4e0-b00cfafec576",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "blindedName",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "84c25b36-8fda-432b-892d-39c728556a8e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "path",
               "multiple": "false",
               "format": null,
               "description": "The internal path of the file",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "876dc53d-aff6-4a81-a737-6fbeb8bad16e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "contentType",
               "multiple": "false",
               "format": null,
               "description": "The image content type",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1338e6fe-a2dc-4bac-ae39-1eb6e43342d0",
               "useForCreation": true,
               "defaultValue": "0 or null if domain",
               "name": "sample",
               "multiple": "false",
               "format": null,
               "description": "The source of the image (human, animal,...)",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3a435dd0-cdc4-4f2e-b202-9a416d19f85d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "width",
               "multiple": "false",
               "format": null,
               "description": "The N-dimensional image width, in pixels (X)",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "57d35e98-52c9-4e1a-8d75-b5239828b4a3",
               "useForCreation": false,
               "defaultValue": null,
               "name": "height",
               "multiple": "false",
               "format": null,
               "description": "The N-dimensional image height, in pixels (Y)",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f6987814-9dce-465c-a7e8-33a7079d7b8f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "depth",
               "multiple": "false",
               "format": null,
               "description": "The N-dimensional image depth, in z-slices (Z)",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a5929fe7-e20a-4c1c-981c-6cc3ba96e6da",
               "useForCreation": false,
               "defaultValue": null,
               "name": "duration",
               "multiple": "false",
               "format": null,
               "description": "The N-dimensional image duration, in frames (T)",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "231eec59-0ff1-44ea-a94a-4e3171a564ed",
               "useForCreation": false,
               "defaultValue": null,
               "name": "channels",
               "multiple": "false",
               "format": null,
               "description": "The N-dimensional image channels (C)",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c18f8daf-2fa5-4f89-9c0f-975dbcb59c9c",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "physicalSizeX",
               "multiple": "false",
               "format": null,
               "description": "Physical size of a pixel along X axis",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "22c1774e-3853-44e8-acc3-f97abd3e62fb",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "physicalSizeY",
               "multiple": "false",
               "format": null,
               "description": "Physical size of a pixel along Y axis",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "2ee96700-0c59-4409-8e1d-110425f471cb",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "physicalSizeZ",
               "multiple": "false",
               "format": null,
               "description": "Physical size of a pixel along Z axis",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d9acf2c3-07fe-4fb6-8c95-c75e9706937c",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "fps",
               "multiple": "false",
               "format": null,
               "description": "The number of frames per second",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "af25235e-e281-4263-9c91-9b68c3148994",
               "useForCreation": false,
               "defaultValue": null,
               "name": "zoom",
               "multiple": "false",
               "format": null,
               "description": "The number of zooms available in the image",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e2f5461d-92d3-476c-b16f-6bb703758e62",
               "useForCreation": true,
               "defaultValue": null,
               "name": "resolution",
               "multiple": "false",
               "format": null,
               "description": "The image resolution (microm per pixel)",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "ba136e01-9887-4630-b795-ba51165da2a0",
               "useForCreation": true,
               "defaultValue": null,
               "name": "magnification",
               "multiple": "false",
               "format": null,
               "description": "The image max zoom",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "c835b56b-78aa-4c43-a087-d05e1bc2c009",
               "useForCreation": false,
               "defaultValue": null,
               "name": "bitPerSample",
               "multiple": "false",
               "format": null,
               "description": "The number of bits per sample (color)",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6fdfecce-7685-45b0-92c7-5244c0b6bbde",
               "useForCreation": false,
               "defaultValue": null,
               "name": "samplePerPixel",
               "multiple": "false",
               "format": null,
               "description": "The number of samples (colors) per pixel",
               "presentInResponse": true,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "03d47a96-d30c-4dc2-b499-876610179259",
               "useForCreation": false,
               "defaultValue": null,
               "name": "colorspace",
               "multiple": "false",
               "format": null,
               "description": "The image colorspace",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "203e8c2a-7ff2-4cb2-bd37-fce24ac76864",
               "useForCreation": false,
               "defaultValue": null,
               "name": "reviewStart",
               "multiple": "false",
               "format": null,
               "description": "The start review date",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b7882909-c9b0-451b-82ef-620779cf88f2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "reviewStop",
               "multiple": "false",
               "format": null,
               "description": "The stop review date",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "fd6ae885-e50d-4a9b-9e15-6759d0d67f53",
               "useForCreation": false,
               "defaultValue": null,
               "name": "reviewUser",
               "multiple": "false",
               "format": null,
               "description": "The user who reviewed (or still reviewing) this image",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ce11835e-dbe2-4a0a-85df-214f26430ebd",
               "useForCreation": false,
               "defaultValue": null,
               "name": "reviewed",
               "multiple": "false",
               "format": null,
               "description": "Image has been reviewed",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b2724584-0b6a-476a-b267-96e3a76258e8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "inReview",
               "multiple": "false",
               "format": null,
               "description": "Image currently reviewed",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e5abb596-d158-4044-9d63-d9e5245e8722",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfAnnotations",
               "multiple": "false",
               "format": null,
               "description": "The number of user annotation in the image",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "02e93799-0596-44e7-8ed5-dba991221c2c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfJobAnnotations",
               "multiple": "false",
               "format": null,
               "description": "The number of job annotation in the image",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "86f51b9c-98cc-480b-8a60-5eb561eb006a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfReviewedAnnotations",
               "multiple": "false",
               "format": null,
               "description": "The number of reviewed annotation in the image",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "4c3f933c-4e5e-4d54-b1ec-801c26de88a3",
               "useForCreation": false,
               "defaultValue": null,
               "name": "thumb",
               "multiple": "false",
               "format": null,
               "description": "URL to get abstract image short view (thumb)",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "63a67a3a-737e-4673-96e6-9a410664c431",
               "useForCreation": false,
               "defaultValue": null,
               "name": "preview",
               "multiple": "false",
               "format": null,
               "description": "URL to get image preview",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0891400d-31d4-4cd8-ac01-ef7d696c221a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "macroURL",
               "multiple": "false",
               "format": null,
               "description": "URL to get image macros",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "de691fff-9d63-4e85-88bc-b06c25a2353d",
               "useForCreation": true,
               "defaultValue": null,
               "name": "parent",
               "multiple": "false",
               "format": null,
               "description": "The image source for this sub-image",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "3916738a-9d61-4448-a956-2d63eb32a214",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "x",
               "multiple": "false",
               "format": null,
               "description": "Top x position of this image on the sub-image",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3bd5660f-18e6-49eb-95ad-08ad93fe1fb9",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "y",
               "multiple": "false",
               "format": null,
               "description": "Top y position of this image on the sub-image",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "44315d67-2371-4c2a-abbd-2d727c2583a0",
         "name": "Ontology",
         "description": "An ontology is a list of term. Each term may be link to other term with a special relation (parent, synonym,...)",
         "fields": [
            {
               "jsondocId": "1e1c4d7e-5dc3-47e4-acf7-3038f0ab6006",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6a2a9b23-e518-42e1-b298-b5aec50e9686",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "52b4faf3-467e-48c2-95f3-caeedacbcb44",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "995b7fec-fb33-4f22-8508-a2c3fcfc3077",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "fcf2747b-a969-4196-b0ee-9172170b8537",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "dddeade5-edce-4419-b835-154b9c0c99ab",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The name of the ontology",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "20263738-ab21-4824-83b1-a6780a6e9931",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The author of the ontology",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "801361b5-89e2-41d1-ad88-f90a3b16269d",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "title",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "64b2c7c6-0020-4721-b99e-b49bf1a8c625",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "attr",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8528f473-3ab4-4676-b8bd-bf6d29fa9d07",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "data",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9912635b-f74b-4366-9ab6-9957deada731",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "isFolder",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0ca1e6f8-80fe-4b08-9f5e-eeae6b26bf6f",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "key",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "03826c1f-ca65-454b-96f5-b1faac0660dc",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "hideCheckbox",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ce0892d4-a7fc-4e38-8d6f-af8fc5c2a22d",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "state",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f018dd50-9106-4cf8-ba8c-b188ba94c61f",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "projects",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e8db0366-d14b-49af-a6fb-3a71a5b437d7",
               "useForCreation": false,
               "defaultValue": null,
               "name": "children",
               "multiple": "false",
               "format": null,
               "description": "Term Tree",
               "presentInResponse": true,
               "type": "tree",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "7c75f45c-adbd-4b6b-8fd6-a88950048646",
         "name": "Parameter constraint",
         "description": "Representation of a constraint applicable to a software parameter",
         "fields": [
            {
               "jsondocId": "468a7b02-a880-4ae0-aa96-d1c012cf886c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "bcae89e7-7c67-49c0-9fba-8d4a8cdc5390",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "53a63cf7-5df8-4f6a-be6d-95342763e068",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d2491f7b-8ff7-4d7a-b9a7-1776b55924a4",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "79dd14fb-09d7-4771-ab43-3852ae34c2b5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "80107269-6ca9-46cf-ad13-2005bb0c95fd",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The name of the parameter constraint",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "2006e58e-45db-4653-969b-32f8e9f3276e",
               "useForCreation": true,
               "defaultValue": null,
               "name": "expression",
               "multiple": "false",
               "format": null,
               "description": "The expression used to evaluate the parameter constraint",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "308001ea-be3e-47d2-9648-64f809f1fef8",
               "useForCreation": true,
               "defaultValue": null,
               "name": "dataType",
               "multiple": "false",
               "format": null,
               "description": "The data type associated with the parameter constraint (Number, Boolean, String, Date, ...)",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "4155eba0-b7a1-42ee-938d-19764f6fa2a5",
         "name": "Persistent connection",
         "description": "A Connection is recorded all long the user is connected.",
         "fields": [
            {
               "jsondocId": "3bcc1f9b-c46d-4037-b980-8842515726d5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "491cc78b-7af5-4a31-827f-2050c7fd2e57",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c567ffe2-a8aa-4290-94e6-dd006fd3658f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6a4ec3c9-5924-4e84-9c8c-aafa6632d072",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3733c454-26c0-4611-8879-be1c2cde9c17",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "(mandatory) The project. Null if the user is not in a project",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "fd1c6a83-c097-4ca9-b754-1eb5f665a1a7",
               "useForCreation": true,
               "defaultValue": null,
               "name": "session",
               "multiple": "false",
               "format": null,
               "description": "The sessionID active during the connection",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "1b9b9824-bbb0-4b28-bd78-874a3e3809ac",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b66140eb-c047-4c03-ada6-e869db12b877",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The user",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "2d47447b-c35e-4ac5-9e19-cc0f22f18f01",
         "name": "Persistent image consultation",
         "description": "Each PersistentImageConsultation represents an user consultation to an imageInstance.",
         "fields": [
            {
               "jsondocId": "ecec0227-0bfd-4339-b93e-d95274f6be91",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f357956a-dd05-49e2-8b71-3e944e55ec45",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ab6c6b2f-7e60-4d11-abd0-edfd1dda9ceb",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5d5e4aaa-ca67-40ec-98e6-7a407c64014d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7d5e587f-853f-4a9c-9652-c68eefe1fceb",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e7b8d85b-10cd-46a0-abdc-c29ad9576128",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The user",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "283958e2-fe3d-42c9-9088-72a99c087401",
               "useForCreation": true,
               "defaultValue": null,
               "name": "image",
               "multiple": "false",
               "format": null,
               "description": "The consulted image",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "c7bb7106-e4a5-4812-bbad-4864f79ff656",
               "useForCreation": true,
               "defaultValue": null,
               "name": "imageName",
               "multiple": "false",
               "format": null,
               "description": "The image name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "e7188a12-0f7b-444f-960a-cffb3da4fa2b",
               "useForCreation": true,
               "defaultValue": null,
               "name": "imageThumb",
               "multiple": "false",
               "format": null,
               "description": "The image thumb",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "07176bf0-3c33-45d8-80a5-3d6ba3beabdd",
               "useForCreation": true,
               "defaultValue": null,
               "name": "mode",
               "multiple": "false",
               "format": null,
               "description": "The consultation mode (Explore, review)",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "14b694ef-2b34-4c62-84d6-ecc5c617330c",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project which contains the image",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "79567675-4993-4b36-8643-a98c26020806",
               "useForCreation": true,
               "defaultValue": null,
               "name": "projectConnection",
               "multiple": "false",
               "format": null,
               "description": "The project connection active during the consultation",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "f6c43e90-3917-43a8-9853-515b0a4d3c70",
               "useForCreation": false,
               "defaultValue": null,
               "name": "time",
               "multiple": "false",
               "format": null,
               "description": "The duration of the user consultation into the image",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ac91f5fc-833c-4908-a9de-5b7357257328",
               "useForCreation": false,
               "defaultValue": null,
               "name": "countCreatedAnnotations",
               "multiple": "false",
               "format": null,
               "description": "The count of created annotation during the project connection",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b530acdb-533e-4c4b-ac6b-33ee11a6b285",
               "useForCreation": true,
               "defaultValue": null,
               "name": "session",
               "multiple": "false",
               "format": null,
               "description": "The sessionID active during the consultation",
               "presentInResponse": false,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "ae01f624-ec6b-4dd8-a328-f1eb10836427",
         "name": "Persistent project connection",
         "description": "Each PersistentProjectConnection represents an user connection to a project.",
         "fields": [
            {
               "jsondocId": "87a5668b-47c7-45ce-97ca-67a9f1a3180c",
               "useForCreation": true,
               "defaultValue": null,
               "name": "browser",
               "multiple": "false",
               "format": null,
               "description": "The browser of the user",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "4f6e046f-0c27-4214-84f7-e70fc2a90917",
               "useForCreation": true,
               "defaultValue": null,
               "name": "browserVersion",
               "multiple": "false",
               "format": null,
               "description": "The browser version of the user",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "32fd554b-dc8a-48e8-9d7a-355c893ad33e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "27ec4da3-b677-4c62-a00d-1e09c68740f1",
               "useForCreation": false,
               "defaultValue": null,
               "name": "countCreatedAnnotations",
               "multiple": "false",
               "format": null,
               "description": "The count of created annotation during the project connection",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0b883809-c957-4ef0-b1f1-f30905fd40b5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "countViewedImages",
               "multiple": "false",
               "format": null,
               "description": "The count of viewed image during the project connection",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "cf6a1aeb-2746-4573-8162-47dd2e88aa59",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8a536929-3b33-40e2-84c1-124a4c7ebd02",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "bf9999d0-5caa-418b-bd79-c63fa466af68",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6c0187f7-8764-4e49-a8e7-e715e378575d",
               "useForCreation": true,
               "defaultValue": null,
               "name": "os",
               "multiple": "false",
               "format": null,
               "description": "The OS of the user",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "cf9eed6a-915c-4954-b130-385414687059",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The consultated project id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "0c3dbec0-3bf2-4cea-9106-37f685d0b766",
               "useForCreation": true,
               "defaultValue": null,
               "name": "session",
               "multiple": "false",
               "format": null,
               "description": "The sessionID active during the connection",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "15ea8804-70f6-4096-9e45-be8ae1efab73",
               "useForCreation": false,
               "defaultValue": null,
               "name": "time",
               "multiple": "false",
               "format": null,
               "description": "The duration of the user connection into the project",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "28afc57e-57d5-470b-a29c-91a74bc48098",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0aff1e68-a2aa-4e67-b0a1-74dfaf73e044",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The user id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "d883013b-8d7c-44f2-964a-6b4b6fa9c60f",
         "name": "Processing server",
         "description": "A processing server is a server that can be used to run algorithms (containers)",
         "fields": [
            {
               "jsondocId": "36e0be27-0e2e-4892-8db7-70f40db0d33a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "211b76da-ac41-4744-b189-e80358c46e0c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "90a0e22a-945b-4787-ace7-e8d482bfa1bf",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6abb41f0-feb6-4f54-9958-baea951de491",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "bd348761-46bb-48df-b22d-ec969d1f8160",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "23a10075-9ee8-4ea8-a0a9-efb488dc6aa1",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The name of the processing server",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "864a1b55-0a59-42db-ae5e-91376edd84e4",
               "useForCreation": true,
               "defaultValue": null,
               "name": "host",
               "multiple": "false",
               "format": null,
               "description": "The host of the processing server",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "3c824acd-fef4-43bc-8438-25d41ef68abe",
               "useForCreation": true,
               "defaultValue": null,
               "name": "username",
               "multiple": "false",
               "format": null,
               "description": "The user of the processing server",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "22b584f0-84bc-4551-b585-539d8a521fce",
               "useForCreation": true,
               "defaultValue": null,
               "name": "port",
               "multiple": "false",
               "format": null,
               "description": "The port of the processing server",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "72f925ed-5a4d-4459-b30b-ee83e58b35f9",
               "useForCreation": true,
               "defaultValue": null,
               "name": "type",
               "multiple": "false",
               "format": null,
               "description": "The type of the processing server (cpu, gpu, ...)",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "c3e297bd-2a13-444e-88da-4cb081e90695",
               "useForCreation": true,
               "defaultValue": null,
               "name": "processingMethodName",
               "multiple": "false",
               "format": null,
               "description": "The processing method name of the processing server",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "2f239444-80a2-462f-b34a-54e6fdfcd6e5",
               "useForCreation": true,
               "defaultValue": null,
               "name": "amqpQueue",
               "multiple": "false",
               "format": null,
               "description": "The amqp queue associated to a given processing server",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "84208684-4d22-4693-8a7d-7def5895ec42",
               "useForCreation": true,
               "defaultValue": null,
               "name": "persistentDirectory",
               "multiple": "false",
               "format": null,
               "description": "The absolute directory path for persistent data, on the processing server",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "81d9b9a7-83f9-4112-a5b7-fd9367956153",
               "useForCreation": true,
               "defaultValue": null,
               "name": "workingDirectory",
               "multiple": "false",
               "format": null,
               "description": "The absolute directory path for temporary data, on the processing server",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "e781d8ad-dbea-4503-99b8-9270818a15bf",
               "useForCreation": true,
               "defaultValue": null,
               "name": "index",
               "multiple": "false",
               "format": null,
               "description": "The index in the default processing server table. Lowest is the default processing server",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "b2f3681f-c42b-403d-bd32-48770eb00dc2",
         "name": "Project",
         "description": "A project is the main cytomine domain, its a workspace to store images, annotations,...",
         "fields": [
            {
               "jsondocId": "fc11e7f0-3417-4f69-9dbc-13ef39eb7981",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1d2c4e0e-38d7-4e17-bbc4-f11a5c01b041",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "73902460-49ac-4eb8-9ba9-15c9dce5ad8e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b0c288d3-0a29-42f8-981c-588c7af640ab",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "defffc20-fca5-41f7-852c-421bbb28738c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b9b48086-5d01-4124-bf56-1de0b8a2e58d",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The name of the project",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "25ee101b-a29b-425b-ae48-e2f2eac37e1e",
               "useForCreation": true,
               "defaultValue": null,
               "name": "ontology",
               "multiple": "false",
               "format": null,
               "description": "The ontology identifier of the project",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "5d738b37-e3f6-4bfe-b97f-72a277e759d7",
               "useForCreation": false,
               "defaultValue": null,
               "name": "ontologyName",
               "multiple": "false",
               "format": null,
               "description": "The ontology name for the project",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "29d57055-7381-4f16-8553-f1ae493ad227",
               "useForCreation": true,
               "defaultValue": "0 or null if domain",
               "name": "discipline",
               "multiple": "false",
               "format": null,
               "description": "The discipline identifier of the project",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "772a825e-062d-4d91-a306-0d3fd4894e0f",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "blindMode",
               "multiple": "false",
               "format": null,
               "description": "Blind mode (if true, image filename are hidden)",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b5330c7f-6e9b-47bd-a330-0a3457425300",
               "useForCreation": false,
               "defaultValue": null,
               "name": "disciplineName",
               "multiple": "false",
               "format": null,
               "description": "The discipline name for the project",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d86b4fa9-c779-4d44-9715-a3f8e0a1d036",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfSlides",
               "multiple": "false",
               "format": null,
               "description": "The number of samples in the project",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "24a420d8-3ec4-4cbb-a5b0-fe8eead97967",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfImages",
               "multiple": "false",
               "format": null,
               "description": "Number of image in the project",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a18494b5-f85a-409f-b299-9f4651db4399",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfAnnotations",
               "multiple": "false",
               "format": null,
               "description": "Number of annotations created by human user in the project",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "efd13087-08ad-4ba4-b4d2-43c1b2314fc0",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfJobAnnotations",
               "multiple": "false",
               "format": null,
               "description": "Number of annotations created by software in the project",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6936ef9b-7e36-45c2-af63-f2de17ea8396",
               "useForCreation": true,
               "defaultValue": "[]",
               "name": "retrievalProjects",
               "multiple": "true",
               "format": null,
               "description": "List all projects id that are used for retrieval search (if retrievalDisable = false and retrievalAllOntology = false)",
               "presentInResponse": true,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "2dc65fee-79ba-4e1b-90b7-38d3c979379f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfReviewedAnnotations",
               "multiple": "false",
               "format": null,
               "description": "Number of annotations validated in the project",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "40231c2e-af20-4de6-8d82-f1b719958808",
               "useForCreation": true,
               "defaultValue": null,
               "name": "retrievalDisable",
               "multiple": "false",
               "format": null,
               "description": "If true, don't suggest similar annotations",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "72cfd57e-a0d5-41d5-a69a-e8990447949c",
               "useForCreation": true,
               "defaultValue": null,
               "name": "retrievalAllOntology",
               "multiple": "false",
               "format": null,
               "description": "If true, search similar annotations on all project that share the same ontology",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "a375723c-19e7-4cb6-8859-873853c0ed0a",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "isClosed",
               "multiple": "false",
               "format": null,
               "description": "If true, project is closed",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3aa4ee02-aaa6-4450-a4e1-44a36c9cd8d4",
               "useForCreation": true,
               "defaultValue": null,
               "name": "isReadOnly",
               "multiple": "false",
               "format": null,
               "description": "If true, the project is read only",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "9f78cc86-a268-481e-a669-a45b2e2a187b",
               "useForCreation": true,
               "defaultValue": null,
               "name": "isRestricted",
               "multiple": "false",
               "format": null,
               "description": "f true, the project is in restricted mode",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "4533fb44-27e1-45fa-a4a2-5017cdf5b2f1",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "hideUsersLayers",
               "multiple": "false",
               "format": null,
               "description": "If true, an user (which is not an administrator of the project) cannot see others users layers",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9093472a-8a30-49d0-9bbf-bd4e6fa82dfd",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "hideAdminsLayers",
               "multiple": "false",
               "format": null,
               "description": "If true, an user (which is not an administrator of the project) cannot see admins layers",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "4949a2cb-b1ff-4bb1-9f31-cd57a2eceeb7",
               "useForCreation": true,
               "defaultValue": null,
               "name": "admins",
               "multiple": "true",
               "format": null,
               "description": "Admins id that will be in the project",
               "presentInResponse": false,
               "type": "list",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "21c5d4d5-f77f-4be4-8997-5ffdbc3c15a5",
               "useForCreation": true,
               "defaultValue": null,
               "name": "users",
               "multiple": "true",
               "format": null,
               "description": "Users id that will be in the project",
               "presentInResponse": false,
               "type": "list",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "b52adaf0-cb91-4f0f-81b3-0c4d8bf21b87",
         "name": "Project default layer",
         "description": "A Project default layer is a layer in the default list of the visible layer for all the image of the project",
         "fields": [
            {
               "jsondocId": "4db7052e-e52d-4a9e-bf87-ff0104c89cfb",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b88f88c2-0333-4da8-8fba-eb480c95c9f4",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5f7b04bd-d91e-4aca-ad69-d0736704728f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5d6e3e3d-fbf8-47f9-83b2-7d1d59775ca3",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e57c1a30-a913-4451-ab7c-e21f3c934255",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d3e4f6e9-df0b-4c5a-977c-3bc31682b963",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "fb2c32b0-4eeb-450d-8083-06e54764a34a",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The user layer",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "31672e1a-a3f3-4c80-b0f9-37601e894379",
               "useForCreation": true,
               "defaultValue": null,
               "name": "hideByDefault",
               "multiple": "false",
               "format": null,
               "description": "Hide the layer by default (but still in the layer list)",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "cc742a70-d9fe-4fbe-a3ea-edbe7a047890",
         "name": "Project representative user",
         "description": "A Project representative user is an user considered as the reference for the associate project",
         "fields": [
            {
               "jsondocId": "fe05887f-0f56-4162-ba7f-45f90f9a9e75",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1e2cbe48-6bc5-4b42-b14d-ba1d32c2206d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f95acbd2-3f70-4faa-9b63-d77087ebd286",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a9d160c7-23d4-4159-b0ff-26b469f59680",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7b6740c0-1d69-4fea-981b-23a89f482e20",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f4e5736c-615b-485a-bc35-e7115244cb04",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "3bc6d791-1bcc-434f-8594-01aa612662a5",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The user considered as the reference",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "deb1e42b-74e0-4965-9f1c-3e39d6326c72",
         "name": "Property",
         "description": "A key-value entry that can be map to a domain (project, image, annotation,...)",
         "fields": [
            {
               "jsondocId": "f3b2e6b5-f2a1-489b-b80d-cd58258c29ca",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "35219338-1612-44b3-824f-e1f2e40ee9ed",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0a823d9d-d383-4e7f-96cf-6d05639c9a15",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5e9bfe9f-be8f-4c73-a2ff-5086f51f9ff5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "378a4417-3257-4af0-a716-25445865f938",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3939762f-f872-4a0e-a973-f1264b827336",
               "useForCreation": true,
               "defaultValue": null,
               "name": "domainIdent",
               "multiple": "false",
               "format": null,
               "description": "The domain identifier (id)",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "5339ea55-4ded-481d-bf28-be58a18752f6",
               "useForCreation": true,
               "defaultValue": null,
               "name": "domainClassName",
               "multiple": "false",
               "format": null,
               "description": "The domain class",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "f79ded3f-7b21-4e01-8781-8f9c1608ade0",
               "useForCreation": true,
               "defaultValue": null,
               "name": "key",
               "multiple": "false",
               "format": null,
               "description": "The property key",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "6404d1ec-ae66-4e13-85a8-a31cd69f12eb",
               "useForCreation": true,
               "defaultValue": null,
               "name": "value",
               "multiple": "false",
               "format": null,
               "description": "The property value",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "1fdd0381-bd0f-4f52-be91-8cc94bda55e7",
         "name": "ROI annotation",
         "description": "A region of interest on a picture",
         "fields": [
            {
               "jsondocId": "4f34ba28-c300-4eff-a77b-4284c3b6a337",
               "useForCreation": false,
               "defaultValue": null,
               "name": "area",
               "multiple": "false",
               "format": null,
               "description": "The annotation area",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "21cad8e1-fd56-4a69-b464-9fa73273eb51",
               "useForCreation": false,
               "defaultValue": null,
               "name": "areaUnit",
               "multiple": "false",
               "format": null,
               "description": "The unit used for area (pixels²=1,micron²=3)",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5559750f-20f1-4a5b-a5a1-05acd098088f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "centroid",
               "multiple": "false",
               "format": null,
               "description": "X,Y coord of the annotation centroid",
               "presentInResponse": true,
               "type": "map(x,y)",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b204f966-30df-4e9d-84f8-af97336e78d4",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8423f7a2-3a40-40f4-9921-ba6637a729c0",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f3d3dd9f-dec9-42b4-a15c-2bdb0159a8aa",
               "useForCreation": false,
               "defaultValue": null,
               "name": "cropURL",
               "multiple": "false",
               "format": null,
               "description": "URL to get the annotation crop",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ec234df5-6304-4288-9d60-a7e52fbba1a8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ecda2646-970e-4910-9208-9b155fb3f244",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "geometryCompression",
               "multiple": "false",
               "format": null,
               "description": "The geometry compression rate used to simplify the annotation (during creation)",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c72d9f17-8234-4253-9be7-0bbc9ebe62f5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d83d79ac-411c-4993-afe2-fb0c66dcdf24",
               "useForCreation": true,
               "defaultValue": null,
               "name": "image",
               "multiple": "false",
               "format": null,
               "description": "The image on which the annotation is drawn",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "33d43a6d-e230-4c64-a5a5-c0aeaf9e4bfe",
               "useForCreation": false,
               "defaultValue": null,
               "name": "imageURL",
               "multiple": "false",
               "format": null,
               "description": "URL to go to the image",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c3103930-5bb0-48e6-baea-ae5719d083bd",
               "useForCreation": true,
               "defaultValue": null,
               "name": "location",
               "multiple": "false",
               "format": null,
               "description": "The annotation geometry (shape) in WKT",
               "presentInResponse": true,
               "type": "string",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "d3abc516-9005-4137-8f44-f832bc9084c1",
               "useForCreation": false,
               "defaultValue": null,
               "name": "nbComments",
               "multiple": "false",
               "format": null,
               "description": "The number of comments added by a user on this annotation",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7bbfc629-7ce8-4b74-8f3b-5da95dcae250",
               "useForCreation": false,
               "defaultValue": null,
               "name": "perimeter",
               "multiple": "false",
               "format": null,
               "description": "The annotation perimeter",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "778dcf05-58ab-463f-aada-5d796df31990",
               "useForCreation": false,
               "defaultValue": null,
               "name": "perimeterUnit",
               "multiple": "false",
               "format": null,
               "description": "The unit used for perimeter (pixels=0,mm=2,)",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b96d429e-bf80-4785-9745-2eaeb2e22025",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project in which the annotation is drawn",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "6868bfc8-27bb-47f8-ae01-1d7f8829bd71",
               "useForCreation": false,
               "defaultValue": null,
               "name": "reviewed",
               "multiple": "false",
               "format": null,
               "description": "True if annotation has at least one review",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1c9721fa-65f9-4e9f-8e3a-39f447c71a53",
               "useForCreation": true,
               "defaultValue": null,
               "name": "slice",
               "multiple": "false",
               "format": null,
               "description": "The slice on which the annotation is drawn",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "b085f645-d289-40cb-98cb-80f0f30c0a1a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "smallCropURL",
               "multiple": "false",
               "format": null,
               "description": "URL to get a small annotation crop (<256px)",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "abd58191-6e60-427a-a097-068d8701f954",
               "useForCreation": true,
               "defaultValue": "[]",
               "name": "term",
               "multiple": "true",
               "format": null,
               "description": "List of term id mapped with this annotation",
               "presentInResponse": true,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "631c4c9d-8e00-4095-a4b9-ca78e88db3be",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7487cbf3-2cab-4b66-bbee-32994c87243d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "url",
               "multiple": "false",
               "format": null,
               "description": "URL to go to the annotation on the image",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ff791841-1bc8-4de8-ae4d-f826bea08181",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "User id that created this annotation",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "2f65432f-3f13-44cb-81ed-9aae3c256abd",
         "name": "Relation",
         "description": "Type of relation between two terms (e.g. term1 PARENT term2)",
         "fields": [
            {
               "jsondocId": "cf4ffb39-91de-4131-b0cf-be807f2a08aa",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c12ae8c8-0312-4386-b4f0-f8baa0d7e4fb",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d2742d3a-2491-4462-b1d5-783afe048695",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d47f6132-9e0b-4f9a-8f03-9756476c64f3",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3bac120f-e3d0-425a-8814-2aa48548a260",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7c8d8034-456b-4854-9a73-4e7c25451435",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The name of the relation",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "0ee93322-3dd8-45b2-be1a-0b16e7f31d36",
         "name": "Relation term",
         "description": "Relation between a term 1 , a term 2 and a relantion domain (e.g. term1 PARENT term2)",
         "fields": [
            {
               "jsondocId": "1c2e6aee-97c0-4c09-9478-9911243121da",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ca5a32a4-48b9-41f8-8dad-c200699e0c7a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "692fbf22-ba7c-4a53-8381-22790e6e2ae8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c01b6e05-7fc0-4db3-b5bc-fd5571f6d049",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b9436f0a-ad31-411a-9c16-fbc0a62c2fe3",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "98d6f1fc-acce-42dc-bcb3-6c124e64243a",
               "useForCreation": true,
               "defaultValue": null,
               "name": "relation",
               "multiple": "false",
               "format": null,
               "description": "The relation",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "2e994de7-07e5-4ebc-ace2-1172aac9a73f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "term1",
               "multiple": "false",
               "format": null,
               "description": "The first term",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "04df2e29-2f51-4bb0-8463-db6ab87cf28b",
               "useForCreation": true,
               "defaultValue": null,
               "name": "term2",
               "multiple": "false",
               "format": null,
               "description": "The second term",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "ebb321ac-29b0-4dd0-a9d8-5589330973a6",
         "name": "Reviewed annotation",
         "description": "A reviewed annotation is an user/algo-annotation validated by a user. When a user validate an user/algoannotation, we copy all data from the validated annotation to create the review annotation",
         "fields": [
            {
               "jsondocId": "2d5f09be-b344-4ca6-b254-7c344e5ebc4f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "area",
               "multiple": "false",
               "format": null,
               "description": "The annotation area",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "420e9011-3438-483e-b4b1-fefc3a730518",
               "useForCreation": false,
               "defaultValue": null,
               "name": "areaUnit",
               "multiple": "false",
               "format": null,
               "description": "The unit used for area (pixels²=1,micron²=3)",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "47bd6385-08fa-4d27-9202-b15275048833",
               "useForCreation": false,
               "defaultValue": null,
               "name": "centroid",
               "multiple": "false",
               "format": null,
               "description": "X,Y coord of the annotation centroid",
               "presentInResponse": true,
               "type": "map(x,y)",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1a67293a-cb18-4166-aa35-76431264ca8c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "77e1a85d-2495-4131-bd75-54311a4d13b9",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "43a60f2a-7e8d-4595-820a-d0c415cf482b",
               "useForCreation": false,
               "defaultValue": null,
               "name": "cropURL",
               "multiple": "false",
               "format": null,
               "description": "URL to get the annotation crop",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a4d98a98-49db-468f-b7e8-e5751196eab5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e10eb939-7232-425e-86b2-d7771a09d84a",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "geometryCompression",
               "multiple": "false",
               "format": null,
               "description": "The geometry compression rate used to simplify the annotation (during creation)",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0bbe0900-6913-45e2-8cf2-b246b02c3927",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "632e5a55-12ec-488d-924c-8257a8061e33",
               "useForCreation": true,
               "defaultValue": null,
               "name": "image",
               "multiple": "false",
               "format": null,
               "description": "The image on which the annotation is drawn",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "d0e79abf-9b3e-4e23-9fa4-6debc01e5fcd",
               "useForCreation": false,
               "defaultValue": null,
               "name": "imageURL",
               "multiple": "false",
               "format": null,
               "description": "URL to go to the image",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "72dce3ff-dc3c-4670-b478-7c5397350241",
               "useForCreation": true,
               "defaultValue": null,
               "name": "location",
               "multiple": "false",
               "format": null,
               "description": "The annotation geometry (shape) in WKT",
               "presentInResponse": true,
               "type": "string",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "02e190a4-e50c-40ef-a4a1-395e4450b65f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "nbComments",
               "multiple": "false",
               "format": null,
               "description": "The number of comments added by a user on this annotation",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0e27294b-75f4-4b16-b5aa-3b77bedd3b8d",
               "useForCreation": true,
               "defaultValue": null,
               "name": "parentClassName",
               "multiple": "false",
               "format": null,
               "description": "Annotation type that has been reviewed (algo/user)",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "986d90ee-9baf-49d8-8abe-248c63f10a73",
               "useForCreation": true,
               "defaultValue": null,
               "name": "parentIdent",
               "multiple": "false",
               "format": null,
               "description": "Annotation id that has been reviewed",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "216b95a3-89e9-480d-993e-bcba43a4f387",
               "useForCreation": false,
               "defaultValue": null,
               "name": "perimeter",
               "multiple": "false",
               "format": null,
               "description": "The annotation perimeter",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0ff21510-e5b8-49c2-a6f1-d73e7339c407",
               "useForCreation": false,
               "defaultValue": null,
               "name": "perimeterUnit",
               "multiple": "false",
               "format": null,
               "description": "The unit used for perimeter (pixels=0,mm=2,)",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "158f698c-80bc-4353-b513-3725aafc286d",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project in which the annotation is drawn",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "5fe4e2a8-29fe-4f35-bdaf-abaa5d4270ee",
               "useForCreation": true,
               "defaultValue": "current user",
               "name": "reviewUser",
               "multiple": "false",
               "format": null,
               "description": "User that review the based annotation",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "61efb209-5f32-46b5-93f2-4b259090ea0c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "reviewed",
               "multiple": "false",
               "format": null,
               "description": "Always true",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d22356bc-c6a6-4698-a5b6-f4b700ada34f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "slice",
               "multiple": "false",
               "format": null,
               "description": "The slice on which the annotation is drawn",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "e4946c40-3ca3-48be-aaf9-83d2aaece2c1",
               "useForCreation": false,
               "defaultValue": null,
               "name": "smallCropURL",
               "multiple": "false",
               "format": null,
               "description": "URL to get a small annotation crop (<256px)",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8ee9c5a3-78db-47bf-84bb-ac8a6dc53a9e",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "status",
               "multiple": "false",
               "format": null,
               "description": "Status for the reviewed",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "444417c2-4a0d-4283-a019-dd4a08a531c9",
               "useForCreation": true,
               "defaultValue": "[]",
               "name": "term",
               "multiple": "true",
               "format": null,
               "description": "List of term id mapped with this annotation",
               "presentInResponse": true,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ede8e2e0-5d5d-45ae-ac8c-152fb826e65e",
               "useForCreation": true,
               "defaultValue": "[]",
               "name": "terms",
               "multiple": "true",
               "format": null,
               "description": "List of term id mapped with this annotation",
               "presentInResponse": true,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "761fe44b-0e6b-4732-96b9-6b581bb9cf7e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c353eb9f-fa6c-4d33-9239-821761c8eb69",
               "useForCreation": false,
               "defaultValue": null,
               "name": "url",
               "multiple": "false",
               "format": null,
               "description": "URL to go to the annotation on the image",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8491a4b2-13fc-4bda-bf2a-b25136e50976",
               "useForCreation": false,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "User that created the based annotation",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "1a90a79d-3719-4c89-bbfe-aa5f97e404ed",
         "name": "Sample",
         "description": "A sample is a source of image. This is a real thing: blood, a mouse lung,...",
         "fields": [
            {
               "jsondocId": "5b237070-9ef1-4a5b-ae3b-1f84702a7a80",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e152dfb9-7ca7-4555-bf4f-5f54e790a72d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5ffba3ae-daf4-4f3f-86c4-1752ae8363c8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "dbbaa9b0-2af1-44c8-93aa-8abfe24b663e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7d3e346b-fa84-45b2-968d-5385084b6f54",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "20c7a2c9-ee3f-4368-b0af-b1e8715d5354",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "Sample name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "02b853e4-7ee9-4bb1-beff-b13e9975b923",
         "name": "Search engine filter",
         "description": "A SearchEngineFilter is a re-usable filter for the SearchEngine. It contains the words searched and the restrictions (domain types or attributes) with others parameters",
         "fields": [
            {
               "jsondocId": "aff8de9d-3765-4349-be7f-8162594adacb",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "82b26842-5204-4c98-af0e-6c672f3dfdce",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "176df54b-8f49-4261-b964-cb794d5921c0",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "cd40b0ac-9eeb-4891-a082-5ec39af0694a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "51ff89cf-400b-452b-89c3-1dbf4a4a80dc",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ea0dcf6e-fc7e-4bbd-9982-4320597070a9",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The name of the filter",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "c54645ad-9ef7-4ba6-aa6d-8803f24f51fb",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The author of the filter",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "3aff1e72-e171-4d65-8b68-928d841f3377",
               "useForCreation": true,
               "defaultValue": null,
               "name": "filters",
               "multiple": "false",
               "format": null,
               "description": "json with the param of the search",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "475789f1-2b1b-42f2-8600-c44cff6a8efa",
         "name": "Sec role",
         "description": "A user role on the full app (user, admin, guest,...)",
         "fields": [
            {
               "jsondocId": "fa95e29a-b3fd-4dd4-91ea-4e86a8e24ef5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0b92bf21-2fd8-4f49-8a62-bf7fb9e15d67",
               "useForCreation": true,
               "defaultValue": null,
               "name": "authority",
               "multiple": "false",
               "format": null,
               "description": "The role name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "864e8ab7-b600-4ce0-9cde-1a79ffff162b",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "04ca2bed-9055-4629-a9b5-48aaf93b52d5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": false,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8fa40c77-4008-4a56-92f3-1c2b8e76399f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": false,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "14827ffa-a0d5-4c09-b1ad-8c61b72e2564",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": false,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "3dd53ced-1789-414a-b5e9-7080c5bf0cba",
         "name": "Sec user",
         "description": "A secure user",
         "fields": [
            {
               "jsondocId": "487a87f4-4f7f-45a4-9554-3e35a3520a04",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6a2f481e-4d62-47a2-87d1-066e5e0343da",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "54d43b7a-26e1-4460-841f-62eaa532adc6",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "04d9251a-ce6d-4100-8ab5-75994702cd07",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "39f7d0dd-96c1-4649-9984-d99352d6bc8c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b24a0217-2487-4a32-acf5-f1b284b3699d",
               "useForCreation": true,
               "defaultValue": null,
               "name": "username",
               "multiple": "false",
               "format": null,
               "description": "The username of the user",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "83ef744c-9ae7-4deb-b646-f9762a9508ff",
               "useForCreation": true,
               "defaultValue": null,
               "name": "origin",
               "multiple": "false",
               "format": null,
               "description": "The way this user was created.",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "c4e1cc1f-022c-4554-bba3-bca7a8bfd916",
               "useForCreation": false,
               "defaultValue": null,
               "name": "algo",
               "multiple": "false",
               "format": null,
               "description": "If true, user is a userjob",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c6506324-7e37-4e31-b2db-cc2ed6082e5b",
               "useForCreation": false,
               "defaultValue": null,
               "name": "accountExpired",
               "multiple": "false",
               "format": null,
               "description": "If true, account is expired",
               "presentInResponse": false,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "cdfdecf0-c001-41ef-98a0-fd876836435f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "accountLocked",
               "multiple": "false",
               "format": null,
               "description": "If true, account is locked",
               "presentInResponse": false,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b0d888db-dfc8-4866-8561-5447beea3c53",
               "useForCreation": false,
               "defaultValue": null,
               "name": "enabled",
               "multiple": "false",
               "format": null,
               "description": "If true, account is enabled",
               "presentInResponse": false,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "270af199-26ea-4d7b-9e19-8d546d5f7b01",
               "useForCreation": true,
               "defaultValue": null,
               "name": "password",
               "multiple": "false",
               "format": null,
               "description": "The user password",
               "presentInResponse": false,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "c490c65e-e31f-464d-bb7c-133711f4cf0e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "passwordExpired",
               "multiple": "false",
               "format": null,
               "description": "If true, password is expired",
               "presentInResponse": false,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7ce07879-0612-484b-90e0-29318860df52",
               "useForCreation": true,
               "defaultValue": "A generated key",
               "name": "privateKey",
               "multiple": "false",
               "format": null,
               "description": "The user private key",
               "presentInResponse": false,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9d3e98cc-37f0-4a5d-9897-ecd9ca1322df",
               "useForCreation": true,
               "defaultValue": "A generated key",
               "name": "publicKey",
               "multiple": "false",
               "format": null,
               "description": "The user public key",
               "presentInResponse": false,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "9091eeab-70b7-4510-9c48-78097c5552c7",
         "name": "Sec user sec role",
         "description": "User - role link. A user may have many role (USER, ADMIN, GUEST)",
         "fields": [
            {
               "jsondocId": "06cd89b4-ee41-4f2f-bf6c-8c6e909a2d88",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c1ac66d7-4c9d-444e-91bc-11b0fc1795ab",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5be103b7-17cc-451f-8652-a12e2f293d2f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a4d68d50-09ce-44e2-afa8-16c4b75bbe75",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b2b38fc2-2154-4967-9962-b0d23a7f61da",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e88134ce-e473-4d11-a36a-d356292d05ef",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a9a3b7dc-f095-410f-ad5b-591e9de9a712",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "role",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6d2c564b-d725-46b6-9405-f6f2f05cb7dd",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "authority",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f1a1287f-2f74-49dc-95fd-3431f40588d3",
               "useForCreation": true,
               "defaultValue": null,
               "name": "secRole",
               "multiple": "false",
               "format": null,
               "description": "The role id",
               "presentInResponse": false,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "f94231dc-4287-48ec-b871-7862633bb99e",
               "useForCreation": true,
               "defaultValue": null,
               "name": "secUser",
               "multiple": "false",
               "format": null,
               "description": "The user id",
               "presentInResponse": false,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "5384b0d6-6bb1-48e0-a714-d38efa73b6da",
         "name": "Shared annotation",
         "description": "A shared annotation is a comment on a specific annotation.",
         "fields": [
            {
               "jsondocId": "81666168-2dbe-4de8-9bd0-e594fdbb029f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8f62a109-21e9-4af4-a4e2-7acc4c11e022",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8ab24dfa-87ae-476c-82f0-b1e229b488fa",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "93b8da74-2a4d-4bbb-aeb9-181f0b705198",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6c726fcb-a1e1-43e2-8e6c-a70069dcb3da",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0347877d-1404-4765-90cc-17cc9c18842c",
               "useForCreation": true,
               "defaultValue": null,
               "name": "comment",
               "multiple": "false",
               "format": null,
               "description": "Comment that will be share with other user",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "4c52663f-f43f-4873-aee5-65ecbf21229a",
               "useForCreation": true,
               "defaultValue": null,
               "name": "sender",
               "multiple": "false",
               "format": null,
               "description": "User that write the comment",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "21ce0783-c901-45d5-ac6d-c5a884f2313c",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "senderName",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3a377944-9553-4b99-a12b-1cb38d69119a",
               "useForCreation": true,
               "defaultValue": null,
               "name": "annotationIdent",
               "multiple": "false",
               "format": null,
               "description": "Id of the commented annotation ",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "86538f9b-c608-4305-b3e0-9a823d71205c",
               "useForCreation": true,
               "defaultValue": null,
               "name": "annotationClassName",
               "multiple": "false",
               "format": null,
               "description": "Class name of the commented annotation ",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "976f6c33-749f-4746-b027-8676dc8b4f20",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "receivers",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "ed1fa2fe-3fcc-4ef4-abcf-3306eb6040e4",
         "name": "Slice Instance",
         "description": "A slice instance of a N-dimensional image",
         "fields": [
            {
               "jsondocId": "0c4f7704-2e2b-4b82-b221-8570422d4add",
               "useForCreation": true,
               "defaultValue": null,
               "name": "baseSlice",
               "multiple": "false",
               "format": null,
               "description": "The abstract slice",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "841ce62e-2738-4271-82e4-9be3983441b0",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d02e59e8-7746-4d26-85ad-547b15cbcc90",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "348b2765-327e-4983-8008-e501f6daf354",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9ab0e539-4547-4917-908f-83ae777d21d9",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "61c45bd7-563a-4e94-b9a3-892e0ca17bf0",
               "useForCreation": true,
               "defaultValue": null,
               "name": "image",
               "multiple": "false",
               "format": null,
               "description": "The image instance",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "64e1d7cf-1b5a-4136-9849-19cf3662316e",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "988cb455-94f5-4629-90ee-e14a4a72032b",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "16b84df2-a54a-4670-ad81-f1442e7c671b",
         "name": "Software",
         "description": "Software is an application that can read/add/update/delete data from cytomine. Each time a software is launch, we create a job instance",
         "fields": [
            {
               "jsondocId": "f5369f1b-228d-4919-8335-403658b56d46",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "438bc66c-4c4d-4608-ae07-c9985d75b002",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5aa7597d-a15f-49f5-8a7c-44195aacfda6",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9c7cd472-2072-4e9a-b310-d01bdb7c5d36",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f75a39b6-2691-4d27-b4e6-10dd191185b2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "73777f95-d8a3-4c2f-8a9a-d321a8bdf8cd",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The software name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "3336f1dd-7fde-45b3-9f2e-a9e6ef1a67ef",
               "useForCreation": true,
               "defaultValue": null,
               "name": "softwareUserRepository",
               "multiple": "false",
               "format": null,
               "description": "The software's software user repository",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "461e4340-06f6-4fe3-b4a9-55a13162608a",
               "useForCreation": true,
               "defaultValue": null,
               "name": "defaultProcessingServer",
               "multiple": "false",
               "format": null,
               "description": "The software's default processing server",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "45402aef-9f13-49c2-8e40-00a04f9c0da6",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "resultName",
               "multiple": "false",
               "format": null,
               "description": "For UI client: Type of result page. We load a specific page for each software to print data (charts, listing,...)",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8154593e-73c5-4db9-b33d-362d174d2b2e",
               "useForCreation": true,
               "defaultValue": null,
               "name": "executeCommand",
               "multiple": "false",
               "format": null,
               "description": "The command used to execute the piece of software",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "45a54ab6-626a-49c6-b8fb-3e4b07097c1f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "pullingCommand",
               "multiple": "false",
               "format": null,
               "description": "The command used to retrieve the image",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "987ed9fb-b5fb-4842-91b4-66fcf4c686e2",
               "useForCreation": true,
               "defaultValue": null,
               "name": "deprecated",
               "multiple": "false",
               "format": null,
               "description": "Flag used to identify the validity of a piece of software",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "bea9878a-3f79-4b2a-8d45-5a57cfb5cacc",
               "useForCreation": true,
               "defaultValue": null,
               "name": "softwareVersion",
               "multiple": "false",
               "format": null,
               "description": "The version",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "6032d2ae-ee85-4657-9687-bf5f44045692",
               "useForCreation": false,
               "defaultValue": null,
               "name": "fullName",
               "multiple": "false",
               "format": null,
               "description": "Full name, including version.",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "2494f0fb-2d74-4819-bdc6-afbcdd0fb9fc",
               "useForCreation": false,
               "defaultValue": null,
               "name": "executable",
               "multiple": "false",
               "format": null,
               "description": "True if it can be executed by Cytomine",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "983af08c-eded-4548-9a50-65ab6b519cf7",
               "useForCreation": false,
               "defaultValue": null,
               "name": "parameters",
               "multiple": "true",
               "format": null,
               "description": "List of 'software parameter' for this software (sort by index asc)",
               "presentInResponse": true,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c7b86141-7bec-4fa6-bc67-6029d0837c24",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfJob",
               "multiple": "false",
               "format": null,
               "description": "The number of job for this software",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "22bc0356-e4d5-404a-80df-18d1d38be106",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfNotLaunch",
               "multiple": "false",
               "format": null,
               "description": "The number of job not launch for this software",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "dcf17879-b1cd-4cb9-a489-26f3027f3c1e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfInQueue",
               "multiple": "false",
               "format": null,
               "description": "The number of job in queue for this software",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5d217de2-10f8-486d-87e1-6708a60526a2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfRunning",
               "multiple": "false",
               "format": null,
               "description": "The number of job currently running for this software",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "07b8f7a9-3a14-4c4a-8c4f-fa7d643e7a41",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfSuccess",
               "multiple": "false",
               "format": null,
               "description": "The number of job finished with success for this software",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b65b2a98-5518-4d7d-9c2b-4f1b79f2aefb",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfFailed",
               "multiple": "false",
               "format": null,
               "description": "The number of job failed for this software",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7e8c1070-104f-425a-9cd4-ebec76e5c293",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfIndeterminate",
               "multiple": "false",
               "format": null,
               "description": "The number of job in indeterminate status for this software",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5cc50b49-45e0-41e2-804b-15047f376a3c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfWait",
               "multiple": "false",
               "format": null,
               "description": "The number of job waiting for this software",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d1934565-4d85-4fa3-9728-af3b3a8e34c6",
               "useForCreation": false,
               "defaultValue": null,
               "name": "numberOfKilled",
               "multiple": "false",
               "format": null,
               "description": "The number of job killed for this software",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "50f81d02-31b8-4dc0-a849-31297aa1497a",
         "name": "Software parameter",
         "description": "A parameter for a software. It's a template to create job parameter. When job is init, we create job parameter list based on software parameter list.",
         "fields": [
            {
               "jsondocId": "e8a6ae1b-4d79-4a06-9398-6cce497bff65",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "838be7d3-2bf4-40ec-9eba-7160f75d3205",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a33c0d52-e46e-4202-b415-14edc381db7f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1a0533e8-e9c2-4e56-b88b-2ffa19fdfc73",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a5901cef-77cd-4260-953b-cde701350ec3",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1c98d793-1077-4fde-8654-6ec6a904d66f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The parameter name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "8441120e-e9d5-4e22-8750-b74e5b91a40b",
               "useForCreation": true,
               "defaultValue": null,
               "name": "type",
               "multiple": "false",
               "format": null,
               "description": "The parameter data type (Number, String, Date, Boolean, Domain (e.g: image instance id,...), ListDomain )",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "09a16758-450a-4985-9d87-323bea957dc2",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "defaultParamValue",
               "multiple": "false",
               "format": null,
               "description": "Default value when creating job parameter",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "705830b8-d0eb-4aed-99e9-0094570587bb",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "required",
               "multiple": "false",
               "format": null,
               "description": "Flag if value is mandatory",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ad40a5b3-80b1-4f8c-ac44-cd5430cb1c04",
               "useForCreation": true,
               "defaultValue": null,
               "name": "software",
               "multiple": "false",
               "format": null,
               "description": "The software of the parameter",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "994f422c-4f79-473c-9a97-4f2ac5fc4c93",
               "useForCreation": true,
               "defaultValue": "-1",
               "name": "index",
               "multiple": "false",
               "format": null,
               "description": "Index for parameter position. When launching software, parameter will be send ordered by index (asc).",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "feeec411-fc35-4d90-bba1-83896f82620c",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "uri",
               "multiple": "false",
               "format": null,
               "description": "Used for UI. If parameter has '(List)Domain' type, the URI will provide a list of choice. E.g. if uri is 'api/project.json', the choice list will be cytomine project list",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "399d30fd-3305-4a1d-8be9-30b4b504035e",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "uriPrintAttribut",
               "multiple": "false",
               "format": null,
               "description": "Used for UI. JSON Fields to print in choice list. E.g. if uri is api/project.json and uriPrintAttribut is 'name', the choice list will contains project name ",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "55548dab-72e8-4be4-a477-8f4ceddefe8b",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "uriSortAttribut",
               "multiple": "false",
               "format": null,
               "description": "Used for UI. JSON Fields used to sort choice list. E.g. if uri is api/project.json and uriSortAttribut is 'id', projects will be sort by id (not by name) ",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "2a59c0aa-2edc-4624-bd3c-3ba91a325ba0",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "setByServer",
               "multiple": "false",
               "format": null,
               "description": "Indicated if the field is autofilled by the server",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b5e340a8-4bcc-40dd-8551-f9089138de8a",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "serverParameter",
               "multiple": "false",
               "format": null,
               "description": "Indicates if the field is a parameter used by a processingServer",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f9fd53ca-ff81-4a23-bc7c-739c0f19749b",
               "useForCreation": true,
               "defaultValue": null,
               "name": "humanName",
               "multiple": "false",
               "format": null,
               "description": "The parameter name in a human readable form",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "e6d72399-1e69-419a-8755-94eaa8448615",
               "useForCreation": true,
               "defaultValue": null,
               "name": "valueKey",
               "multiple": "false",
               "format": null,
               "description": "The placeholder for parameter in the command line of software. By default, [NAME]",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "5701ccd8-159d-469c-90a3-f895db0ddddd",
               "useForCreation": true,
               "defaultValue": null,
               "name": "commandLineFlag",
               "multiple": "false",
               "format": null,
               "description": "The optional command line flag to put before parameter value in the command line.",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "ab40b91d-db07-4180-8788-7171e360745e",
         "name": "Software parameter constraint",
         "description": "The association between a software parameter and a parameter constraint",
         "fields": [
            {
               "jsondocId": "5f562698-06ae-489b-bd8b-2ef9cfcbeb41",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1c972f45-82fc-4ee8-90d9-43d0f888b21a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d083c408-b0df-442c-b3cb-c947d9eebfae",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "80237866-16cb-4385-b977-4161e7f582f4",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e6530bb3-1f8c-426e-83f7-9c030d9d3465",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5c30f6df-fcc6-418c-91a2-0523f0fba0df",
               "useForCreation": true,
               "defaultValue": null,
               "name": "value",
               "multiple": "false",
               "format": null,
               "description": "The value af a given constraint",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "6d946e1c-a7c7-40b9-93ef-a8416ef54502",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "parameterConstraint",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0592ed6a-e46f-4b3c-acef-d9cb3be7fb91",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "softwareParameter",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "5a0c7f13-6313-410a-a783-5c67b9af4ea6",
         "name": "Software project",
         "description": "A link between a software and a project. We can add a software to many projects",
         "fields": [
            {
               "jsondocId": "f807a86f-f243-4676-9377-25152bf4ab66",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1644281e-d202-4d12-a64a-7ca96babc355",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "52eec2a7-5845-43d3-8455-1f019c3dfa82",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7ec8004d-9377-4b36-aa3d-77380efcbe9c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b4b5a4c3-c05e-4e52-92f2-16421ee927fd",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "4f0c71a7-5338-45f4-9917-7a23d3e82c46",
               "useForCreation": true,
               "defaultValue": null,
               "name": "software",
               "multiple": "false",
               "format": null,
               "description": "The software",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "30a4b0ad-1b9f-4ce2-b747-39cbcc2ef69c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The name of the software",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "96d52f5c-bb23-4fbf-a29b-f4ab37d71e2a",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "softwareVersion",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f20aa667-7c47-44eb-9ae3-b3d77b0f67d7",
               "useForCreation": false,
               "defaultValue": null,
               "name": "fullName",
               "multiple": "false",
               "format": null,
               "description": "Full name, including version.",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "22475075-566e-4071-a0b3-d2cd1de3a0b5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deprecated",
               "multiple": "false",
               "format": null,
               "description": "Flag used to identify the validity of a piece of software",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ed4d6b98-23d9-4b77-bb6a-96e1dc5dc175",
               "useForCreation": false,
               "defaultValue": null,
               "name": "executable",
               "multiple": "false",
               "format": null,
               "description": "True if it can be executed by Cytomine",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d726a905-fb70-4042-af2c-13248e83f77f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "bbbbc6cb-3ac1-40a5-961f-368518b4df04",
         "name": "Software user repository",
         "description": "Representation of a repository manager and its docker hub",
         "fields": [
            {
               "jsondocId": "6507e99d-e3e3-48ff-a9c2-5ec4b6cea06e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "fad537c8-bd29-4d20-bf9f-a0ebe4722d27",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d733e043-9734-404a-b74f-05926ef0367d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1eae5b93-06e5-48f9-bcf6-5216ce4db63a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "aa3e21fe-d8a4-4d82-b400-ed269c45a47c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "672ff714-ef63-4cea-b91f-a02f3c710a83",
               "useForCreation": true,
               "defaultValue": null,
               "name": "provider",
               "multiple": "false",
               "format": null,
               "description": "The provider name the user repository",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "fa7bdfb2-cf18-4bd7-b5f2-fd593e69e74d",
               "useForCreation": true,
               "defaultValue": null,
               "name": "username",
               "multiple": "false",
               "format": null,
               "description": "The username of the user repository",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "6247795e-f90b-472c-b38a-e2a3e179fc95",
               "useForCreation": true,
               "defaultValue": null,
               "name": "dockerUsername",
               "multiple": "false",
               "format": null,
               "description": "The docker username associated to the software repository",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "74af5e1e-4cba-4c25-84e5-21d4126fda2c",
               "useForCreation": true,
               "defaultValue": null,
               "name": "prefix",
               "multiple": "false",
               "format": null,
               "description": "The prefix used to identify a software repository",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "405acf64-b904-48c3-a65a-d94b09111cbf",
         "name": "Storage",
         "description": "A virtual directory where uploaded files are stored. It is owned by a human user and can be shared with other human users.",
         "fields": [
            {
               "jsondocId": "27d5d8d2-d8fd-4dd4-adc4-d77b27ab135a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "52efbcb9-7ede-44a4-b2b3-aeb1917301a4",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "fa9409f0-309f-4087-be2a-e1861e38cc82",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "014f3e8b-aa3d-4990-95e2-386fd271c5fb",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "993b7e3a-7f1b-4520-a71a-21dd7d0ddacc",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "26c3a6b0-409e-429e-8022-6ee9021e7b8c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The storage owner, which has administration rights on the domain.",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "50add3a4-ef26-4f7a-bc82-37437625ff6c",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The storage name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "3313c146-09c9-4587-9a62-1a29f1153d04",
         "name": "Tag",
         "description": "A flag that can be associated to a Cytomine domain.",
         "fields": [
            {
               "jsondocId": "cd6eedad-1bfa-422d-8072-0609897c567c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0799b5ab-3125-4848-a317-4bc305e50ecb",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "4558f650-ef88-4788-88ba-18e56dff9729",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d01940d9-8c12-4b14-909f-788eb9387c12",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a2ec720f-0597-457e-8923-0f2e8816f46d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a987022f-51bb-4c08-8b88-bf5031124f47",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The tag name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "97fb0273-e488-4935-ab75-2209b58fefaa",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "user that created the tag",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "eb6df6b4-942e-4846-bf82-37826b77cab0",
               "useForCreation": false,
               "defaultValue": null,
               "name": "creatorName",
               "multiple": "false",
               "format": null,
               "description": "The username of the creator",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "6d0e0028-e235-46e9-b0d2-4be60432e0c3",
         "name": "Tag domain association",
         "description": "A flag that can be associated to a Cytomine domain.",
         "fields": [
            {
               "jsondocId": "eff96dec-5d84-402f-8f96-0a4c1e270870",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "62bfdda2-c324-4e22-99cf-f55d95f37515",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "42c33396-86be-4317-9866-efa17ff365d2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "98edbaed-312c-4805-b387-b0cbda6acb2e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "dbfc9a54-0686-4f8b-8a04-12fda34f8495",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "163a1bff-4876-41c9-b625-c50a6d1780dd",
               "useForCreation": true,
               "defaultValue": null,
               "name": "domainIdent",
               "multiple": "false",
               "format": null,
               "description": "The domain identifier (id)",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "6641871d-136e-4407-aaab-a2e9115330b2",
               "useForCreation": true,
               "defaultValue": null,
               "name": "domainClassName",
               "multiple": "false",
               "format": null,
               "description": "The domain class",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "cda6894f-3e7b-48d5-a1ae-ae3ae9ca5918",
               "useForCreation": true,
               "defaultValue": null,
               "name": "tag",
               "multiple": "false",
               "format": null,
               "description": "The tag id",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "8754971f-da0d-4de7-a707-368707f6f704",
               "useForCreation": false,
               "defaultValue": null,
               "name": "tagName",
               "multiple": "false",
               "format": null,
               "description": "The tag name",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "7f3339e1-1dc5-4aa9-8680-26cca9bd4bae",
         "name": "Term",
         "description": "Term description",
         "fields": [
            {
               "jsondocId": "e0c80fd3-dd2c-4f99-90af-835f6f55a481",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8700a5fc-2997-45f7-8507-643c557649ad",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "82e141ef-20b4-4ee1-8d42-5c4ce3459c1a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "4f7985fc-95cd-4c2e-9a35-7d0563b4b5ec",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "233b1d83-a0c3-4684-8504-1b40bf335dc9",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7ed7a721-9000-4929-b49c-cfc93853d5f5",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The term name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "30dba700-d13e-46d2-85ac-1d387ab5e0bd",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "comment",
               "multiple": "false",
               "format": null,
               "description": "A comment about the term",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1b8ab366-ff37-40f9-b5fc-fa0f2409576f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "ontology",
               "multiple": "false",
               "format": null,
               "description": "The ontology that store the term",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "ef862881-26b6-4628-97e3-7ff316b782ee",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "rate",
               "multiple": "false",
               "format": null,
               "description": "Undefined",
               "presentInResponse": true,
               "type": "Undefined",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "68c4aa01-ef0d-45eb-a2c6-6f9f43703faf",
               "useForCreation": false,
               "defaultValue": null,
               "name": "parent",
               "multiple": "false",
               "format": null,
               "description": "The parent term id of this annotation",
               "presentInResponse": true,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f28cd9df-689c-4183-9b16-8699cfc40d0f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "color",
               "multiple": "false",
               "format": null,
               "description": "The color associated, in HTML format (e.g : RED = #FF0000)",
               "presentInResponse": false,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "174e467c-c4b2-4b6b-aa3b-62d9a6d4b393",
         "name": "Track",
         "description": "A track is a group of annotations in different slices of a same image.",
         "fields": [
            {
               "jsondocId": "a675d412-6084-418e-b7c2-11b55ec0257e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d095b3cc-216f-4ee3-b98e-a59c67b5d54a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7b342a27-fbc1-489f-bcad-2a0f8bd3023e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "211611b2-8e65-48a3-813e-f3ac0be2655c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d1af937e-4257-47df-a41a-eff6d291b780",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3dfb644f-dce5-4438-a771-588e4f987534",
               "useForCreation": true,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The track name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "d4986ba0-9503-4aef-8dc0-eda26fbda0c1",
               "useForCreation": true,
               "defaultValue": null,
               "name": "color",
               "multiple": "false",
               "format": null,
               "description": "The color associated to the track",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "0022d782-0f5d-4563-996f-bd68522b4a86",
               "useForCreation": true,
               "defaultValue": null,
               "name": "image",
               "multiple": "false",
               "format": null,
               "description": "The image on which the track is drawn",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "5c950259-808e-4c1a-a365-99f126269425",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project in which the track is drawn",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "2cb67f0f-570c-4918-b076-a3e034f2cd90",
         "name": "Uploaded file",
         "description": "A file uploaded on the server",
         "fields": [
            {
               "jsondocId": "816119c4-28cd-4c46-8627-8796f4cd13a1",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0cd39a1f-574a-43a1-b088-d0bee35ae352",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "2a5d790f-31a3-42fa-9a49-3d39845107d9",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7cf60fa7-0d19-4476-a788-321cdcdfcc55",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9f0bc3b1-e067-4bd4-8a4c-f4787d0ba235",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7eeed574-a675-4ef9-9c6f-d4594b865a9c",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The uploader",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "d7e2ba8c-14de-4255-b634-0e8469037f5b",
               "useForCreation": true,
               "defaultValue": null,
               "name": "parent",
               "multiple": "false",
               "format": null,
               "description": "The parent uploaded file in the hierarchy",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "7167a9e9-ebd6-4a96-aa77-7da5f47a389f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "imageServer",
               "multiple": "false",
               "format": null,
               "description": "The image server managing the file",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "960206dd-8b0e-4910-ac5b-22e7f8b0cf45",
               "useForCreation": true,
               "defaultValue": null,
               "name": "storage",
               "multiple": "false",
               "format": null,
               "description": "The virtual storage where the file is uploaded",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "74562619-cda1-420e-8286-0c25d9e38b7a",
               "useForCreation": true,
               "defaultValue": null,
               "name": "originalFilename",
               "multiple": "false",
               "format": null,
               "description": "The original filename, including extension",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "4dac83df-9dc0-4ec0-a205-28374c40f6b4",
               "useForCreation": true,
               "defaultValue": null,
               "name": "filename",
               "multiple": "false",
               "format": null,
               "description": "The internal filename path, including extension",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "f5c881ea-35d1-4105-becd-7f77f50c2f8b",
               "useForCreation": true,
               "defaultValue": null,
               "name": "ext",
               "multiple": "false",
               "format": null,
               "description": "Extension name",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "3552007c-8e1a-4536-9c80-5f4346f75b62",
               "useForCreation": true,
               "defaultValue": null,
               "name": "contentType",
               "multiple": "false",
               "format": null,
               "description": "File content type",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "391320e5-9971-494e-ad08-c33c052e9b0e",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "size",
               "multiple": "false",
               "format": null,
               "description": "File size",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "93ed0ede-5f95-44f3-9be2-df038847e787",
               "useForCreation": false,
               "defaultValue": null,
               "name": "path",
               "multiple": "false",
               "format": null,
               "description": "The internal path of the file",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6ecb978b-a11b-46a0-827c-73f07e5c099a",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "status",
               "multiple": "false",
               "format": null,
               "description": "File status",
               "presentInResponse": true,
               "type": "Int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "12222cb1-2377-4f0a-867e-62656bd3d595",
               "useForCreation": false,
               "defaultValue": null,
               "name": "statusText",
               "multiple": "false",
               "format": null,
               "description": "Textual file status",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "08466452-8468-441b-83ad-465870826db7",
               "useForCreation": true,
               "defaultValue": null,
               "name": "projects",
               "multiple": "false",
               "format": null,
               "description": "List of projects (id) that will have the image, if it can be deployed",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "83721a1e-84c0-4f06-8023-d58c6efcfd5d",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "lTree",
               "multiple": "false",
               "format": null,
               "description": "Hierarchical tree of uploaded files",
               "presentInResponse": false,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "79170e97-4821-4dd3-afdc-df0985461ab1",
         "name": "User",
         "description": "A cytomine human user",
         "fields": [
            {
               "jsondocId": "f69c5361-846e-481f-b88c-534616740e8e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9516be36-9f15-46bf-9848-228f319af413",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "cc4d946b-066b-423f-80a2-375ade9cb2b1",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "cbbb7ca0-c5ae-4aeb-88fd-ad627396ddec",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "cfe9bf27-5d8f-485f-9a42-cf619c67c035",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "23b1e4ca-23d4-47cb-b1c3-2ec413ebd6fa",
               "useForCreation": true,
               "defaultValue": null,
               "name": "username",
               "multiple": "false",
               "format": null,
               "description": "The username of the user",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "04dd5b26-7f60-42bb-a180-bb1e4cd4de26",
               "useForCreation": true,
               "defaultValue": null,
               "name": "origin",
               "multiple": "false",
               "format": null,
               "description": "The way this user was created.",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "a1def673-cbac-41ca-942b-466cade60e1a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "algo",
               "multiple": "false",
               "format": null,
               "description": "If true, user is a userjob",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0bb2dcdd-0304-4589-9b05-5505a597e7de",
               "useForCreation": true,
               "defaultValue": null,
               "name": "firstname",
               "multiple": "false",
               "format": null,
               "description": "The firstname of the user",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "3dea55b8-d310-41b0-bb91-786059cccf07",
               "useForCreation": true,
               "defaultValue": null,
               "name": "lastname",
               "multiple": "false",
               "format": null,
               "description": "The lastname of the user",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "e58b978c-2b2a-4d44-981d-c4cd3a282fb3",
               "useForCreation": true,
               "defaultValue": null,
               "name": "email",
               "multiple": "false",
               "format": null,
               "description": "The email of the user",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "8ecc36f3-5f0c-4596-967f-e5041c39abb7",
               "useForCreation": true,
               "defaultValue": null,
               "name": "language",
               "multiple": "false",
               "format": null,
               "description": "The language of the user",
               "presentInResponse": true,
               "type": "string",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "b268948b-fdf1-4077-acbe-a5389b47478b",
               "useForCreation": true,
               "defaultValue": null,
               "name": "isDeveloper",
               "multiple": "false",
               "format": null,
               "description": "True if user is in developer mode",
               "presentInResponse": true,
               "type": "Boolean",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "0cb99802-99d9-4208-8b54-64c0d1d80b0e",
               "useForCreation": true,
               "defaultValue": "A generated key",
               "name": "publicKey",
               "multiple": "false",
               "format": null,
               "description": "The user public key",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3512d9c7-7115-4a50-8855-156411e378ad",
               "useForCreation": true,
               "defaultValue": "A generated key",
               "name": "privateKey",
               "multiple": "false",
               "format": null,
               "description": "The user private key",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7a785cae-6e95-49a7-8812-859b9c4347d8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "passwordExpired",
               "multiple": "false",
               "format": null,
               "description": "If true, password is expired",
               "presentInResponse": false,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3888e24e-0be3-40be-985c-9c2bb36d59c2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "enabled",
               "multiple": "false",
               "format": null,
               "description": "If true, account is enabled",
               "presentInResponse": false,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "51274db6-8eaf-4397-8434-5266d449d174",
               "useForCreation": true,
               "defaultValue": null,
               "name": "color",
               "multiple": "false",
               "format": null,
               "description": "NOT USED.",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "b693bf2c-1a22-4994-83d3-d78325d3df63",
               "useForCreation": false,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "(ONLY VISIBLE WHEN DOING GET /api/user/id.format service) True if the user is NOT ADMIN and is USER ",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6e5d92b3-e142-4096-8c6b-06ab1acac6c8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "accountExpired",
               "multiple": "false",
               "format": null,
               "description": "If true, account is expired",
               "presentInResponse": false,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7c8dd6ca-6ff2-4d09-ac82-f2306acaf42a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "accountLocked",
               "multiple": "false",
               "format": null,
               "description": "If true, account is locked",
               "presentInResponse": false,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a96fbbdf-838f-4aaa-a4b9-bdf6c61f04a1",
               "useForCreation": false,
               "defaultValue": null,
               "name": "admin",
               "multiple": "false",
               "format": null,
               "description": "(ONLY VISIBLE WHEN DOING GET /api/user/id.format service) True if the user is ADMIN ",
               "presentInResponse": false,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a72b6c5b-1133-4641-a0a9-19e1a8a23d17",
               "useForCreation": true,
               "defaultValue": null,
               "name": "creator",
               "multiple": "false",
               "format": null,
               "description": "User that created this user. Its parent.",
               "presentInResponse": false,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "2ced9859-b77e-412b-9a87-25a52eaaab5f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "ghest",
               "multiple": "false",
               "format": null,
               "description": "(ONLY VISIBLE WHEN DOING GET /api/user/id.format service) True if the user is NOT ADMIN, NOT USER but a simple GHEST ",
               "presentInResponse": false,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a7f395f3-e348-46c9-ae0c-0cff7532a306",
               "useForCreation": true,
               "defaultValue": null,
               "name": "password",
               "multiple": "false",
               "format": null,
               "description": "The user password",
               "presentInResponse": false,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "705ec895-5e0c-48df-9c74-3f8bae75207d",
         "name": "User annotation",
         "description": "An annotation created by a user",
         "fields": [
            {
               "jsondocId": "6d2362d7-bba4-41d3-bf32-3d4ee0189d52",
               "useForCreation": false,
               "defaultValue": null,
               "name": "area",
               "multiple": "false",
               "format": null,
               "description": "The annotation area",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "959f8410-a972-4e19-a0f6-277bdcecb94e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "areaUnit",
               "multiple": "false",
               "format": null,
               "description": "The unit used for area (pixels²=1,micron²=3)",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "33ebad64-002b-4b80-ada7-771d90b09f42",
               "useForCreation": false,
               "defaultValue": null,
               "name": "centroid",
               "multiple": "false",
               "format": null,
               "description": "X,Y coord of the annotation centroid",
               "presentInResponse": true,
               "type": "map(x,y)",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3042aaf4-16dd-4c3b-96fc-7a51a5121b30",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9f2ed94c-f760-4de7-8953-4262d0ae2fc8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "countReviewedAnnotations",
               "multiple": "false",
               "format": null,
               "description": "The number of reviewed annotations for this annotation",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8b8b367f-5dc9-490d-84fc-2564df58ebef",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "ac4a4d15-39a2-4110-8751-4d943b3528a3",
               "useForCreation": false,
               "defaultValue": null,
               "name": "cropURL",
               "multiple": "false",
               "format": null,
               "description": "URL to get the annotation crop",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "73650009-ecb1-40f0-8b9c-f24750f1572b",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "45de8b68-83d8-423d-a2e9-670b7c84f6f2",
               "useForCreation": true,
               "defaultValue": "Undefined",
               "name": "geometryCompression",
               "multiple": "false",
               "format": null,
               "description": "The geometry compression rate used to simplify the annotation (during creation)",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c3a77cdf-0ba8-427b-bdef-d16f7536de34",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b3939840-e710-4896-94d8-57ca01458366",
               "useForCreation": true,
               "defaultValue": null,
               "name": "image",
               "multiple": "false",
               "format": null,
               "description": "The image on which the annotation is drawn",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "b987d970-0654-41eb-8695-06e076aac069",
               "useForCreation": false,
               "defaultValue": null,
               "name": "imageURL",
               "multiple": "false",
               "format": null,
               "description": "URL to go to the image",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "2e0f25c7-ae64-4239-8c24-92149ab93d00",
               "useForCreation": true,
               "defaultValue": null,
               "name": "location",
               "multiple": "false",
               "format": null,
               "description": "The annotation geometry (shape) in WKT",
               "presentInResponse": true,
               "type": "string",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "aa7b586a-0829-4120-82fb-20d668c55568",
               "useForCreation": false,
               "defaultValue": null,
               "name": "nbComments",
               "multiple": "false",
               "format": null,
               "description": "The number of comments added by a user on this annotation",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0ae0ac36-9421-4355-8189-166ca2b58db0",
               "useForCreation": false,
               "defaultValue": null,
               "name": "perimeter",
               "multiple": "false",
               "format": null,
               "description": "The annotation perimeter",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5cf9d39d-2111-463a-8ba0-fa3c0a35c3f4",
               "useForCreation": false,
               "defaultValue": null,
               "name": "perimeterUnit",
               "multiple": "false",
               "format": null,
               "description": "The unit used for perimeter (pixels=0,mm=2,)",
               "presentInResponse": true,
               "type": "Integer",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "62694b7b-0887-4ec3-b916-ffb134dd5340",
               "useForCreation": true,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "The project in which the annotation is drawn",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "ac9962ac-af45-4da7-af78-647bcb87d347",
               "useForCreation": false,
               "defaultValue": null,
               "name": "reviewed",
               "multiple": "false",
               "format": null,
               "description": "True if annotation has at least one review",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a07bf314-ac2c-4ead-935a-2e79bf2948f8",
               "useForCreation": true,
               "defaultValue": null,
               "name": "slice",
               "multiple": "false",
               "format": null,
               "description": "The slice on which the annotation is drawn",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "0ec224cb-2dcb-4617-a874-2e8ebdfebd09",
               "useForCreation": false,
               "defaultValue": null,
               "name": "smallCropURL",
               "multiple": "false",
               "format": null,
               "description": "URL to get a small annotation crop (<256px)",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "50136d3b-3b05-46d4-8c7f-f2da7d6e7ccc",
               "useForCreation": true,
               "defaultValue": "[]",
               "name": "term",
               "multiple": "true",
               "format": null,
               "description": "List of term id mapped with this annotation",
               "presentInResponse": true,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "42780ed5-f27f-4758-b7de-d631b42e0349",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a67c4376-f131-4726-82aa-93cb051c9f22",
               "useForCreation": false,
               "defaultValue": null,
               "name": "url",
               "multiple": "false",
               "format": null,
               "description": "URL to go to the annotation on the image",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1b70c872-3f93-47c9-81cf-36617ada8e6c",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "User id that created this annotation",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "5d5877d0-4be1-45d1-8b6c-1da29331c80e",
         "name": "User group",
         "description": "Link between a group and a user in database",
         "fields": [
            {
               "jsondocId": "8007dc51-bd18-4b8e-811d-612494bc5fb2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b71a2f81-7ad6-4507-a68f-4ace8e5ede2e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1de899fa-991f-4df7-8d83-94015057d734",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "16714258-7f1a-482a-bca1-29c71c14626c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "2f8b8680-45e1-43ac-b622-09c7dd304c83",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a43418a2-fdab-4146-9b39-e5709636c143",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "The user id",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "3d31768f-a701-42f1-ae7a-63a0463590c7",
               "useForCreation": true,
               "defaultValue": null,
               "name": "group",
               "multiple": "false",
               "format": null,
               "description": "The group id",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "4189b85a-9d7f-4fd9-8c3e-89d187116c7b",
         "name": "User job",
         "description": "A cytomine software user",
         "fields": [
            {
               "jsondocId": "665b8f45-0042-46d9-a2d9-643c4545b63f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "36f92525-a79b-4b83-8656-03878ea48146",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "560d0af6-ba72-47f5-a133-02923e9f5bc5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f9604a43-25c1-48c2-8f4d-8c328b541c9c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b9b9d31a-4e51-4adf-8300-7880cb5b1582",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "123dfb8b-f47c-4bd1-be7b-c0b18f42cffa",
               "useForCreation": true,
               "defaultValue": null,
               "name": "username",
               "multiple": "false",
               "format": null,
               "description": "The username of the user",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "0b1bfaff-bfad-4632-adaf-2f14e646c1e3",
               "useForCreation": true,
               "defaultValue": null,
               "name": "origin",
               "multiple": "false",
               "format": null,
               "description": "The way this user was created.",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "226cef25-d622-46cf-b637-990536b0ad6f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "algo",
               "multiple": "false",
               "format": null,
               "description": "If true, user is a userjob",
               "presentInResponse": true,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "03fd32ff-5a72-4131-8ce0-e5e418efdbe2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "humanUsername",
               "multiple": "false",
               "format": null,
               "description": "The username of the user that launch this job",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "43a7b881-f375-4823-8635-2749d6f6c272",
               "useForCreation": true,
               "defaultValue": "A generated key",
               "name": "publicKey",
               "multiple": "false",
               "format": null,
               "description": "The user public key",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "419c7fec-afa4-4d8a-a34b-222f93c9cfa8",
               "useForCreation": true,
               "defaultValue": "A generated key",
               "name": "privateKey",
               "multiple": "false",
               "format": null,
               "description": "The user private key",
               "presentInResponse": true,
               "type": "String",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "2d485ac3-7690-4a5d-af42-373877b50c19",
               "useForCreation": true,
               "defaultValue": null,
               "name": "job",
               "multiple": "false",
               "format": null,
               "description": "The related job",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "354ec3c1-9d88-4cfe-89b5-39d03d6f2b49",
               "useForCreation": true,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "Human user that launch the job",
               "presentInResponse": true,
               "type": "long",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "40948a3c-0f94-456c-b2be-9e271b7ff65f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "rate",
               "multiple": "false",
               "format": null,
               "description": "The rate succes of the job",
               "presentInResponse": true,
               "type": "Double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "14322fbf-8cbf-4b23-91ce-08a82de00216",
               "useForCreation": false,
               "defaultValue": null,
               "name": "accountExpired",
               "multiple": "false",
               "format": null,
               "description": "If true, account is expired",
               "presentInResponse": false,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "45210cd5-3216-456f-b131-240ed08a75a0",
               "useForCreation": false,
               "defaultValue": null,
               "name": "accountLocked",
               "multiple": "false",
               "format": null,
               "description": "If true, account is locked",
               "presentInResponse": false,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a4837579-07a2-4e93-9925-77e5f02f26d4",
               "useForCreation": false,
               "defaultValue": null,
               "name": "enabled",
               "multiple": "false",
               "format": null,
               "description": "If true, account is enabled",
               "presentInResponse": false,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "77a01793-3386-4381-b72f-ba75bdd1b01f",
               "useForCreation": true,
               "defaultValue": null,
               "name": "password",
               "multiple": "false",
               "format": null,
               "description": "The user password",
               "presentInResponse": false,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "fb31cec5-04d2-445d-8471-300c18dbd199",
               "useForCreation": false,
               "defaultValue": null,
               "name": "passwordExpired",
               "multiple": "false",
               "format": null,
               "description": "If true, password is expired",
               "presentInResponse": false,
               "type": "Boolean",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "e9f54267-bb2b-4e4b-9d73-4f828ddf9dde",
         "name": "[annotation_listing]",
         "description": "Response for annotation search",
         "fields": [
            {
               "jsondocId": "5dbda2e8-43d1-44fd-8a49-eede5e0eb633",
               "useForCreation": false,
               "defaultValue": null,
               "name": "annotationTerms",
               "multiple": "true",
               "format": null,
               "description": "(If params showTerm=true) the annotationterms list id",
               "presentInResponse": false,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "72911902-7cba-4bd9-adeb-789075dcf911",
               "useForCreation": false,
               "defaultValue": null,
               "name": "area",
               "multiple": "false",
               "format": null,
               "description": "(If params showGis=true) the area size of the annotation",
               "presentInResponse": false,
               "type": "double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "57807623-ef8e-4cdf-9ee9-068871100c32",
               "useForCreation": false,
               "defaultValue": null,
               "name": "areaUnit",
               "multiple": "false",
               "format": null,
               "description": "(If params showGis=true) the area unit (pixels²=1,micron²=3)",
               "presentInResponse": false,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "831d1dec-9728-45f4-b617-790e6677c204",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "Annotation class name",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f7be0296-c82b-443a-9ac7-706644cb07d4",
               "useForCreation": false,
               "defaultValue": null,
               "name": "container",
               "multiple": "false",
               "format": null,
               "description": "(If params showMeta=true) project annotation id",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b7ff88e1-d2e7-43d5-b2c5-634e2e230076",
               "useForCreation": false,
               "defaultValue": null,
               "name": "countComments",
               "multiple": "false",
               "format": null,
               "description": "(If params showMeta=true) number of comments on this annotation",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7057fe47-d362-479b-92d5-fc60fbcdfa41",
               "useForCreation": false,
               "defaultValue": null,
               "name": "countReviewedAnnotations",
               "multiple": "false",
               "format": null,
               "description": "(If params showMeta=true and reviewed=false) the number of reviewed annotation from this annotation",
               "presentInResponse": false,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f74d8535-daf3-424c-a7c8-4dcaa120ebad",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "(If params showMeta=true) annotation create date",
               "presentInResponse": false,
               "type": "date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "155e5e9f-a4ff-4be4-ae16-891734b8c716",
               "useForCreation": false,
               "defaultValue": null,
               "name": "creator",
               "multiple": "false",
               "format": null,
               "description": "(If params showUser=true) the username of the creator",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "99f68171-75d5-47b4-adb9-74a7c58c5d34",
               "useForCreation": false,
               "defaultValue": null,
               "name": "cropURL",
               "multiple": "false",
               "format": null,
               "description": "(If params showMeta=true) URL to get the crop annotation (image view that frame the annotation)",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "89f53707-91ad-41c3-8e7a-6fa16b4e0416",
               "useForCreation": false,
               "defaultValue": null,
               "name": "firstname",
               "multiple": "false",
               "format": null,
               "description": "(If params showUser=true) the firstname of the creator",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "3c852144-fcb3-4af6-99df-b2c8842fe144",
               "useForCreation": false,
               "defaultValue": null,
               "name": "geometryCompression",
               "multiple": "false",
               "format": null,
               "description": "(If params showMeta=true) Geometry compression rate used to simplify",
               "presentInResponse": false,
               "type": "double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1dce3cb4-720d-46fc-8789-b432ebf79bde",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "Annotation id",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f4720d6e-caa6-403e-ad05-3c3180c7d9f2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "idExpectedTerm",
               "multiple": "false",
               "format": null,
               "description": "(If params showAlgo=true) the expected term (real term add by user previously)",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9dcd99b3-aa17-4eb1-9a9e-2ca60f6003af",
               "useForCreation": false,
               "defaultValue": null,
               "name": "idTerm",
               "multiple": "false",
               "format": null,
               "description": "(If params showAlgo=true) the predicted term for the annotation",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "46fb5656-7ab4-4d4c-ac61-4c30cdebe224",
               "useForCreation": false,
               "defaultValue": null,
               "name": "image",
               "multiple": "false",
               "format": null,
               "description": "(If params showMeta=true), image annotation id)",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "abd87f3f-3f4d-4a3b-983b-6617ae4a327b",
               "useForCreation": false,
               "defaultValue": null,
               "name": "imageURL",
               "multiple": "false",
               "format": null,
               "description": "(If params showMeta=true) URL to go to the image on the webapp",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e6f849de-9508-4398-affc-4affc539299f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "lastname",
               "multiple": "false",
               "format": null,
               "description": "(If params showUser=true) the lastname of the creator",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e10deb17-cebb-4469-9186-2597ab08670e",
               "useForCreation": false,
               "defaultValue": null,
               "name": "originalfilename",
               "multiple": "false",
               "format": null,
               "description": "(If params showImage=true) the image filename",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "80dbd68a-adb6-4ffe-8894-2da33c3375f8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "parentIdent",
               "multiple": "false",
               "format": null,
               "description": "(If params showMeta=true, only for reviewed) the annotation parent of the reviewed annotation",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f7fc8a3d-3f1c-4dbd-b9ea-ca726db972a2",
               "useForCreation": false,
               "defaultValue": null,
               "name": "perimeter",
               "multiple": "false",
               "format": null,
               "description": "(If params showGis=true) the perimeter size of the annotation",
               "presentInResponse": false,
               "type": "double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1be05228-a2b0-41fa-ab98-6671b988e1a4",
               "useForCreation": false,
               "defaultValue": null,
               "name": "perimeterUnit",
               "multiple": "false",
               "format": null,
               "description": "(If params showGis=true) the perimeter unit (pixels=0,mm=2,)",
               "presentInResponse": false,
               "type": "double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "200eedcf-67ff-437b-bf10-4459dbad02f4",
               "useForCreation": false,
               "defaultValue": null,
               "name": "project",
               "multiple": "false",
               "format": null,
               "description": "(If params showMeta=true) project annotation id",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b11faeb3-d301-44a5-ac48-39694fc06410",
               "useForCreation": false,
               "defaultValue": null,
               "name": "rate",
               "multiple": "false",
               "format": null,
               "description": "(If params showTerm=true) the reliability of the prediction",
               "presentInResponse": false,
               "type": "double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "20bf8dad-3fcb-4c52-8f85-73330dc319c3",
               "useForCreation": false,
               "defaultValue": null,
               "name": "reviewUser",
               "multiple": "false",
               "format": null,
               "description": "(If params showGis=true) the user id thatreview",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "56c1f362-4c5b-4b2f-9940-edf6e9c0a1dc",
               "useForCreation": false,
               "defaultValue": null,
               "name": "reviewed",
               "multiple": "false",
               "format": null,
               "description": "(If params showMeta=true) annotation is reviewed",
               "presentInResponse": false,
               "type": "int",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "800d3451-4214-48ea-9591-86716cb93974",
               "useForCreation": false,
               "defaultValue": null,
               "name": "smallCropURL",
               "multiple": "false",
               "format": null,
               "description": "(If params showMeta=true)  URL to get the small crop annotation (image view that frame the annotation)",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "403392c1-ca2b-4668-9f25-e29314e2e5e8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "term",
               "multiple": "true",
               "format": null,
               "description": "(If params showTerm=true) the term list id",
               "presentInResponse": false,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "5c2adec1-74fd-4489-877c-7cdf43bcc427",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "(If params showMeta=true) annotation update date",
               "presentInResponse": false,
               "type": "date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d5206436-7d89-45c7-9ce9-98e9acdf8f84",
               "useForCreation": false,
               "defaultValue": null,
               "name": "url",
               "multiple": "false",
               "format": null,
               "description": "(If params showMeta=true) URL to go to the annotation on the webapp",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c89fd43c-dbaf-46c5-b0dd-5f08ba558cc1",
               "useForCreation": false,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "(If params showMeta=true) user id that create annotation (if reveiwed annotation, user that create the annotation that has been validated)",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "cc842503-58c6-41b2-9004-618139b3d56d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "userTerm",
               "multiple": "true",
               "format": null,
               "description": "(If params showTerm=true) the user id group by term id",
               "presentInResponse": false,
               "type": "map",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "df055d76-7b9a-4eba-b843-9f3eb1ec558b",
               "useForCreation": false,
               "defaultValue": null,
               "name": "wkt",
               "multiple": "false",
               "format": null,
               "description": "(If params showWKT=true) the full polygon form in WKT",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "02198329-6901-4a2f-bff9-9c29c54c2a6b",
               "useForCreation": false,
               "defaultValue": null,
               "name": "x",
               "multiple": "false",
               "format": null,
               "description": "(If params showGis=true) the annotation centroid x",
               "presentInResponse": false,
               "type": "double",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6fed2dfc-73fb-45bb-90c5-9ccaa26df226",
               "useForCreation": false,
               "defaultValue": null,
               "name": "y",
               "multiple": "false",
               "format": null,
               "description": "(If params showGis=true) the annotation centroid y",
               "presentInResponse": false,
               "type": "double",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "1d22eacb-83d5-48d3-a202-ff8aa4fa4966",
         "name": "[project_sharing_same_image]",
         "description": "Response for project sharing the same image (list)",
         "fields": [
            {
               "jsondocId": "6b550bfa-a572-4dae-98d0-3291b74167fc",
               "useForCreation": false,
               "defaultValue": null,
               "name": "admin",
               "multiple": "false",
               "format": null,
               "description": "User is admin or not",
               "presentInResponse": false,
               "type": "boolean",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "34f253b9-91ae-48d3-af29-c3bbc1e1fb4d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "imageinstanceId",
               "multiple": "false",
               "format": null,
               "description": "Image id",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "0b0f3892-3995-4851-85f6-d53cd5044260",
               "useForCreation": false,
               "defaultValue": null,
               "name": "layerId",
               "multiple": "false",
               "format": null,
               "description": "User id",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "9262848e-8607-42bc-bb60-63733c0bad33",
               "useForCreation": false,
               "defaultValue": null,
               "name": "layerName",
               "multiple": "false",
               "format": null,
               "description": "User name",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c70653c0-28b6-467b-b3e5-3844224b3003",
               "useForCreation": false,
               "defaultValue": null,
               "name": "projectId",
               "multiple": "false",
               "format": null,
               "description": "Project id",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "31bfd390-2daf-4256-bf90-8421521c2e50",
               "useForCreation": false,
               "defaultValue": null,
               "name": "projectName",
               "multiple": "false",
               "format": null,
               "description": "Project name",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "872b1273-fd2e-4129-af6d-5cae8dce3575",
         "name": "[search]",
         "description": "Response for search request",
         "fields": [
            {
               "jsondocId": "0ce78843-e384-479e-8cc6-bda768382d12",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "Domain class",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e9e67a68-fc04-4d55-a436-e819cb5a5f5c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "Domain creation timestamp",
               "presentInResponse": false,
               "type": "date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "a81fce5e-e5aa-48b4-bf57-605344553764",
               "useForCreation": false,
               "defaultValue": null,
               "name": "description",
               "multiple": "false",
               "format": null,
               "description": "Domain description text",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "35aa513e-20ce-49df-aed8-49c2875bb66f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "Domain id",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "832826b4-908e-47ce-bd65-4e91adc97cd8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "imageName",
               "multiple": "false",
               "format": null,
               "description": "Image (storing the domain) name. If domain is project, then null",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "2bbc0827-9696-4675-9a02-edef2f2f6a16",
               "useForCreation": false,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "Domain name",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "489793c9-cdf0-43ee-b44a-000fffaebba8",
               "useForCreation": false,
               "defaultValue": null,
               "name": "projectName",
               "multiple": "false",
               "format": null,
               "description": "Project (storing the domain) name",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c38d4d8b-8295-467a-92ca-a0fe7e4d7476",
               "useForCreation": false,
               "defaultValue": null,
               "name": "urlApi",
               "multiple": "false",
               "format": null,
               "description": "URL to get JSON data on the current domain",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "67fa44dd-a2fe-4bac-81fe-52e983f1bd9c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "urlGoTo",
               "multiple": "false",
               "format": null,
               "description": "URL to go to the domain on the webapp (GUI)",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "363bef8d-21ad-4aa4-ab59-b27cde0a026d",
               "useForCreation": false,
               "defaultValue": null,
               "name": "urlImage",
               "multiple": "true",
               "format": null,
               "description": "Domain thumb (if annotation: crop, if image: thumb, if project: null)",
               "presentInResponse": false,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "1deb01db-884f-4b5c-b20e-4b3c5fa9eae4",
               "useForCreation": false,
               "defaultValue": null,
               "name": "user",
               "multiple": "false",
               "format": null,
               "description": "Domain creator",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "b90ee328-1c36-4499-92a7-c7ec0cbb2e20",
               "useForCreation": false,
               "defaultValue": null,
               "name": "userfullname",
               "multiple": "false",
               "format": null,
               "description": "Domain creator name (Lastname Firstname)",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "6fec4f8b-4624-46e5-93a0-8aa64ea3f077",
         "name": "[search_engine_step1]",
         "description": "Response for search request v2 (STEP 1)",
         "fields": [
            {
               "jsondocId": "74445c02-46e3-408b-8ad9-c2a200a3169a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "className",
               "multiple": "false",
               "format": null,
               "description": "Domain class name",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e39ddebc-5e5f-4da4-a7d2-6b84d8ecf4c5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "Domain id",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "f65f1e51-5440-4a52-94ef-15092de1d2f3",
         "name": "[search_engine_step2]",
         "description": "Response for search request v2 (STEP 2)",
         "fields": [
            {
               "jsondocId": "a3b502b4-c8f0-4e8d-8358-11c43c8aad09",
               "useForCreation": false,
               "defaultValue": null,
               "name": "className",
               "multiple": "false",
               "format": null,
               "description": "Domain class name",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "e8cc15b6-b8db-46b4-86c9-490c82994b2c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "Domain id",
               "presentInResponse": false,
               "type": "long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "8bb12f33-d0b9-4527-b768-111d92bc2fdd",
               "useForCreation": false,
               "defaultValue": null,
               "name": "matching",
               "multiple": "false",
               "format": null,
               "description": "Domain data that match the request words (domain attribute, property, description,...)",
               "presentInResponse": false,
               "type": "List<Map>",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "831c0ad7-ce06-480e-992c-320099840a0c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "name",
               "multiple": "false",
               "format": null,
               "description": "The name of the resource (could be: name, filename, term,...)",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "d8b458f8-4f2b-4cf1-80e6-4a387b63dff3",
               "useForCreation": false,
               "defaultValue": null,
               "name": "url",
               "multiple": "false",
               "format": null,
               "description": "URL to go to this resource on the webapp",
               "presentInResponse": false,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "2d9cb5b6-e4ea-4288-b5e8-18198ba63ea9",
         "name": "[sequence_possibilties]",
         "description": "Response for sequence possibilities",
         "fields": [
            {
               "jsondocId": "581705af-1210-4fdf-a750-9fdaad1db625",
               "useForCreation": false,
               "defaultValue": null,
               "name": "c",
               "multiple": "true",
               "format": null,
               "description": "Range of possible channel index for image group",
               "presentInResponse": false,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f1aebfc8-7022-4f9d-8185-09a6e375986b",
               "useForCreation": false,
               "defaultValue": null,
               "name": "channel",
               "multiple": "true",
               "format": null,
               "description": "Image channel index",
               "presentInResponse": false,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c4cb8611-9fb6-4abe-b393-d310ffa898ed",
               "useForCreation": false,
               "defaultValue": null,
               "name": "imageGroup",
               "multiple": "true",
               "format": null,
               "description": "Image group id",
               "presentInResponse": false,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "45bc9c14-fddd-417b-867d-6f1eef37d78a",
               "useForCreation": false,
               "defaultValue": null,
               "name": "s",
               "multiple": "true",
               "format": null,
               "description": "Range of possible slice index for image group",
               "presentInResponse": false,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "56f6a0ba-6f58-4a48-bf5d-d604d1e6c0d5",
               "useForCreation": false,
               "defaultValue": null,
               "name": "slice",
               "multiple": "true",
               "format": null,
               "description": "Image slice index",
               "presentInResponse": false,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "f14e17b9-a226-4929-a86e-eef89dfdcfaa",
               "useForCreation": false,
               "defaultValue": null,
               "name": "t",
               "multiple": "true",
               "format": null,
               "description": "Range of possible time index for image group",
               "presentInResponse": false,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "27f9f704-2666-4bf4-8a25-f84f2bcee572",
               "useForCreation": false,
               "defaultValue": null,
               "name": "time",
               "multiple": "true",
               "format": null,
               "description": "Image time index",
               "presentInResponse": false,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "7cdc7665-4619-4202-832e-beb81f9e77de",
               "useForCreation": false,
               "defaultValue": null,
               "name": "z",
               "multiple": "true",
               "format": null,
               "description": "Range of possible zstack index for image group",
               "presentInResponse": false,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "c2e0345f-fb8a-41c5-96b5-6492ee301f6f",
               "useForCreation": false,
               "defaultValue": null,
               "name": "zStack",
               "multiple": "true",
               "format": null,
               "description": "Image zstack index",
               "presentInResponse": false,
               "type": "list",
               "mandatory": false,
               "allowedvalues": null
            }
         ]
      },
      {
         "jsondocId": "b30907bd-fbd2-4353-b46c-f31ac1414b7d",
         "name": "configuration",
         "description": "A key-value entry that save the configurations through the application",
         "fields": [
            {
               "jsondocId": "49a1d9e0-cdcd-44fc-a384-9ccf8271ae5c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "class",
               "multiple": "false",
               "format": null,
               "description": "The full class name of the domain",
               "presentInResponse": true,
               "type": "string",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "bca87f64-205e-428e-aac1-b71a010e1aeb",
               "useForCreation": false,
               "defaultValue": null,
               "name": "id",
               "multiple": "false",
               "format": null,
               "description": "The domain id",
               "presentInResponse": true,
               "type": "Long",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "245901cc-3f5b-48c2-a203-3ebb81a5fa6c",
               "useForCreation": false,
               "defaultValue": null,
               "name": "created",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain creation",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "6ecf1340-4f22-4862-be5a-fdc6222cc352",
               "useForCreation": false,
               "defaultValue": null,
               "name": "updated",
               "multiple": "false",
               "format": null,
               "description": "The date of the domain modification",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "04d248d0-b55e-4333-8750-a6d5349c8cb7",
               "useForCreation": false,
               "defaultValue": null,
               "name": "deleted",
               "multiple": "false",
               "format": null,
               "description": "When domain was removed from Cytomine",
               "presentInResponse": true,
               "type": "Date",
               "mandatory": false,
               "allowedvalues": null
            },
            {
               "jsondocId": "aac48da1-2a6d-4821-a48f-dcbd63b28a27",
               "useForCreation": true,
               "defaultValue": null,
               "name": "key",
               "multiple": "false",
               "format": null,
               "description": "The property key",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "079e4880-e9a7-46e6-8e50-e874f21eb622",
               "useForCreation": true,
               "defaultValue": null,
               "name": "value",
               "multiple": "false",
               "format": null,
               "description": "The property value",
               "presentInResponse": true,
               "type": "String",
               "mandatory": true,
               "allowedvalues": null
            },
            {
               "jsondocId": "95094f13-f48b-4ff0-a5a4-4dd5c4db5fc6",
               "useForCreation": true,
               "defaultValue": null,
               "name": "readingRole",
               "multiple": "false",
               "format": null,
               "description": "The minimum role needed to access to the configuration value",
               "presentInResponse": true,
               "type": "Role",
               "mandatory": true,
               "allowedvalues": null
            }
         ]
      }
   ],
   "version": "0.1"
}